require 'default.rb'
require 'soap/mapping'

module NetSuite

module DefaultMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsAccounting_2013_2ListsWebservicesNetsuiteCom = "urn:accounting_2013_2.lists.webservices.netsuite.com"
  NsBank_2013_2TransactionsWebservicesNetsuiteCom = "urn:bank_2013_2.transactions.webservices.netsuite.com"
  NsCommon_2013_2PlatformWebservicesNetsuiteCom = "urn:common_2013_2.platform.webservices.netsuite.com"
  NsCommunication_2013_2GeneralWebservicesNetsuiteCom = "urn:communication_2013_2.general.webservices.netsuite.com"
  NsCore_2013_2PlatformWebservicesNetsuiteCom = "urn:core_2013_2.platform.webservices.netsuite.com"
  NsCustomers_2013_2TransactionsWebservicesNetsuiteCom = "urn:customers_2013_2.transactions.webservices.netsuite.com"
  NsCustomization_2013_2SetupWebservicesNetsuiteCom = "urn:customization_2013_2.setup.webservices.netsuite.com"
  NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom = "urn:demandplanning_2013_2.transactions.webservices.netsuite.com"
  NsEmployees_2013_2ListsWebservicesNetsuiteCom = "urn:employees_2013_2.lists.webservices.netsuite.com"
  NsEmployees_2013_2TransactionsWebservicesNetsuiteCom = "urn:employees_2013_2.transactions.webservices.netsuite.com"
  NsFaults_2013_2PlatformWebservicesNetsuiteCom = "urn:faults_2013_2.platform.webservices.netsuite.com"
  NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom = "urn:filecabinet_2013_2.documents.webservices.netsuite.com"
  NsFinancial_2013_2TransactionsWebservicesNetsuiteCom = "urn:financial_2013_2.transactions.webservices.netsuite.com"
  NsGeneral_2013_2TransactionsWebservicesNetsuiteCom = "urn:general_2013_2.transactions.webservices.netsuite.com"
  NsInventory_2013_2TransactionsWebservicesNetsuiteCom = "urn:inventory_2013_2.transactions.webservices.netsuite.com"
  NsMarketing_2013_2ListsWebservicesNetsuiteCom = "urn:marketing_2013_2.lists.webservices.netsuite.com"
  NsMessages_2013_2PlatformWebservicesNetsuiteCom = "urn:messages_2013_2.platform.webservices.netsuite.com"
  NsPurchases_2013_2TransactionsWebservicesNetsuiteCom = "urn:purchases_2013_2.transactions.webservices.netsuite.com"
  NsRelationships_2013_2ListsWebservicesNetsuiteCom = "urn:relationships_2013_2.lists.webservices.netsuite.com"
  NsSales_2013_2TransactionsWebservicesNetsuiteCom = "urn:sales_2013_2.transactions.webservices.netsuite.com"
  NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom = "urn:scheduling_2013_2.activities.webservices.netsuite.com"
  NsSupplychain_2013_2ListsWebservicesNetsuiteCom = "urn:supplychain_2013_2.lists.webservices.netsuite.com"
  NsSupport_2013_2ListsWebservicesNetsuiteCom = "urn:support_2013_2.lists.webservices.netsuite.com"
  NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom = "urn:types.accounting_2013_2.lists.webservices.netsuite.com"
  NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom = "urn:types.common_2013_2.platform.webservices.netsuite.com"
  NsTypesCommunication_2013_2GeneralWebservicesNetsuiteCom = "urn:types.communication_2013_2.general.webservices.netsuite.com"
  NsTypesCore_2013_2PlatformWebservicesNetsuiteCom = "urn:types.core_2013_2.platform.webservices.netsuite.com"
  NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.customers_2013_2.transactions.webservices.netsuite.com"
  NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom = "urn:types.customization_2013_2.setup.webservices.netsuite.com"
  NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.demandplanning_2013_2.transactions.webservices.netsuite.com"
  NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom = "urn:types.employees_2013_2.lists.webservices.netsuite.com"
  NsTypesEmployees_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.employees_2013_2.transactions.webservices.netsuite.com"
  NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom = "urn:types.faults_2013_2.platform.webservices.netsuite.com"
  NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom = "urn:types.filecabinet_2013_2.documents.webservices.netsuite.com"
  NsTypesFinancial_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.financial_2013_2.transactions.webservices.netsuite.com"
  NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.inventory_2013_2.transactions.webservices.netsuite.com"
  NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom = "urn:types.marketing_2013_2.lists.webservices.netsuite.com"
  NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.purchases_2013_2.transactions.webservices.netsuite.com"
  NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom = "urn:types.relationships_2013_2.lists.webservices.netsuite.com"
  NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom = "urn:types.sales_2013_2.transactions.webservices.netsuite.com"
  NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom = "urn:types.scheduling_2013_2.activities.webservices.netsuite.com"
  NsTypesSupplychain_2013_2ListsWebservicesNetsuiteCom = "urn:types.supplychain_2013_2.lists.webservices.netsuite.com"
  NsTypesSupport_2013_2ListsWebservicesNetsuiteCom = "urn:types.support_2013_2.lists.webservices.netsuite.com"
  NsWebsite_2013_2ListsWebservicesNetsuiteCom = "urn:website_2013_2.lists.webservices.netsuite.com"

  EncodedRegistry.register(
    :class => NetSuite::Passport,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SsoPassport,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SsoPassport"),
    :schema_element => [
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"],
      ["partnerAccount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SsoCredentials,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SsoCredentials"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangePassword,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ChangePassword"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newPassword", "SOAP::SOAPString", [0, 1]],
      ["newPassword2", "SOAP::SOAPString", [0, 1]],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangeEmail,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmail"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newEmail", "SOAP::SOAPString"],
      ["newEmail2", "SOAP::SOAPString"],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::StatusDetail,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "StatusDetail"),
    :schema_element => [
      ["code", "NetSuite::StatusDetailCodeType"],
      ["message", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Status,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Status"),
    :schema_element => [
      ["statusDetail", "NetSuite::StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WsRole,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "WsRole"),
    :schema_element => [
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isLoggedInRole", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WsRoleList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "WsRoleList"),
    :schema_element => [
      ["wsRole", "NetSuite::WsRole[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NullField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "NullField"),
    :schema_element => [
      ["name", "SOAP::SOAPString[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]],
      ["searchRowList", "NetSuite::SearchRowList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncStatusResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "NetSuite::AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAllResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSavedSearchResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "NetSuite::RecordRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCustomizationIdResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "NetSuite::CustomizationRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "NetSuite::BaseRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RecordList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchRowList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowList"),
    :schema_element => [
      ["searchRow", "NetSuite::SearchRow[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RecordRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRefList"),
    :schema_element => [
      ["recordRef", "NetSuite::RecordRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BaseRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRefList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Duration,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Duration"),
    :schema_element => [
      ["timeSpan", "SOAP::SOAPDouble"],
      ["unit", "NetSuite::DurationUnit"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationRefList"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRecord"),
    :schema_element => [
      ["type", "NetSuite::InitializeType"],
      ["reference", "NetSuite::InitializeRef", [0, 1]],
      ["auxReference", "NetSuite::InitializeAuxRef", [0, 1]],
      ["referenceList", "NetSuite::InitializeRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRefList"),
    :schema_element => [
      ["initializeRef", "NetSuite::InitializeRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeAuxRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeAuxRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateInviteeStatusReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusReference"),
    :schema_element => [
      ["eventId", "NetSuite::RecordRef"],
      ["responseCode", "NetSuite::CalendarEventAttendeeResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAllRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSavedSearchRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "searchType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationType,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationType"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ListOrRecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LongCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPLong"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DoubleCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BooleanCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPBoolean"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::StringCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DateCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDateTime"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "NetSuite::ListOrRecordRef"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MultiSelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "NetSuite::ListOrRecordRef[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::CustomFieldRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchBooleanField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchStringField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchLongField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]],
      ["searchValue2", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDoubleField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDateField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateField"),
    :schema_element => [
      ["predefinedSearchValue", "NetSuite::SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
    :schema_element => [
      ["searchValue", "NetSuite::RecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["predefinedSearchValue", "NetSuite::SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "NetSuite::ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::SearchCustomField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnBooleanField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnBooleanField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnStringField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnStringField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnLongField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnLongField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnTextNumberField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnDoubleField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDoubleField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnDateField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDateField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnEnumSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnEnumSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::ListOrRecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchColumnCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::SearchColumnCustomField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemAvailabilityFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
    :schema_element => [
      ["item", "NetSuite::RecordRefList"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemAvailability,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailability"),
    :schema_element => [
      ["item", "NetSuite::RecordRef"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemAvailabilityList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
    :schema_element => [
      ["itemAvailability", "NetSuite::ItemAvailability[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetItemAvailabilityResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["itemAvailabilityList", "NetSuite::ItemAvailabilityList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRateFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRate"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef"],
      ["toSubsidiary", "NetSuite::RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRateList"),
    :schema_element => [
      ["budgetExchangeRate", "NetSuite::BudgetExchangeRate[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["budgetExchangeRateList", "NetSuite::BudgetExchangeRateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRate"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef"],
      ["toSubsidiary", "NetSuite::RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateList"),
    :schema_element => [
      ["consolidatedExchangeRate", "NetSuite::ConsolidatedExchangeRate[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["consolidatedExchangeRateList", "NetSuite::ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateFilter"),
    :schema_element => [
      ["baseCurrency", "NetSuite::RecordRef", [0, 1]],
      ["fromCurrency", "NetSuite::RecordRef", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRate_,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRate"),
    :schema_element => [
      ["baseCurrency", "NetSuite::RecordRef"],
      ["fromCurrency", "NetSuite::RecordRef"],
      ["exchangeRate", "SOAP::SOAPDouble"],
      ["effectiveDate", "SOAP::SOAPDateTime"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateList"),
    :schema_element => [
      ["currencyRate", "NetSuite::CurrencyRate_[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCurrencyRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["currencyRateList", "NetSuite::CurrencyRateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DataCenterUrls,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DataCenterUrls"),
    :schema_element => [
      ["restDomain", "SOAP::SOAPString"],
      ["webservicesDomain", "SOAP::SOAPString"],
      ["systemDomain", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["dataCenterUrls", "NetSuite::DataCenterUrls", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PostingTransactionSummaryField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryField"),
    :schema_element => [
      ["period", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "SOAP::SOAPBoolean", [0, 1]],
      ["parentItem", "SOAP::SOAPBoolean", [0, 1]],
      ["item", "SOAP::SOAPBoolean", [0, 1]],
      ["entity", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPBoolean", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PostingTransactionSummaryFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRefList", [0, 1]],
      ["account", "NetSuite::RecordRefList", [0, 1]],
      ["parentItem", "NetSuite::RecordRefList", [0, 1]],
      ["item", "NetSuite::RecordRefList", [0, 1]],
      ["entity", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRefList", [0, 1]],
      ["v_class", ["NetSuite::RecordRefList", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiary", "NetSuite::RecordRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PostingTransactionSummary,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummary"),
    :schema_element => [
      ["period", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["parentItem", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PostingTransactionSummaryList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryList"),
    :schema_element => [
      ["postingTransactionSummary", "NetSuite::PostingTransactionSummary[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "NetSuite::PostingTransactionSummaryList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueFieldDescription,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFieldDescription"),
    :schema_element => [
      ["recordType", "NetSuite::RecordType", [0, 1]],
      ["customRecordType", "NetSuite::RecordRef", [0, 1]],
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["filter", "NetSuite::GetSelectValueFilter", [0, 1]],
      ["filterByValueList", "NetSuite::GetSelectFilterByFieldValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFilter"),
    :schema_element => [
      ["filterValue", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectFilterByFieldValueList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValueList"),
    :schema_element => [
      ["filterBy", "NetSuite::GetSelectFilterByFieldValue[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectFilterByFieldValue,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValue"),
    :schema_element => [
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["internalId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetServerTimeResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeletedRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecord"),
    :schema_element => [
      ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["record", "NetSuite::BaseRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeletedRecordList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
    :schema_element => [
      ["deletedRecord", "NetSuite::DeletedRecord[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDeletedResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["deletedRecordList", "NetSuite::DeletedRecordList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDeletedFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
    :schema_element => [
      ["deletedDate", "NetSuite::SearchDateField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AttachContactReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachContactReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "NetSuite::BaseRef"],
      ["contact", "NetSuite::RecordRef"],
      ["contactRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AttachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "NetSuite::BaseRef"],
      ["attachedRecord", "NetSuite::BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DetachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DetachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DetachReference"),
    :schema_element => [
      ["detachFrom", "NetSuite::BaseRef"],
      ["detachedRecord", "NetSuite::BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SoapFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InsufficientPermissionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvalidAccountFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvalidCredentialsFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvalidSessionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExceededRequestLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExceededUsageLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExceededRecordCountFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvalidVersionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExceededRequestSizeFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "AsyncFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnexpectedErrorFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ApplicationInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "PartnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DocumentInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DocumentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Preferences,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "Preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchPreferences,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SessionResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SessionResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "NetSuite::RecordRef", [0, 1]],
      ["wsRoleList", ["NetSuite::WsRoleList", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WriteResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "WriteResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "NetSuite::BaseRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ReadResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ReadResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "NetSuite::Record", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WriteResponseList,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "WriteResponseList"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ReadResponseList,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ReadResponseList"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LoginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SsoLoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SsoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::MapSsoResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangePasswordResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangePasswordResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangeEmailResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmailResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LogoutResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LogoutResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AddResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AddListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpsertResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpsertListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeleteResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeleteListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMoreResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMoreWithIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchNextResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAllResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAllResponse"),
    :schema_element => [
      ["getAllResult", ["NetSuite::GetAllResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSavedSearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["NetSuite::GetSavedSearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCustomizationIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["NetSuite::GetCustomizationIdResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["NetSuite::GetSelectValueResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetItemAvailabilityResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["NetSuite::GetItemAvailabilityResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["NetSuite::GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["NetSuite::GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCurrencyRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateResponse"),
    :schema_element => [
      ["getCurrencyRateResult", ["NetSuite::GetCurrencyRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRateResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsResponse"),
    :schema_element => [
      ["getDataCenterUrlsResult", ["NetSuite::GetDataCenterUrlsResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrlsResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["NetSuite::GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetServerTimeResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["NetSuite::GetServerTimeResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AttachResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AttachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DetachResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DetachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateInviteeStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAsyncResultResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "NetSuite::AsyncResult"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncAddListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncUpdateListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncUpsertListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpsertListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncDeleteListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncGetListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncSearchResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncInitializeListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDeletedResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["NetSuite::GetDeletedResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LoginRequest"),
    :schema_element => [
      ["passport", "NetSuite::Passport"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SsoLoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SsoLoginRequest"),
    :schema_element => [
      ["ssoPassport", "NetSuite::SsoPassport"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::MapSsoRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
    :schema_element => [
      ["ssoCredentials", "NetSuite::SsoCredentials"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangePasswordRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangePasswordRequest"),
    :schema_element => [
      ["changePassword", "NetSuite::ChangePassword"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChangeEmailRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmailRequest"),
    :schema_element => [
      ["changeEmail", "NetSuite::ChangeEmail"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LogoutRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LogoutRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => NetSuite::AddRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeleteRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchRequest"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMoreRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMoreWithIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreWithIdRequest"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchNextRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpsertRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAllRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAllRequest"),
    :schema_element => [
      ["record", "NetSuite::GetAllRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSavedSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchRequest"),
    :schema_element => [
      ["record", "NetSuite::GetSavedSearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCustomizationIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdRequest"),
    :schema_element => [
      ["customizationType", "NetSuite::CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
    :schema_element => [
      ["fieldDescription", "NetSuite::GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetItemAvailabilityRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
    :schema_element => [
      ["itemAvailabilityFilter", "NetSuite::ItemAvailabilityFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateRequest"),
    :schema_element => [
      ["budgetExchangeRateFilter", "NetSuite::BudgetExchangeRateFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateRequest"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "NetSuite::ConsolidatedExchangeRateFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCurrencyRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateRequest"),
    :schema_element => [
      ["currencyRateFilter", "NetSuite::CurrencyRateFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDataCenterUrlsRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsRequest"),
    :schema_element => [
      ["account", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryRequest"),
    :schema_element => [
      ["fields", "NetSuite::PostingTransactionSummaryField"],
      ["filters", "NetSuite::PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetServerTimeRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => NetSuite::AttachRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AttachRequest"),
    :schema_element => [
      ["attachReference", "NetSuite::AttachReference"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DetachRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DetachRequest"),
    :schema_element => [
      ["detachReference", "NetSuite::DetachReference"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncAddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateInviteeStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncUpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncUpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpsertListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncDeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncGetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncInitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckAsyncStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAsyncResultRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GetDeletedRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
    :schema_element => [
      ["getDeletedFilter", "NetSuite::GetDeletedFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ShipAddress,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ShipAddress"),
    :schema_element => [
      ["shipAttention", "SOAP::SOAPString", [0, 1]],
      ["shipAddressee", "SOAP::SOAPString", [0, 1]],
      ["shipPhone", "SOAP::SOAPString", [0, 1]],
      ["shipAddr1", "SOAP::SOAPString", [0, 1]],
      ["shipAddr2", "SOAP::SOAPString", [0, 1]],
      ["shipAddr3", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "NetSuite::Country", [0, 1]],
      ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BillAddress,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BillAddress"),
    :schema_element => [
      ["billAttention", "SOAP::SOAPString", [0, 1]],
      ["billAddressee", "SOAP::SOAPString", [0, 1]],
      ["billPhone", "SOAP::SOAPString", [0, 1]],
      ["billAddr1", "SOAP::SOAPString", [0, 1]],
      ["billAddr2", "SOAP::SOAPString", [0, 1]],
      ["billAddr3", "SOAP::SOAPString", [0, 1]],
      ["billCity", "SOAP::SOAPString", [0, 1]],
      ["billState", "SOAP::SOAPString", [0, 1]],
      ["billZip", "SOAP::SOAPString", [0, 1]],
      ["billCountry", "NetSuite::Country", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PresentationItem,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PresentationItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["itemType", "NetSuite::PresentationItemType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
      ["basePrice", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Partners,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "Partners"),
    :schema_element => [
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["partnerRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCost,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCost"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["landedCostDataList", "NetSuite::LandedCostDataList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCostDataList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostDataList"),
    :schema_element => [
      ["landedCostData", "NetSuite::LandedCostData[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCostData,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostData"),
    :schema_element => [
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCostSummary,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostSummary"),
    :schema_element => [
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["source", "NetSuite::LandedCostSource", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSalesTeam,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeItem,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeItem"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["timeType", "NetSuite::TimeItemTimeType", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["hours", "NetSuite::Duration", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["hoursTotal", "NetSuite::Duration", [0, 1]],
      ["caseTaskEvent", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isUtilized", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductive", "SOAP::SOAPBoolean", [0, 1]],
      ["isExempt", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryDetail,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetail"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryAssignmentList", "NetSuite::InventoryAssignmentList", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RecurrenceDowMaskList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
    :schema_element => [
      ["recurrenceDowMask", "NetSuite::RecurrenceDow[]", [1, 7]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryAssignmentList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryAssignmentList"),
    :schema_element => [
      ["inventoryAssignment", "NetSuite::InventoryAssignment[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryAssignment,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryAssignment"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["issueInventoryNumber", "NetSuite::RecordRef", [0, 1]],
      ["receiptInventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["binNumber", "NetSuite::RecordRef", [0, 1]],
      ["toBinNumber", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryDetailSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetailSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryDetailSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetailSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntitySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contactRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contactSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employer", "NetSuite::SearchStringField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contactRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contactSource", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["boughtAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtDate", "NetSuite::SearchDateField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["ccExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccHolderName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["ccType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["classBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["companyName", "NetSuite::SearchStringField", [0, 1]],
      ["consolBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolDaysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["consolDepositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolOverdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["conversionDate", "NetSuite::SearchDateField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["creditHold", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["creditHoldOverride", "NetSuite::SearchBooleanField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateClosed", "NetSuite::SearchDateField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["defaultOrderPriority", "NetSuite::SearchDoubleField", [0, 1]],
      ["depositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["deptBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["drAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["explicitConversion", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["firstOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["firstSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["fxAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxConsolBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxConsolUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReportedLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["itemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["lastOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["monthlyClosing", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["onCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["orderedDate", "NetSuite::SearchDateField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["prospectDate", "NetSuite::SearchDateField", [0, 1]],
      ["pstExempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["receivablesAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reminderDate", "NetSuite::SearchDateField", [0, 1]],
      ["resaleNumber", "NetSuite::SearchStringField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shippingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["territory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["webLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["consolBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolDaysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["consolDepositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolOverdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["creditHold", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["creditHoldOverride", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["defaultOrderPriority", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["depositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["drAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["fxAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["groupPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["manualCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["monthlyClosing", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["onCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["receivablesAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["reminderDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shippingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["territory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["webLead", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["attendee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["calendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["instanceStart", "NetSuite::SearchDateField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isUpcomingEvent", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchStringField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["organizer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["response", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["attendee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["instanceEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["instanceStart", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["organizer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["recurrence", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["response", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isJobSummaryTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["milestone", "NetSuite::SearchLongField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["percentComplete", "NetSuite::SearchLongField", [0, 1]],
      ["percentTimeComplete", "NetSuite::SearchLongField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["timeRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accessLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dueDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isJobSummaryTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["milestone", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["order", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["percentComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["timeRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "NetSuite::SearchDateField", [0, 1]],
      ["competitor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOpen", "NetSuite::SearchLongField", [0, 1]],
      ["daysToClose", "NetSuite::SearchLongField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["expectedCloseDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["forecastType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["foreignProjectedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["foreignRangeHigh", "NetSuite::SearchDoubleField", [0, 1]],
      ["foreignRangeLow", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["probability", "NetSuite::SearchLongField", [0, 1]],
      ["projAltSalesAmt", "NetSuite::SearchDoubleField", [0, 1]],
      ["projectedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeHigh", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeHighAlt", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeLow", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeLowAlt", "NetSuite::SearchDoubleField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxPeriod", "NetSuite::RecordRef", [0, 1]],
      ["taxPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["tranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranDate", "NetSuite::SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranId", "NetSuite::SearchStringField", [0, 1]],
      ["winLossReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["wonBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OpportunitySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actionItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["closeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["competitor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["custType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysToClose", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["decisionMaker", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["expectedCloseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["foreignProjectedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeHigh", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeLow", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["period", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projAltSalesAmt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projectedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeHigh", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeHighAlt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeLow", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeLowAlt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["total", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranEstGrossProfitPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["weightedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["winLossReason", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["wonBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["alienNumber", "NetSuite::SearchStringField", [0, 1]],
      ["anniversary", "NetSuite::SearchDateField", [0, 1]],
      ["approvalLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["approver", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["authWorkDate", "NetSuite::SearchDateField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["billingClass", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["birthDate", "NetSuite::SearchDateField", [0, 1]],
      ["birthDay", "NetSuite::SearchDateField", [0, 1]],
      ["cContribution", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["commissionPlan", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["concurrentWebServicesUser", "NetSuite::SearchBooleanField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["deduction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["earning", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["education", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employeeStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["employeeType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["employeeTypeKpi", "NetSuite::SearchBooleanField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["ethnicity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["expenseLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["gender", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hireDate", "NetSuite::SearchDateField", [0, 1]],
      ["i9Verified", ["NetSuite::SearchBooleanField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobResource", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTemplate", "NetSuite::SearchBooleanField", [0, 1]],
      ["jobDescription", "NetSuite::SearchStringField", [0, 1]],
      ["laborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["lastPaidDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastReviewDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["maritalStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["nextReviewDate", "NetSuite::SearchDateField", [0, 1]],
      ["offlineAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["payFrequency", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permChangeDate", "NetSuite::SearchDateField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permissionChange", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["primaryEarningAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["primaryEarningItem", "NetSuite::SearchStringField", [0, 1]],
      ["primaryEarningType", "NetSuite::SearchStringField", [0, 1]],
      ["purchaseOrderApprovalLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["purchaseOrderApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["purchaseOrderLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["releaseDate", "NetSuite::SearchDateField", [0, 1]],
      ["residentStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roleChange", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roleChangeDate", "NetSuite::SearchDateField", [0, 1]],
      ["salesRep", "NetSuite::SearchBooleanField", [0, 1]],
      ["salesRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["socialSecurityNumber", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["supervisor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["supportRep", "NetSuite::SearchBooleanField", [0, 1]],
      ["timeApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["usePerquest", "NetSuite::SearchBooleanField", [0, 1]],
      ["useTimeData", "NetSuite::SearchBooleanField", [0, 1]],
      ["visaExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["visaType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["withholding", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workplace", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EmployeeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["alienNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["approvalLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["approver", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["authWorkDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billingClass", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["birthDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["birthDay", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["concurrentWebServicesUser", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["employeeStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["employeeType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["ethnicity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gender", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hireDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["i9Verified", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobResource", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSalesRep", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSupportRep", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTemplate", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastPaidDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastReviewDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["maritalStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nextReviewDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["offlineAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payFrequency", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permChangeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["permChangeLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permissionChange", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["primaryEarningAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["primaryEarningItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["primaryEarningType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["purchaseOrderApprovalLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["purchaseOrderApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrderLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["releaseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["residentStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["roleChange", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["roleChangeAction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["roleChangeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["salesRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["socialSecurityNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["supervisor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["timeApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["usePerquest", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useTimeData", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["visaExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["visaType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["workplace", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["owner", "NetSuite::SearchBooleanField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PhoneCallSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accessLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["awaitingReply", "NetSuite::SearchBooleanField", [0, 1]],
      ["caseNumber", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["closedDate", "NetSuite::SearchDateField", [0, 1]],
      ["company", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["escalateTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["helpDesk", "NetSuite::SearchBooleanField", [0, 1]],
      ["inboundEmail", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["issue", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastMessage", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastReopenedDate", "NetSuite::SearchDateField", [0, 1]],
      ["locked", "NetSuite::SearchBooleanField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["messageAuthor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["messageDate", "NetSuite::SearchDateField", [0, 1]],
      ["messageType", "NetSuite::SearchBooleanField", [0, 1]],
      ["v_module", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["origin", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["priority", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["product", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SupportCaseSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["awaitingReply", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["caseNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customerStage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["escalatee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["helpDesk", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["inboundEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issue", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["issueNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastMessageDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastReopenedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["v_module", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["origin", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["product", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["authorEmail", "NetSuite::SearchStringField", [0, 1]],
      ["bcc", "NetSuite::SearchStringField", [0, 1]],
      ["cc", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["hasAttachment", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["internalOnly", "NetSuite::SearchBooleanField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["messageDate", "NetSuite::SearchDateField", [0, 1]],
      ["messageType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipientEmail", "NetSuite::SearchStringField", [0, 1]],
      ["subject", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "MessageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["authorEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["bcc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["cc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["hasAttachment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalOnly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isEmailed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isIncoming", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["messageDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["messageType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["recipientEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subject", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["direction", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["note", "NetSuite::SearchStringField", [0, 1]],
      ["noteDate", "NetSuite::SearchDateField", [0, 1]],
      ["noteType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["direction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["note", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["noteDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["noteType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["recType", "NetSuite::RecordRef"],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModified", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["recType", "NetSuite::RecordRef"],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["cashFlowRateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["category1099Misc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["generalRateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["number", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cashFlowRateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["category1099Misc", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["generalRateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["number", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["defRev", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entity", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["incomeAcct", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["jeDoc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["postPeriod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["srcDoc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["srcDocDate", "NetSuite::SearchDateField", [0, 1]],
      ["srcTranPostPeriod", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["defRev", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jeDoc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["jeDocUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["postPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["srcDoc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["srcDocLine", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amorMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["amorPeriod", "NetSuite::SearchLongField", [0, 1]],
      ["amorStartOffset", "NetSuite::SearchLongField", [0, 1]],
      ["amorTermSrc", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["amorType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["contraAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["deferralAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["periodOffset", "NetSuite::SearchLongField", [0, 1]],
      ["targetAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["useForeignAmounts", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amorMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorStartOffset", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorTermSrc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contraAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["deferralAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["periodOffset", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["targetAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useForeignAmounts", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["inactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BinSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["inactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DepartmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DepartmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "DepartmentSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOffice", "NetSuite::SearchBooleanField", [0, 1]],
      ["makeInventoryAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["makeInventoryAvailableStore", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tranprefix", "NetSuite::SearchStringField", [0, 1]],
      ["zip", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LocationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOffice", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailableStore", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["tranPrefix", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassificationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassificationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ClassificationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["accountType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["actualShipDate", "NetSuite::SearchDateField", [0, 1]],
      ["altSalesAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["altSalesNetAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountPaid", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountUnbilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["anyLineItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["appliedToForeignAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["appliedToIsFxVariance", "NetSuite::SearchBooleanField", [0, 1]],
      ["appliedToLinkAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["appliedToLinkType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["appliedToTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["applyingForeignAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["applyingIsFxVariance", "NetSuite::SearchBooleanField", [0, 1]],
      ["applyingLinkAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["applyingLinkType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["applyingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["approvalStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["authCode", "NetSuite::SearchStringField", [0, 1]],
      ["avsStreetMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["avsZipMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billable", "NetSuite::SearchBooleanField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["billAddressee", "NetSuite::SearchStringField", [0, 1]],
      ["billAttention", "NetSuite::SearchStringField", [0, 1]],
      ["billCity", "NetSuite::SearchStringField", [0, 1]],
      ["billCountry", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billCounty", "NetSuite::SearchStringField", [0, 1]],
      ["billedDate", "NetSuite::SearchDateField", [0, 1]],
      ["billingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billingStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["billingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billPhone", "NetSuite::SearchStringField", [0, 1]],
      ["billState", "NetSuite::SearchStringField", [0, 1]],
      ["billVarianceStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billZip", "NetSuite::SearchStringField", [0, 1]],
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["binNumberQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["bomQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "NetSuite::SearchBooleanField", [0, 1]],
      ["buildVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["built", "NetSuite::SearchDoubleField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccExpireDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["chargeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["cleared", "NetSuite::SearchBooleanField", [0, 1]],
      ["closed", "NetSuite::SearchBooleanField", [0, 1]],
      ["closeDate", "NetSuite::SearchDateField", [0, 1]],
      ["cogs", "NetSuite::SearchBooleanField", [0, 1]],
      ["commissionEffectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["commit", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["componentYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["confirmationNumber", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["costComponentAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["costComponentCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costComponentItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costComponentQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["costComponentStandardCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["createdBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdFrom", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["creditAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["cscMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customerSubOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customForm", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOpen", "NetSuite::SearchLongField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["debitAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["deferredRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["deferRevRec", "NetSuite::SearchBooleanField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["depositDate", "NetSuite::SearchDateField", [0, 1]],
      ["depositTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["drAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dueDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["estGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["exchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["excludeCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["expectedCloseDate", "NetSuite::SearchDateField", [0, 1]],
      ["expectedReceiptDate", "NetSuite::SearchDateField", [0, 1]],
      ["expenseCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["expenseDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["finChrg", "NetSuite::SearchBooleanField", [0, 1]],
      ["forecastType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["fulfillingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxCostEstimateRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoeAllocation", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoAvailabelToCharge", "NetSuite::SearchBooleanField", [0, 1]],
      ["gcoAvailableToRefund", "NetSuite::SearchBooleanField", [0, 1]],
      ["gcoAvsStreetMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoAvsZipMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoBuyerAccountAge", "NetSuite::SearchLongField", [0, 1]],
      ["gcoBuyerIp", "NetSuite::SearchStringField", [0, 1]],
      ["gcoChargeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoChargebackAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoConfirmedChargedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoConfirmedRefundedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoCreditcardNumber", "NetSuite::SearchStringField", [0, 1]],
      ["gcoCscMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoFinancialState", "NetSuite::SearchStringField", [0, 1]],
      ["gcoFulfillmentState", "NetSuite::SearchStringField", [0, 1]],
      ["gcoOrderId", "NetSuite::SearchStringField", [0, 1]],
      ["gcoOrderTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoPromotionAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoPromotionName", "NetSuite::SearchStringField", [0, 1]],
      ["gcoRefundAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoShippingTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoStateChangedDetail", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertificate", "NetSuite::SearchStringField", [0, 1]],
      ["grossAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["includeInForecast", "NetSuite::SearchBooleanField", [0, 1]],
      ["intercoStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["intercoTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["isAllocation", "NetSuite::SearchBooleanField", [0, 1]],
      ["isBackflush", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoChargeback", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoChargeConfirmed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoPaymentGuaranteed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoRefundConfirmed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isIntercompanyAdjustment", "NetSuite::SearchBooleanField", [0, 1]],
      ["isMultiShipTo", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPayPalMeth", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReversal", "NetSuite::SearchBooleanField", [0, 1]],
      ["isRevRecTransaction", "NetSuite::SearchBooleanField", [0, 1]],
      ["isScrap", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTransferPriceCosting", "NetSuite::SearchBooleanField", [0, 1]],
      ["isVsoeAlloc", "NetSuite::SearchBooleanField", [0, 1]],
      ["isWip", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemSubOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["landedCostPerLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["mainLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["mainName", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingRouting", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["matchBillToReceipt", "NetSuite::SearchBooleanField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["memoMain", "NetSuite::SearchStringField", [0, 1]],
      ["memorized", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchStringField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["multiSubsidiary", "NetSuite::SearchBooleanField", [0, 1]],
      ["nameText", "NetSuite::SearchStringField", [0, 1]],
      ["netAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["nextApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["nextBillDate", "NetSuite::SearchDateField", [0, 1]],
      ["nonReimbursable", "NetSuite::SearchBooleanField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["opportunity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["orderPriority", "NetSuite::SearchDoubleField", [0, 1]],
      ["otherRefNum", "NetSuite::SearchTextNumberField", [0, 1]],
      ["otherRefNumNonDeposit", "NetSuite::SearchTextNumberField", [0, 1]],
      ["overheadParentItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["packageCount", "NetSuite::SearchLongField", [0, 1]],
      ["paidTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchLongField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["paymentApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventDate", "NetSuite::SearchDateField", [0, 1]],
      ["paymentEventHoldReason", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventPurchaseCardUsed", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventPurchaseDataSent", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventResult", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payPalPending", "NetSuite::SearchBooleanField", [0, 1]],
      ["payPalStatus", "NetSuite::SearchStringField", [0, 1]],
      ["payPalTranId", "NetSuite::SearchStringField", [0, 1]],
      ["pnRefNum", "NetSuite::SearchStringField", [0, 1]],
      ["poAsText", "NetSuite::SearchStringField", [0, 1]],
      ["posting", "NetSuite::SearchBooleanField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printedPickingTicket", "NetSuite::SearchBooleanField", [0, 1]],
      ["probability", "NetSuite::SearchLongField", [0, 1]],
      ["projectedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["purchaseOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityBilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPacked", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPicked", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityRevCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityShipRecv", "NetSuite::SearchDoubleField", [0, 1]],
      ["recognizedRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["recordType", "NetSuite::SearchStringField", [0, 1]],
      ["refNumber", "NetSuite::SearchLongField", [0, 1]],
      ["revCommitStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["revCommittingStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["revCommittingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["revenueStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["reversalDate", "NetSuite::SearchDateField", [0, 1]],
      ["reversalNumber", "NetSuite::SearchStringField", [0, 1]],
      ["revRecEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["revRecOnRevCommitment", "NetSuite::SearchBooleanField", [0, 1]],
      ["revRecStartDate", "NetSuite::SearchDateField", [0, 1]],
      ["revRecTermInMonths", "NetSuite::SearchLongField", [0, 1]],
      ["salesEffectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["salesOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["serialNumberCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumberCostAdjustment", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumberQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumbers", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddressee", "NetSuite::SearchStringField", [0, 1]],
      ["shipAttention", "NetSuite::SearchStringField", [0, 1]],
      ["shipCity", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipCountry", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["shipCounty", "NetSuite::SearchStringField", [0, 1]],
      ["shipDate", "NetSuite::SearchDateField", [0, 1]],
      ["shipGroup", "NetSuite::SearchLongField", [0, 1]],
      ["shipMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipPhone", "NetSuite::SearchStringField", [0, 1]],
      ["shipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipRecvStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipRecvStatusLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipState", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipZip", "NetSuite::SearchStringField", [0, 1]],
      ["source", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["taxPeriod", "NetSuite::RecordRef", [0, 1]],
      ["taxPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["taxRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["toBeEmailed", "NetSuite::SearchBooleanField", [0, 1]],
      ["toBePrinted", "NetSuite::SearchBooleanField", [0, 1]],
      ["toSubsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["totalAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["trackingNumbers", "NetSuite::SearchStringField", [0, 1]],
      ["tranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranDate", "NetSuite::SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranId", "NetSuite::SearchStringField", [0, 1]],
      ["tranIsVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["transactionDiscount", "NetSuite::SearchBooleanField", [0, 1]],
      ["transactionLineType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["transferLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["transferOrderQuantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPacked", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPicked", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityReceived", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityShipped", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["unit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["unitCostOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["visibleToCustomer", "NetSuite::SearchBooleanField", [0, 1]],
      ["voided", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoeAllocation", "NetSuite::SearchDoubleField", [0, 1]],
      ["vsoeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["vsoeDeferral", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["webSite", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TransactionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["abbrev", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["accountType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualShipDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["altSalesAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["altSalesNetAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountPaid", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountUnbilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToForeignAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToIsFxVariance", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["appliedToLinkAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToLinkType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["appliedToTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["applyingForeignAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["applyingIsFxVariance", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["applyingLinkAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["applyingLinkType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["applyingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["approvalStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["authCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["avsStreetMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["avsZipMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["billingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billVarianceStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binNumberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["bomQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buildVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["built", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccStreet", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["cleared", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["cogsAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["commissionEffectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["commit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["componentYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["confirmationNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costComponentItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costComponentQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentStandardCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["createdBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdFrom", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["creditAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cscMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customForm", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["custType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["debitAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["deferredRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["deferRevRec", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["depositDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["depositTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["discountAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["drAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dueDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["effectiveRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["exchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["excludeCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["expectedCloseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expectedReceiptDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expenseCategory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["fulfillingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fxAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimateRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAllocation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoAvailabelToCharge", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvailableToRefund", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvsStreetMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoAvsZipMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoBuyerAccountAge", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["gcoBuyerIp", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoChargeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoChargebackAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedChargedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedRefundedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoCreditcardNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoCscMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoFinancialState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoFulfillmentState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoOrderId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoOrderTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoRefundAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoShippingTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoStateChangedDetail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCert", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["grossAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["includeInForecast", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["intercoStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["intercoTransaction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isAllocation", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isBackflush", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeback", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeConfirmed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoPaymentGuaranteed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoRefundConfirmed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isIntercompanyAdjustment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isMultiShipTo", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isReversal", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isRevRecTransaction", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isScrap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTransferPriceCosting", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isWip", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["itemRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["landedCostPerLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["line", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["lineSequenceNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["mainLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["mainName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingRouting", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["matchBillToReceipt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memoMain", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memorized", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["merchantAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["multiSubsidiary", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["netAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["netAmountNoTax", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["nextApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["nextBillDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["nonReimbursable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["opportunity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["options", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["orderPriority", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["originator", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["otherRefNum", "NetSuite::SearchColumnTextNumberField[]", [0, nil]],
      ["overheadParentItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["packageCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["paidAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["paidTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["payingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["paymentApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["paymentEventHoldReason", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventPurchaseCardUsed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventPurchaseDataSent", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventResult", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payPalPending", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payPalStatus", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payPalTranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payrollBatch", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pnRefNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["poRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["posting", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["postingPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["print", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projectedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityBilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPacked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPicked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityRevCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityShipRecv", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["realizedGainPostingTransaction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recognizedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["recordType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["refNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["revCommitStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["revCommittingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["revenueStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["reversalDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["reversalNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["revRecEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["revRecOnRevCommitment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["revRecStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["rgAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["rgAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["salesEffectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["salesOrder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serialNumberCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberCostAdjustment", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumbers", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["shipGroup", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["shipMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shippingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["shipRecvStatusLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipTo", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["signedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["source", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["taxCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["termInMonths", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["toBeEmailed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["toBePrinted", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["toSubsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["total", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["totalCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["trackingNumbers", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranIsVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transactionDiscount", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transactionLineType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["transferLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["transferOrderItemLine", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transferOrderQuantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPacked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPicked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityReceived", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityShipped", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["unit", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unitCostOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["visibleToCustomer", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoeAllocation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vsoeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vsoeDeferral", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["allowedShippingMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["atpLeadTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["atpMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["autoLeadTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["autoPreferredStockLevel", "NetSuite::SearchBooleanField", [0, 1]],
      ["autoReorderPoint", "NetSuite::SearchBooleanField", [0, 1]],
      ["availableToPartners", "NetSuite::SearchBooleanField", [0, 1]],
      ["averageCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["backwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["binOnHandAvail", "NetSuite::SearchDoubleField", [0, 1]],
      ["binOnHandCount", "NetSuite::SearchDoubleField", [0, 1]],
      ["bomQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "NetSuite::SearchBooleanField", [0, 1]],
      ["buildTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["buyItNowPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["caption", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["component", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["componentOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["componentYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["copyDescription", "NetSuite::SearchBooleanField", [0, 1]],
      ["correlatedItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["correlatedItemCorrelation", "NetSuite::SearchDoubleField", [0, 1]],
      ["correlatedItemCount", "NetSuite::SearchLongField", [0, 1]],
      ["correlatedItemLift", "NetSuite::SearchDoubleField", [0, 1]],
      ["correlatedItemPurchaseRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costAccountingStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["costCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["costingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["countryOfManufacture", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["createJob", "NetSuite::SearchBooleanField", [0, 1]],
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["daysBeforeExpiration", "NetSuite::SearchDoubleField", [0, 1]],
      ["defaultReturnCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["defaultShippingMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["demandModifier", "NetSuite::SearchDoubleField", [0, 1]],
      ["demandSource", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["displayIneBayStore", "NetSuite::SearchBooleanField", [0, 1]],
      ["displayName", "NetSuite::SearchStringField", [0, 1]],
      ["dontShowPrice", "NetSuite::SearchBooleanField", [0, 1]],
      ["eBayItemDescription", "NetSuite::SearchStringField", [0, 1]],
      ["eBayItemSubtitle", "NetSuite::SearchStringField", [0, 1]],
      ["eBayItemTitle", "NetSuite::SearchStringField", [0, 1]],
      ["ebayRelistingOption", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["effectiveBomControl", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["effectiveRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endAuctionsWhenOutOfStock", "NetSuite::SearchBooleanField", [0, 1]],
      ["excludeFromSitemap", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["featuredDescription", "NetSuite::SearchStringField", [0, 1]],
      ["feedDescription", "NetSuite::SearchStringField", [0, 1]],
      ["feedName", "NetSuite::SearchStringField", [0, 1]],
      ["fixedLotSize", "NetSuite::SearchDoubleField", [0, 1]],
      ["forwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["froogleProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["fxCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["giftCertAuthCode", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertEmail", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["giftCertFrom", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertMsg", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertOrigAmt", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertRecipient", "NetSuite::SearchStringField", [0, 1]],
      ["imageUrl", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["invtClassification", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["invtCountInterval", "NetSuite::SearchLongField", [0, 1]],
      ["isAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDropShipItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isFulfillable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoCompliant", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isLotItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPreferredVendor", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSerialItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSpecialOrderItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSpecialWorkOrderItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["issueProduct", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["isTaxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["isWip", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemId", "NetSuite::SearchStringField", [0, 1]],
      ["itemUrl", "NetSuite::SearchStringField", [0, 1]],
      ["lastInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastPurchasePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["lastQuantityAvailableChange", "NetSuite::SearchDateField", [0, 1]],
      ["leadTime", "NetSuite::SearchLongField", [0, 1]],
      ["listingDuration", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationAtpLeadTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationAverageCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationBuildTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationCostAccountingStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationDefaultReturnCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationDemandSource", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationFixedLotSize", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationInventoryCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationInvtClassification", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationInvtCountInterval", "NetSuite::SearchLongField", [0, 1]],
      ["locationLastInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["locationLeadTime", "NetSuite::SearchLongField", [0, 1]],
      ["locationNextInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["locationPeriodicLotSizeDays", "NetSuite::SearchLongField", [0, 1]],
      ["locationPeriodicLotSizeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationPreferredStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityBackOrdered", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityInTransit", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationReorderPoint", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationSafetyStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationSupplyLotSizingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationSupplyType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationTotalValue", "NetSuite::SearchDoubleField", [0, 1]],
      ["locBackwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["locForwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["manufacturer", "NetSuite::SearchStringField", [0, 1]],
      ["manufactureraddr1", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerCity", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerState", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerTariff", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerTaxId", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerZip", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturingChargeItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["matchBillToReceipt", "NetSuite::SearchBooleanField", [0, 1]],
      ["matrix", "NetSuite::SearchBooleanField", [0, 1]],
      ["matrixChild", "NetSuite::SearchBooleanField", [0, 1]],
      ["metaTagHtml", "NetSuite::SearchStringField", [0, 1]],
      ["minimumQuantity", "NetSuite::SearchLongField", [0, 1]],
      ["mpn", "NetSuite::SearchStringField", [0, 1]],
      ["multManufactureAddr", "NetSuite::SearchBooleanField", [0, 1]],
      ["nexTagCategory", "NetSuite::SearchStringField", [0, 1]],
      ["nexTagProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["nextInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["numActiveListings", "NetSuite::SearchLongField", [0, 1]],
      ["numberAllowedDownloads", "NetSuite::SearchDoubleField", [0, 1]],
      ["numCurrentlyListed", "NetSuite::SearchLongField", [0, 1]],
      ["obsoleteDate", "NetSuite::SearchDateField", [0, 1]],
      ["obsoleteRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["offerSupport", "NetSuite::SearchBooleanField", [0, 1]],
      ["onlineCustomerPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["onSpecial", "NetSuite::SearchBooleanField", [0, 1]],
      ["otherVendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["outOfStockBehavior", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overheadType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["pageTitle", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["periodicLotSizeDays", "NetSuite::SearchLongField", [0, 1]],
      ["periodicLotSizeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["preferenceCriterion", "NetSuite::SearchStringField", [0, 1]],
      ["preferredBin", "NetSuite::SearchBooleanField", [0, 1]],
      ["preferredLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["preferredStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["preferredStockLevelDays", "NetSuite::SearchLongField", [0, 1]],
      ["price", "NetSuite::SearchDoubleField", [0, 1]],
      ["pricesIncludeTax", "NetSuite::SearchBooleanField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["primaryCategory", "NetSuite::SearchLongField", [0, 1]],
      ["purchaseUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityBackOrdered", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reorderMultiple", "NetSuite::SearchLongField", [0, 1]],
      ["reorderPoint", "NetSuite::SearchDoubleField", [0, 1]],
      ["reservePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["revRecSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roundUpAsComponent", "NetSuite::SearchBooleanField", [0, 1]],
      ["safetyStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["safetyStockLevelDays", "NetSuite::SearchLongField", [0, 1]],
      ["salesDescription", "NetSuite::SearchStringField", [0, 1]],
      ["saleUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["scheduleBCode", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["scheduleBNumber", "NetSuite::SearchStringField", [0, 1]],
      ["scheduleBQuantity", "NetSuite::SearchStringField", [0, 1]],
      ["searchKeywords", "NetSuite::SearchStringField", [0, 1]],
      ["seasonalDemand", "NetSuite::SearchBooleanField", [0, 1]],
      ["sellOnEBay", "NetSuite::SearchBooleanField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["serialNumberLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipIndividually", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipPackage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shippingCarrier", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["shippingRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["shoppingDotComCategory", "NetSuite::SearchStringField", [0, 1]],
      ["shoppingProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["shopzillaCategoryId", "NetSuite::SearchLongField", [0, 1]],
      ["shopzillaProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["sitemapPriority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["softDescriptor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startingPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["stockDescription", "NetSuite::SearchStringField", [0, 1]],
      ["stockUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["storeDescription", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["taxCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["thumbnailUrl", "NetSuite::SearchStringField", [0, 1]],
      ["totalValue", "NetSuite::SearchDoubleField", [0, 1]],
      ["trackLandedCost", "NetSuite::SearchBooleanField", [0, 1]],
      ["transferPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["unitsType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["upcCode", "NetSuite::SearchStringField", [0, 1]],
      ["urlComponent", "NetSuite::SearchStringField", [0, 1]],
      ["useBins", "NetSuite::SearchBooleanField", [0, 1]],
      ["useComponentYield", "NetSuite::SearchBooleanField", [0, 1]],
      ["useMarginalRates", "NetSuite::SearchBooleanField", [0, 1]],
      ["vendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vendorCode", "NetSuite::SearchStringField", [0, 1]],
      ["vendorCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendorCostEntered", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendorName", "NetSuite::SearchStringField", [0, 1]],
      ["vendorPriceCurrency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vsoeDeferral", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["webSite", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["weight", "NetSuite::SearchDoubleField", [0, 1]],
      ["yahooProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allowedShippingMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["alternateDemandSourceItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assetAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["atpLeadTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["atpMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["autoLeadTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["autoPreferredStockLevel", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["autoReorderPoint", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["availableToPartners", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["averageCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["backwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["basePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billExchRateVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billQtyVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binOnHandAvail", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["binOnHandCount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["bomQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buildTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buyItNowPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["categoryPreferred", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["componentYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["copyDescription", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["correlatedItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["correlatedItemCorrelation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["correlatedItemLift", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemPurchaseRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costAccountingStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["costCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["costingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryOfManufacture", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["createJob", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["custReturnVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysBeforeExpiration", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["defaultReturnCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["defaultShippingMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["deferredExpenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["deferredRevenueAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["demandModifier", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["demandSource", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["departmentnohierarchy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["displayIneBayStore", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["displayName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dontShowPrice", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["eBayItemDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["eBayItemSubtitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["eBayItemTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ebayRelistingOption", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["effectiveBomControl", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["effectiveRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endAuctionsWhenOutOfStock", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["excludeFromSitemap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["featuredDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["feedDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["feedName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fixedLotSize", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["forwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["froogleProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["fxCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gainLossAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["giftCertAuthCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertExpirationDate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertFrom", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertOriginalAmount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertRecipient", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["imageUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["invtClassification", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["invtCountInterval", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["isAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDropShipItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isFulfillable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoCompliant", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isLotItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSerialItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialOrderItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialWorkOrderItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issueProduct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isTaxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isWip", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastPurchasePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["lastQuantityAvailableChange", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadTime", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["liabilityAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["listingDuration", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["locationAtpLeadTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationAverageCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationBinQuantityAvailable", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationBuildTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationCostAccountingStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationDefaultReturnCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationDemandSource", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationFixedLotSize", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationInventoryCostTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationInvtClassification", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationInvtCountInterval", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationLastInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locationLeadTime", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationNextInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locationPeriodicLotSizeDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationPeriodicLotSizeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationPreferredStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityBackOrdered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityInTransit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnOrder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationReOrderPoint", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationSafetyStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationSupplyLotSizingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationSupplyType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationTotalValue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locBackwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locForwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["manufacturer", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerAddr1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerTariff", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerTaxId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingChargeItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["matchBillToReceipt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["memberItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["metaTagHtml", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["minimumQuantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["modified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["mpn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["multManufactureAddr", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["nextagCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nextagProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["nextInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["noPriceMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numActiveListings", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["numberAllowedDownloads", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numCurrentlyListed", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["obsoleteDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["obsoleteRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["offerSupport", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["onlineCustomerPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["onlinePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["onSpecial", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["otherPrices", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["otherVendor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["outOfStockBehavior", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["outOfStockMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["overallQuantityPricingType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["overheadType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["pageTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["periodicLotSizeDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["periodicLotSizeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["preferenceCriterion", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferredBin", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["preferredLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["preferredStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["preferredStockLevelDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["pricesIncludeTax", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["primaryCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prodPriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["prodQtyVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["purchasePriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityBackOrdered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnOrder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPricingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reorderMultiple", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["reOrderPoint", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["reservePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["revRecSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["roundUpAsComponent", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["safetyStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["safetyStockLevelDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["salesDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesTaxCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["saleUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["scheduleBCode", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["scheduleBNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["scheduleBQuantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["scrapAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["searchKeywords", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["seasonalDemand", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sellOnEBay", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serialNumberLocation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipIndividually", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipPackage", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shippingCarrier", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shippingRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["shoppingDotComCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shoppingProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shopzillaCategoryId", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["shopzillaProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sitemapPriority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["softDescriptor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startingPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["stockDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stockUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["storeDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDetailedDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDisplayImage", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["storeDisplayName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDisplayThumbnail", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyLotSizingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyReplenishmentMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["taxSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["thumbNailUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["totalValue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["trackLandedCost", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transferPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["unbuildVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["unitsType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["upcCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["urlComponent", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useBins", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useComponentYield", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useMarginalRates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vendor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vendorCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendorCostEntered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendorName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorPriceCurrency", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vendReturnVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vsoeDeferral", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["weight", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["weightUnit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["wipAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["wipVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["yahooProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["assignTasks", "NetSuite::SearchBooleanField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["commissionPlan", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerCode", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["uRL", ["NetSuite::SearchStringField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assignTasks", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["currentExchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["expenseAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["fxBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["is1099Eligible", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobResourceVend", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["laborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["payablesAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxIdNum", "NetSuite::SearchStringField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["currentExchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["is1099Eligible", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobResourceVend", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payablesAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printOnCheckAs", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxIdNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["excludeFromSitemap", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["name", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["sitemapPriority", "NetSuite::SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SiteCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["excludeFromSitemap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fullName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hidden", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["longDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pageTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["sitemapPriority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["urlComponent", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["approved", "NetSuite::SearchBooleanField", [0, 1]],
      ["billable", "NetSuite::SearchBooleanField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["date", "NetSuite::SearchDateField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["duration", "NetSuite::SearchDoubleField", [0, 1]],
      ["employee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["exempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModified", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["paidByPayroll", "NetSuite::SearchBooleanField", [0, 1]],
      ["paidExternally", "NetSuite::SearchBooleanField", [0, 1]],
      ["payItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["productive", "NetSuite::SearchBooleanField", [0, 1]],
      ["status", "NetSuite::SearchBooleanField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["utilized", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeBillSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["v_break", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "break")], [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["date", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["durationDecimal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["employee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hours", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBillable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isExempt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isProductive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isUtilized", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastModified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["paidExternally", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payrollDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["supervisorApproval", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["temporaryLocalJurisdiction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["temporaryStateJurisdiction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["abstract", "NetSuite::SearchStringField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["caseCount", "NetSuite::SearchLongField", [0, 1]],
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["find", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["topic", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SolutionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["displayOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["previewref", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["solutionCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TopicSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiarySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isElimination", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["legalName", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["taxIdNum", "NetSuite::SearchStringField", [0, 1]],
      ["tranPrefix", "NetSuite::SearchStringField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["zip", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiarySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SubsidiarySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerInboundEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerOnlineForms", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseAssignmentTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseAutomaticClosureTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseCopyEmployeeTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseCreationTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseEscalationTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseUpdateTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyNameForSupportMessages", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["employeeCaseUpdateTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isElimination", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["legalName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mainSupportEmailAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["taxIdNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranPrefix", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amountAvailableBilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["expirationDate", "NetSuite::SearchDateField", [0, 1]],
      ["giftCertCode", "NetSuite::SearchStringField", [0, 1]],
      ["incomeAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isActive", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["liabilityAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["originalAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["purchaseDate", "NetSuite::SearchDateField", [0, 1]],
      ["sender", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GiftCertificateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amountRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amtAvailBilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["expirationDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["gcActive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["giftCertCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["liabilityAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["originalAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["purchaseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["sender", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FolderSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTopLevel", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["numFiles", "NetSuite::SearchLongField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["private", "NetSuite::SearchBooleanField", [0, 1]],
      ["size", "NetSuite::SearchLongField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FolderSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FolderSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["folderSize", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["group", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numFiles", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["availableWithoutLogin", "NetSuite::SearchBooleanField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["documentSize", "NetSuite::SearchLongField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fileType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["folder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isLink", "NetSuite::SearchBooleanField", [0, 1]],
      ["modified", "NetSuite::SearchDateField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FileSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["availableWithoutLogin", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["documentSize", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fileType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["folder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["hostedPath", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["modified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["actualTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["allocatePayrollExpenses", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowAllResourcesForTasks", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowExpenses", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["applyProjectExpenseTypeToAll", "NetSuite::SearchBooleanField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["billingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["calculatedEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["calculatedEndDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["estCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["estEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedGrossProfitPercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborCostBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverrideBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["includeCrmTasksInTotals", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isExemptTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isProductiveTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["isUtilizedTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["jobBillingType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["jobItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["jobPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["jobResource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["jobResourceRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastBaselineDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["limitTimeToAssignees", "NetSuite::SearchBooleanField", [0, 1]],
      ["materializeTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pctComplete", "NetSuite::SearchLongField", [0, 1]],
      ["percentTimeComplete", "NetSuite::SearchLongField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["projectedEndDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["projectExpenseType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["startDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["timeRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["allocatePayrollExpenses", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowAllResourcesForTasks", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowExpenses", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["calculatedEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["calculatedEndDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfitPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCostBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverrideBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["includeCrmTasksInTotals", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isExemptTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isProductiveTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isUtilizedTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["jobBillingType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["jobItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jobPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobResource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jobResourceRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastBaselineDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["limitTimeToAssignees", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["materializeTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["percentComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectedEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["projectedEndDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["projectExpenseType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["timeRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["ageInMonths", "NetSuite::SearchLongField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildBroken", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildBrokenName", "NetSuite::SearchStringField", [0, 1]],
      ["buildFixed", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildFixedName", "NetSuite::SearchStringField", [0, 1]],
      ["buildTarget", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildTargetName", "NetSuite::SearchStringField", [0, 1]],
      ["caseCount", "NetSuite::SearchLongField", [0, 1]],
      ["caseNumber", "NetSuite::SearchStringField", [0, 1]],
      ["closedDate", "NetSuite::SearchDateField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["dateReleased", "NetSuite::SearchDateField", [0, 1]],
      ["details", "NetSuite::SearchStringField", [0, 1]],
      ["duplicateOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eFix", "NetSuite::SearchBooleanField", [0, 1]],
      ["employeeOrTeam", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eventStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["externalAbstract", "NetSuite::SearchStringField", [0, 1]],
      ["externalDetails", "NetSuite::SearchStringField", [0, 1]],
      ["externalFixedIn", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["externalStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fixed", "NetSuite::SearchDateField", [0, 1]],
      ["fixedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isOwner", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReviewed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShowStopper", "NetSuite::SearchBooleanField", [0, 1]],
      ["issueAbstract", "NetSuite::SearchStringField", [0, 1]],
      ["issueNumber", "NetSuite::SearchStringField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["v_module", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["originalFixedIn", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["product", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["productTeam", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["relatedIssue", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["relationship", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["relationshipComment", "NetSuite::SearchStringField", [0, 1]],
      ["reportedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reproduce", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resolved", "NetSuite::SearchDateField", [0, 1]],
      ["resolvedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reviewer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["severity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["source", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tags", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tracking", "NetSuite::SearchBooleanField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["userType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionBroken", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionFixed", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionTarget", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "IssueSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["ageInMonths", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildBroken", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildFixed", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildTarget", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["caseNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["closedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateReleased", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["duplicateOf", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["employeeOrTeam", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eventStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["externalAbstract", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalDetails", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalFixedIn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fixed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["fixedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isOwner", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isReviewed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShowStopper", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issueAbstract", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["issueStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["v_module", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["number", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["originalFixedIn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["product", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["productTeam", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["relatedIssue", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["relationship", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["relationshipComment", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["reportedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reproduce", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resolved", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["resolvedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reviewer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["severity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["source", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["tags", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["userType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionBroken", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionFixed", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionTarget", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GroupMemberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["groupId", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["audience", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["baseCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["campaignEventType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["campaignId", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["channel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["event", "NetSuite::SearchStringField", [0, 1]],
      ["expectedRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["family", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSalesCampaign", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["keyword", "NetSuite::SearchStringField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["manager", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["managerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["offer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["response", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["responseCategory", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["responseCode", "NetSuite::SearchLongField", [0, 1]],
      ["responseComments", "NetSuite::SearchStringField", [0, 1]],
      ["responseDate", "NetSuite::SearchDateField", [0, 1]],
      ["scheduleDate", "NetSuite::SearchDateField", [0, 1]],
      ["searchEngine", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subscription", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["template", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["vertical", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CampaignSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["audience", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["baseCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["campaignId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["channel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["event", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["executedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expectedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["family", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSalesCampaign", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["keyword", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["managerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["offer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["response", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCategory", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCode", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["responseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["responseNotes", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["revenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["roi", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["scheduledDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["searchEngine", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vertical", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["groupName", "NetSuite::SearchStringField", [0, 1]],
      ["groupOwner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDynamic", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isManufacturingWorkCenter", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["laborResources", "NetSuite::SearchLongField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["machineResources", "NetSuite::SearchLongField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntityGroupSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["groupName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["groupType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDynamic", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isManufacturingWorkCenter", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPrivate", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["machineResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["savedSearch", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["size", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PromotionCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["applyDiscountTo", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["discount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["discountAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["freeShipItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPublic", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PromotionCodeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["discount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["discountAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPublic", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BudgetSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["global", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["year", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["year2", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BudgetSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["classnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["departmentnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["global", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiarynohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["year", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["year2", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["assignee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["constraintType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["costVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["costVariancePercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["endDateVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkVariancePercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["finishByDate", "NetSuite::SearchDateField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isMilestone", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSummaryTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["percentWorkComplete", "NetSuite::SearchDoubleField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["predecessors", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["remainingWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["startDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["startDateVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["successor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["constraintType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costVariancePercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDateVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariancePercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["finishByDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isMilestone", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSummaryTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["percentWorkComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["predecessorLagDays", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessors", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["predecessorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["remainingWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["successor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["successorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskAssignmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["grossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["grossProfitBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["price", "NetSuite::SearchDoubleField", [0, 1]],
      ["priceBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resourceName", "NetSuite::SearchStringField", [0, 1]],
      ["serviceItem", "NetSuite::SearchStringField", [0, 1]],
      ["serviceItemDesc", "NetSuite::SearchStringField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["unitCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitCostBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitPriceBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["units", "NetSuite::SearchDoubleField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskAssignmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["grossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["grossProfitBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["price", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["priceBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resourceName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serviceItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serviceItemDesc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["unitCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitCostBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitPriceBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["allLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowNonGlChanges", "NetSuite::SearchBooleanField", [0, 1]],
      ["apLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["arLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["closed", "NetSuite::SearchBooleanField", [0, 1]],
      ["closedOnDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isAdjust", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isQuarter", "NetSuite::SearchBooleanField", [0, 1]],
      ["isYear", "NetSuite::SearchBooleanField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payrollLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["periodName", "NetSuite::SearchStringField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowNonGLChanges", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["apLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["arLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closedOnDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isAdjust", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isQuarter", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isYear", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payrollLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["periodName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["private", "NetSuite::SearchBooleanField", [0, 1]],
      ["sync", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["private", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sync", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactRoleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["includeInLeadReports", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["probability", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerStatusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["includeInLeadReports", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["rateRequired", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rateRequired", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobStatusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PaymentMethodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["creditCard", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDebitCard", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PaymentMethodSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["creditCard", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDebitCard", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevelSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PriceLevelSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["discountPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevelSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PriceLevelSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["discountPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SalesRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SalesRoleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TermSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TermSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["dateDriven", "NetSuite::SearchBooleanField", [0, 1]],
      ["dayDiscountExpires", "NetSuite::SearchLongField", [0, 1]],
      ["dayOfMonthNetDue", "NetSuite::SearchLongField", [0, 1]],
      ["daysUntilExpiry", "NetSuite::SearchLongField", [0, 1]],
      ["daysUntilNetDue", "NetSuite::SearchLongField", [0, 1]],
      ["discountPercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["discountPercentDateDriven", "NetSuite::SearchDoubleField", [0, 1]],
      ["dueNextMonthIfWithinDays", "NetSuite::SearchLongField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["preferred", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TermSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TermSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["dateDriven", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["dayDiscountExpires", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["dayOfMonthNetDue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysUntilExpiry", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysUntilNetDue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["discountPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["discountPercentDateDriven", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["dueNextMonthIfWithinDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferred", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTaxAgency", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTaxAgency", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReasonSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "WinLossReasonSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReasonSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "WinLossReasonSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OriginatingLeadSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtDate", "NetSuite::SearchDateField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["ccExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccHolderName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["ccType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["classBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["companyName", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["conversionDate", "NetSuite::SearchDateField", [0, 1]],
      ["creditHoldOverride", "NetSuite::SearchBooleanField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateClosed", "NetSuite::SearchDateField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["depositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["deptBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["explicitConversion", "NetSuite::SearchBooleanField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["firstOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["firstSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReportedLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["itemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["leadDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["onCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["orderedDate", "NetSuite::SearchDateField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["prospectDate", "NetSuite::SearchDateField", [0, 1]],
      ["pstExempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["reminderDate", "NetSuite::SearchDateField", [0, 1]],
      ["resaleNumber", "NetSuite::SearchStringField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shippingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["stage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["subsidBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["territory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["webLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OriginatingLeadSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["creditHoldOverride", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["groupPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["leadDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manualCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["onCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["reminderDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shippingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["taxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["territory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["webLead", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "UnitsTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["abbreviation", "NetSuite::SearchStringField", [0, 1]],
      ["baseUnit", "NetSuite::SearchBooleanField", [0, 1]],
      ["conversionRate", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInActive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["pluralAbbreviation", "NetSuite::SearchStringField", [0, 1]],
      ["pluralName", "NetSuite::SearchStringField", [0, 1]],
      ["unitName", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "UnitsTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["abbreviation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["baseUnit", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["conversionRate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInActive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pluralAbbreviation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pluralName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unitName", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomListSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOrdered", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["scriptId", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomListSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOrdered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["scriptId", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PricingGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PricingGroupSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["expirationDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchStringField", [0, 1]],
      ["isOnHand", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityInTransit", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["expirationDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isonhand", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["quantityavailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityintransit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityonhand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityonorder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberBinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberBinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchStringField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberBinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberBinSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemBinNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemBinNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemBinNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemBinNumberSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppDefinitionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppDefinitionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppPackageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["appDefinition", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["version", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppPackageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["appDefinition", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["bundle", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["packageFile", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["version", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NexusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NexusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["state", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NexusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NexusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerMessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["preferred", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerMessageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferred", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["alternateSourceItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["analysisDuration", "NetSuite::SearchLongField", [0, 1]],
      ["demandDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["projectionDuration", "NetSuite::SearchLongField", [0, 1]],
      ["projectionInterval", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["projectionMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["projectionStartDate", "NetSuite::SearchDateField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["units", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["alternateSourceItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["analysisDuration", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["demandDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionDuration", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["projectionInterval", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSupplyPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["orderCreated", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderDate", "NetSuite::SearchDateField", [0, 1]],
      ["orderType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["receiptDate", "NetSuite::SearchDateField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["units", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSupplyPlanSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["orderCreated", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["orderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["orderType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["receiptDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["baseCurrency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["exchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["transactionCurrency", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["baseCurrency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["exchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["transactionCurrency", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevisionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemRevisionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["obsoleteDate", "NetSuite::SearchDateField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevisionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemRevisionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["obsoleteDate", "NetSuite::SearchColumnDateField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CouponCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["dateSent", "NetSuite::SearchDateField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["promotion", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["useCount", "NetSuite::SearchLongField", [0, 1]],
      ["used", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CouponCodeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateSent", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["promotion", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["used", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PayrollItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["expenseAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemTypeNoHierarchy", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["liabilityAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PayrollItemSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemTypeNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["liabilityAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendor", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingRoutingSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["operationName", "NetSuite::SearchStringField", [0, 1]],
      ["operationYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["runRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["sequence", "NetSuite::SearchLongField", [0, 1]],
      ["setupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingRoutingSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingCostTemplate", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingWorkCenter", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["operationName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["operationYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["sequence", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["setupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualRunTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["actualSetupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["completedQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["inputQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["laborResources", "NetSuite::SearchLongField", [0, 1]],
      ["machineResources", "NetSuite::SearchLongField", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["order", "NetSuite::SearchDoubleField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["remainingQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["runRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["runTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["sequence", "NetSuite::SearchLongField", [0, 1]],
      ["setupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualRunTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["actualSetupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["completedQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["inputQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["laborResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["machineResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingCostTemplate", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingWorkCenter", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["order", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["predecessorLagDays", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["remainingQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["sequence", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["setupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["workOrder", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ResourceAllocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["allocationType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["allocationUnit", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["notes", "NetSuite::SearchStringField", [0, 1]],
      ["numberHours", "NetSuite::SearchDoubleField", [0, 1]],
      ["percentOfTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["project", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["requestedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ResourceAllocationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allocationType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["allocationUnit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["notes", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numberHours", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentOfTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["project", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["requestedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomSearchJoin,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomSearchJoin"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef"],
      ["searchRecordBasic", "NetSuite::SearchRecordBasic"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomSearchRowBasic"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef"],
      ["searchRowBasic", "NetSuite::SearchRowBasic"]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["billingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["chargeDate", "NetSuite::SearchDateField", [0, 1]],
      ["chargeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["modifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["rate", "NetSuite::SearchDoubleField", [0, 1]],
      ["rule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["runId", "NetSuite::SearchStringField", [0, 1]],
      ["salesOrder", "NetSuite::SearchLongField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["use", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billTo", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["chargeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["chargeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["modifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["postingPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["runId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesOrder", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["use", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEvent,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "NetSuite::RecurrenceFrequency", [0, 1]],
      ["recurrenceDowMaskList", "NetSuite::RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "NetSuite::RecurrenceDow", [0, 1]],
      ["recurrenceDowim", "NetSuite::RecurrenceDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::CalendarEventReminderMinutes", [0, 1]],
      ["status", "NetSuite::CalendarEventStatus", [0, 1]],
      ["accessLevel", "NetSuite::CalendarEventAccessLevel", [0, 1]],
      ["organizer", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "NetSuite::ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["attendeeList", "NetSuite::CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "NetSuite::CalendarEventResourceList", [0, 1]],
      ["timeItemList", "NetSuite::CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ExclusionDateList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
    :schema_element => [
      ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventAttendee,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
    :schema_element => [
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["attendee", "NetSuite::RecordRef", [0, 1]],
      ["response", "NetSuite::CalendarEventAttendeeResponse", [0, 1]],
      ["attendance", "NetSuite::CalendarEventAttendeeAttendance", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventAttendeeList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
    :schema_element => [
      ["attendee", "NetSuite::CalendarEventAttendee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventResource,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
    :schema_element => [
      ["resource", "NetSuite::RecordRef", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventResourceList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
    :schema_element => [
      ["resource", "NetSuite::CalendarEventResource[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CalendarEventSearch", [0, 1]],
      ["columns", "NetSuite::CalendarEventSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["attendeeJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["attendeeContactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["attendeeCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Task,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "NetSuite::TaskPriority", [0, 1]],
      ["status", "NetSuite::TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::TaskReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["contactList", "NetSuite::TaskContactList", [0, 1]],
      ["timeItemList", "NetSuite::TaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskContact,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskContact"),
    :schema_element => [
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskContactList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
    :schema_element => [
      ["contact", "NetSuite::TaskContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TaskSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TaskSearch", [0, 1]],
      ["columns", "NetSuite::TaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCall,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::PhoneCallStatus", [0, 1]],
      ["priority", "NetSuite::PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "NetSuite::PhoneCallContactList", [0, 1]],
      ["timeItemList", "NetSuite::PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallContact,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
    :schema_element => [
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallContactList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
    :schema_element => [
      ["contact", "NetSuite::PhoneCallContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["participantJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PhoneCallSearch", [0, 1]],
      ["columns", "NetSuite::PhoneCallSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["participantJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTask,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTask"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["eventId", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "NetSuite::ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["finishByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isMilestone", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnCriticalPath", "SOAP::SOAPString", [0, 1]],
      ["slackMinutes", "SOAP::SOAPDouble", [0, 1]],
      ["lateEnd", "SOAP::SOAPDateTime", [0, 1]],
      ["lateStart", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "NetSuite::ProjectTaskStatus", [0, 1]],
      ["assigneeList", "NetSuite::ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "NetSuite::ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "NetSuite::ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskPredecessor,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessor"),
    :schema_element => [
      ["task", "NetSuite::RecordRef", [0, 1]],
      ["type", "NetSuite::ProjectTaskPredecessorPredecessorType", [0, 1]],
      ["lagDays", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskPredecessorList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorList"),
    :schema_element => [
      ["projectTaskPredecessor", "NetSuite::ProjectTaskPredecessor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskAssignee,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssignee"),
    :schema_element => [
      ["resource", "NetSuite::RecordRef", [0, 1]],
      ["units", "SOAP::SOAPDouble", [0, 1]],
      ["serviceItem", "NetSuite::RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["unitPrice", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskAssigneeList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssigneeList"),
    :schema_element => [
      ["projectTaskAssignee", "NetSuite::ProjectTaskAssignee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ProjectTaskSearch", [0, 1]],
      ["columns", "NetSuite::ProjectTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["successorJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocation,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocation"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["requestedby", "NetSuite::RecordRef", [0, 1]],
      ["allocationResource", "NetSuite::RecordRef", [0, 1]],
      ["project", "NetSuite::RecordRef", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allocationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["allocationUnit", "NetSuite::ResourceAllocationAllocationUnit", [0, 1]],
      ["numberHours", "SOAP::SOAPDouble", [0, 1]],
      ["percentOfTime", "SOAP::SOAPDouble", [0, 1]],
      ["allocationType", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["requestedByJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["resourceJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ResourceAllocationSearch", [0, 1]],
      ["columns", "NetSuite::ResourceAllocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["requestedByJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["resourceJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Note,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Note"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "NetSuite::RecordRef", [0, 1]],
      ["direction", "NetSuite::NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["folder", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["media", "NetSuite::RecordRef", [0, 1]],
      ["record", "NetSuite::RecordRef", [0, 1]],
      ["recordType", "NetSuite::RecordRef", [0, 1]],
      ["topic", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteSearch,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NoteSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NoteSearch", [0, 1]],
      ["columns", "NetSuite::NoteSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["authorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Message,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Message"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["mediaItemList", "NetSuite::MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageMediaItemList,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
    :schema_element => [
      ["mediaItem", "NetSuite::C_File[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageSearch,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::MessageSearch", [0, 1]],
      ["columns", "NetSuite::MessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["attachmentsJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["authorJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["recipientJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::C_File,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "File"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["attachFrom", "NetSuite::FileAttachFrom", [0, 1]],
      ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
      ["fileType", "NetSuite::MediaType", [0, 1]],
      ["content", "SOAP::SOAPBase64", [0, 1]],
      ["folder", "NetSuite::RecordRef", [0, 1]],
      ["fileSize", "SOAP::SOAPDouble", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["mediaFile", "NetSuite::RecordRef", [0, 1]],
      ["textFileEncoding", "NetSuite::TextFileEncoding", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["encoding", "NetSuite::FileEncoding", [0, 1]],
      ["altTagCaption", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["caption", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["siteDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["siteCategoryList", "NetSuite::FileSiteCategoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSiteCategory,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
    :schema_element => [
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]],
      ["website", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSiteCategoryList,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
    :schema_element => [
      ["siteCategory", "NetSuite::FileSiteCategory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::FileSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::FileSearch", [0, 1]],
      ["columns", "NetSuite::FileSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FileSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Folder,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "Folder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["group", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FolderSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::FolderSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::FolderSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::FolderSearch", [0, 1]],
      ["columns", "NetSuite::FolderSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FolderSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::FolderSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Subscriptions,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Subscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SubscriptionsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "SubscriptionsList"),
    :schema_element => [
      ["subscriptions", "NetSuite::Subscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Contact,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Contact"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["contactSource", "NetSuite::RecordRef", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "NetSuite::RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "NetSuite::ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CategoryList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CategoryList"),
    :schema_element => [
      ["category", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::ContactAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["parentJobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["parentPartnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["parentVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactSearch", [0, 1]],
      ["columns", "NetSuite::ContactSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["customerPrimaryJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["jobPrimaryJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["parentJobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["parentPartnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["parentVendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["partnerPrimaryJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["vendorPrimaryJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Customer,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Customer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "NetSuite::Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["numberFormat", "NetSuite::CustomerNumberFormat", [0, 1]],
      ["negativeNumberFormat", "NetSuite::CustomerNegativeNumberFormat", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["territory", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "NetSuite::CustomerCreditHoldOverride", [0, 1]],
      ["monthlyClosing", "NetSuite::CustomerMonthlyClosing", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["prefCCProcessor", "NetSuite::RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "NetSuite::RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "NetSuite::Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["receivablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["defaultOrderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["downloadList", "NetSuite::CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["addressbookList", "NetSuite::CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["currencyList", "NetSuite::CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "NetSuite::CustomerCreditCardsList", [0, 1]],
      ["partnersList", "NetSuite::CustomerPartnersList", [0, 1]],
      ["groupPricingList", "NetSuite::CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "NetSuite::CustomerItemPricingList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerDownload,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerDownload"),
    :schema_element => [
      ["file", "NetSuite::RecordRef", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
      ["expiration", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerDownloadList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
    :schema_element => [
      ["download", "NetSuite::CustomerDownload[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactAccessRoles,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAccessRoles"),
    :schema_element => [
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactAccessRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAccessRolesList"),
    :schema_element => [
      ["contactRoles", "NetSuite::ContactAccessRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSalesTeam_,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSalesTeamList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CustomerSalesTeam_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::CustomerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
    :schema_element => [
      ["creditCards", "NetSuite::CustomerCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerGroupPricing,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
    :schema_element => [
      ["group", "NetSuite::RecordRef", [0, 1]],
      ["level", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerGroupPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
    :schema_element => [
      ["groupPricing", "NetSuite::CustomerGroupPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerItemPricing,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["level", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerItemPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
    :schema_element => [
      ["itemPricing", "NetSuite::CustomerItemPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPartnersList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerSearch", [0, 1]],
      ["columns", "NetSuite::CustomerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["hostedPageJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["subCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["topLevelParentJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["webSiteCategoryJoin", "NetSuite::SiteCategorySearchRowBasic", [0, 1]],
      ["webSiteItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatus,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "NetSuite::CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Partner,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Partner"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "NetSuite::RecordRefList", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["taxFractionUnit", "NetSuite::TaxFractionUnit", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["taxRounding", "NetSuite::TaxRounding", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "NetSuite::PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "NetSuite::PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerPromoCode,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
    :schema_element => [
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerPromoCodeList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
    :schema_element => [
      ["promoCode", "NetSuite::PartnerPromoCode[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::PartnerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PartnerSearch", [0, 1]],
      ["columns", "NetSuite::PartnerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Vendor,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["payablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["balancePrimary", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrdersPrimary", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "NetSuite::VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::VendorAddressbookList", [0, 1]],
      ["currencyList", "NetSuite::VendorCurrencyList", [0, 1]],
      ["rolesList", "NetSuite::VendorRolesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPricingSchedule,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
    :schema_element => [
      ["scheduleName", "SOAP::SOAPString", [0, 1]],
      ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPricingScheduleList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
    :schema_element => [
      ["pricingSchedule", "NetSuite::VendorPricingSchedule[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::VendorAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorRoles,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorRoles"),
    :schema_element => [
      ["selectedRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorRolesList"),
    :schema_element => [
      ["roles", "NetSuite::VendorRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::VendorSearch", [0, 1]],
      ["columns", "NetSuite::VendorSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroup,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "NetSuite::EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "NetSuite::RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "NetSuite::EntityGroupType", [0, 1]],
      ["savedSearch", "NetSuite::RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "NetSuite::RecordRef", [0, 1]],
      ["isManufacturingWorkCenter", "SOAP::SOAPBoolean", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "NetSuite::EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "NetSuite::EntityGroupPeriodSize", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::EntityGroupSearch", [0, 1]],
      ["columns", "NetSuite::EntityGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::EntityGroupSearchRowBasic", [0, 1]],
      ["groupMemberJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Job,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Job"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["language", "NetSuite::RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "NetSuite::RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["jobBillingType", "NetSuite::JobBillingType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["jobItem", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "NetSuite::RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["projectExpenseType", "NetSuite::RecordRef", [0, 1]],
      ["applyProjectExpenseTypeToAll", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "NetSuite::JobResourcesList", [0, 1]],
      ["addressbookList", "NetSuite::JobAddressbookList", [0, 1]],
      ["milestonesList", "NetSuite::JobMilestonesList", [0, 1]],
      ["creditCardsList", "NetSuite::JobCreditCardsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::JobAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobResources,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobResources"),
    :schema_element => [
      ["jobResource", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobResourcesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobResourcesList"),
    :schema_element => [
      ["jobResources", "NetSuite::JobResources[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobMilestones,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobMilestones"),
    :schema_element => [
      ["milestoneName", "SOAP::SOAPString", [0, 1]],
      ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
      ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
      ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
      ["milestoneComments", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobMilestonesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobMilestonesList"),
    :schema_element => [
      ["milestones", "NetSuite::JobMilestones[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
    :schema_element => [
      ["creditCards", "NetSuite::JobCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobSearch", [0, 1]],
      ["columns", "NetSuite::JobSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobType,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatus,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerStatusSearch", [0, 1]],
      ["columns", "NetSuite::CustomerStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerStatusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobStatusSearch", [0, 1]],
      ["columns", "NetSuite::JobStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobStatusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobTypeSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JobTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobTypeSearch", [0, 1]],
      ["columns", "NetSuite::JobTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JobTypeSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OriginatingLeadSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "OriginatingLeadSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OriginatingLeadSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "OriginatingLeadSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCurrencyList"),
    :schema_element => [
      ["currency", "NetSuite::CustomerCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorCurrencyList"),
    :schema_element => [
      ["vendorCurrency", "NetSuite::VendorCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCase,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "NetSuite::RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["serialNumber", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["origin", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["escalateToList", "NetSuite::SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "NetSuite::SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "NetSuite::SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmailEmployeesList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
    :schema_element => [
      ["emailEmployees", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseEscalateTo,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
    :schema_element => [
      ["escalatee", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseEscalateToList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
    :schema_element => [
      ["escalateTo", "NetSuite::SupportCaseEscalateTo[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSolutions,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
    :schema_element => [
      ["solutions", "NetSuite::SupportCaseSolutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseTimeItemList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SupportCaseSearch", [0, 1]],
      ["columns", "NetSuite::SupportCaseSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseStatus,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseType,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseOrigin,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseIssue,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCasePriority,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Solution,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Solution"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "NetSuite::SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "NetSuite::SolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionTopics,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionTopics"),
    :schema_element => [
      ["topic", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionTopicsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
    :schema_element => [
      ["topics", "NetSuite::SolutionTopics[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Solutions,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Solutions"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionsList"),
    :schema_element => [
      ["solutions", "NetSuite::Solutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["topicJoin", "NetSuite::TopicSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SolutionSearch", [0, 1]],
      ["columns", "NetSuite::SolutionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["relatedSolutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["topicJoin", "NetSuite::TopicSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Topic,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Topic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "NetSuite::TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSolution,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSolution"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSolutionList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSolutionList"),
    :schema_element => [
      ["solution", "NetSuite::TopicSolution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TopicSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TopicSearch", [0, 1]],
      ["columns", "NetSuite::TopicSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TopicSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TopicSearchRowBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Issue,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Issue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "NetSuite::RecordRef", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["productTeam", "NetSuite::RecordRef", [0, 1]],
      ["source", "NetSuite::RecordRef", [0, 1]],
      ["reportedBy", "NetSuite::RecordRef", [0, 1]],
      ["reproduce", "NetSuite::RecordRef", [0, 1]],
      ["severity", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["reviewer", "NetSuite::RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "NetSuite::RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "NetSuite::RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "NetSuite::IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["emailCellsList", "NetSuite::RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["targetVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["fixedInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["relatedIssuesList", "NetSuite::IssueRelatedIssuesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueVersion,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueVersion"),
    :schema_element => [
      ["primary", "SOAP::SOAPBoolean", [0, 1]],
      ["version", "NetSuite::RecordRef", [0, 1]],
      ["build", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueVersionList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueVersionList"),
    :schema_element => [
      ["issueVersion", "NetSuite::IssueVersion[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::IssueSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::IssueSearch", [0, 1]],
      ["columns", "NetSuite::IssueSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueRelatedIssues,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelatedIssues"),
    :schema_element => [
      ["relationship", "NetSuite::IssueRelationship", [0, 1]],
      ["issueNumber", "NetSuite::RecordRef", [0, 1]],
      ["relationshipComment", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueRelatedIssuesList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelatedIssuesList"),
    :schema_element => [
      ["issueRelatedIssues", "NetSuite::IssueRelatedIssues[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassTranslation,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassTranslation"),
    :schema_element => [
      ["locale", "SOAP::SOAPString", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassTranslationList"),
    :schema_element => [
      ["classTranslation", "NetSuite::ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRole,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevel,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReason,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Term,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Term"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethod,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "NetSuite::RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LeadSource,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Price,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Price"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceList"),
    :schema_element => [
      ["price", "NetSuite::Price[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Pricing,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Pricing"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPDouble", [0, 1]],
      ["priceList", "NetSuite::PriceList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingMatrix"),
    :schema_element => [
      ["pricing", "NetSuite::Pricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Rate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Rate"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RateList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RateList"),
    :schema_element => [
      ["rate", "NetSuite::Rate[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BillingRates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BillingRates"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["billingClass", "NetSuite::RecordRef", [0, 1]],
      ["rateList", "NetSuite::RateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BillingRatesMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
    :schema_element => [
      ["billingRates", "NetSuite::BillingRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Translation,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Translation"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TranslationList"),
    :schema_element => [
      ["translation", "NetSuite::Translation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOptionsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOptionsList"),
    :schema_element => [
      ["itemOptions", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemVendor,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemVendor"),
    :schema_element => [
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["vendorCode", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrency", "NetSuite::RecordRef", [0, 1]],
      ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemVendorList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemVendorList"),
    :schema_element => [
      ["itemVendor", "NetSuite::ItemVendor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategory_,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["website", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategoryList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryList"),
    :schema_element => [
      ["siteCategory", "NetSuite::SiteCategory_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ProductFeedList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ProductFeedList"),
    :schema_element => [
      ["productFeed", "NetSuite::ItemProductFeed[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemMember,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMember"),
    :schema_element => [
      ["memberDescr", "SOAP::SOAPString", [0, 1]],
      ["componentYield", "SOAP::SOAPDouble", [0, 1]],
      ["bomQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["memberUnit", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["taxcode", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["taxrate", "SOAP::SOAPDouble", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["obsoleteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["effectiveRevision", "NetSuite::RecordRef", [0, 1]],
      ["obsoleteRevision", "NetSuite::RecordRef", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemMemberList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMemberList"),
    :schema_element => [
      ["itemMember", "NetSuite::ItemMember[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "NetSuite::ItemType", [0, 1]],
      ["originalItemSubtype", "NetSuite::ItemSubType", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MatrixOptionList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "MatrixOptionList"),
    :schema_element => [
      ["matrixOption", "NetSuite::SelectCustomFieldRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryItemBinNumber,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
    :schema_element => [
      ["binNumber", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPString", [0, 1]],
      ["onHandAvail", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryItemBinNumberList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
    :schema_element => [
      ["binNumber", "NetSuite::InventoryItemBinNumber[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::InventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PresentationItemList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PresentationItemList"),
    :schema_element => [
      ["presentationItem", "NetSuite::PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DescriptionItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DiscountItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DownloadItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DownloadItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::MarkupItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SubtotalItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NonInventoryPurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NonInventorySaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NonInventoryResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherChargeResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherChargePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["overheadType", "NetSuite::ItemOverheadType", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ServiceResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ServicePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ServiceSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherChargeSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Currency,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Currency"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["locale", "NetSuite::CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "NetSuite::CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "NetSuite::CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rateRequired", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultRate", "SOAP::SOAPDouble", [0, 1]],
      ["ratesList", "NetSuite::ExpenseCategoryRatesList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Account,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Account"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "NetSuite::AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["cashFlowRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "NetSuite::RecordRef", [0, 1]],
      ["deferralAcct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["category1099misc", "NetSuite::RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::AccountTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountTranslationList"),
    :schema_element => [
      ["translation", "NetSuite::ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AccountSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AccountSearch", [0, 1]],
      ["columns", "NetSuite::AccountSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AccountSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Department,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Department"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DepartmentSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DepartmentSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::DepartmentSearch", [0, 1]],
      ["columns", "NetSuite::DepartmentSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DepartmentSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Classification,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Classification"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassificationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassificationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ClassificationSearch", [0, 1]],
      ["columns", "NetSuite::ClassificationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ClassificationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Location,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Location"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LocationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::LocationSearch", [0, 1]],
      ["columns", "NetSuite::LocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LocationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "NetSuite::UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeUom,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["unitName", "SOAP::SOAPString", [0, 1]],
      ["pluralName", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
      ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
      ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeUomList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
    :schema_element => [
      ["uom", "NetSuite::UnitsTypeUom[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["binOnHandJoin", "NetSuite::ItemBinNumberSearchBasic", [0, 1]],
      ["correlatedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["effectiveRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["inventoryNumberBinOnHandJoin", "NetSuite::InventoryNumberBinSearchBasic", [0, 1]],
      ["memberItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["obsoleteRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["parentJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemSearch", [0, 1]],
      ["columns", "NetSuite::ItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["binOnHandJoin", "NetSuite::ItemBinNumberSearchRowBasic", [0, 1]],
      ["correlatedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["effectiveRevisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchRowBasic", [0, 1]],
      ["inventoryLocationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["inventoryNumberJoin", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["inventoryNumberBinOnHandJoin", "NetSuite::InventoryNumberBinSearchRowBasic", [0, 1]],
      ["memberItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["obsoleteRevisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["parentJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["preferredLocationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["preferredVendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRole,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Bin,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Bin"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::BinSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BinSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::BinSearch", [0, 1]],
      ["columns", "NetSuite::BinSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["purchaseAccount", "NetSuite::RecordRef", [0, 1]],
      ["saleAccount", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["service", "SOAP::SOAPBoolean", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "NetSuite::SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "NetSuite::RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxitem1", "NetSuite::RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "NetSuite::RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "NetSuite::TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxGroupTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
    :schema_element => [
      ["taxName", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["basis", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxGroupTaxItemList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
    :schema_element => [
      ["taxItem", "NetSuite::TaxGroupTaxItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "NetSuite::TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxTypeNexusesTax,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
    :schema_element => [
      ["nexus", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["saleTaxAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchTaxAcct", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxTypeNexusesTaxList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
    :schema_element => [
      ["nexusesTax", "NetSuite::TaxTypeNexusesTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::SerializedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "NetSuite::SerializedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["locationlookup", "NetSuite::RecordRef", [0, 1]],
      ["location_display", "SOAP::SOAPString", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::LotNumberedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "NetSuite::LotNumberedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["authCodesList", "NetSuite::GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateItemAuthCodes,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
    :schema_element => [
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateItemAuthCodesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
    :schema_element => [
      ["authCodes", "NetSuite::GiftCertificateItemAuthCodes[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Subsidiary,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "NetSuite::RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "NetSuite::RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "NetSuite::RecordRef", [0, 1]],
      ["caseCreationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "NetSuite::RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseEscalationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "NetSuite::Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxFiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "NetSuite::Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "NetSuite::RecordRef", [0, 1]],
      ["nexusList", "NetSuite::SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiaryNexus,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
    :schema_element => [
      ["nexusId", "NetSuite::RecordRef", [0, 1]],
      ["country", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiaryNexusList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
    :schema_element => [
      ["nexus", "NetSuite::SubsidiaryNexus[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiarySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiarySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SubsidiarySearch", [0, 1]],
      ["columns", "NetSuite::SubsidiarySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SubsidiarySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::GiftCertificateSearch", [0, 1]],
      ["columns", "NetSuite::GiftCertificateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertificateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::GiftCertificateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::KitItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "KitItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SerializedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LotNumberedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ServiceItemTaskTemplates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplates"),
    :schema_element => [
      ["taskName", "SOAP::SOAPString", [0, 1]],
      ["taskStartOffset", "SOAP::SOAPLong", [0, 1]],
      ["taskDuration", "NetSuite::Duration", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ServiceItemTaskTemplatesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplatesList"),
    :schema_element => [
      ["taskTemplates", "NetSuite::ServiceItemTaskTemplates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::State,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "State"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriod,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriod"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendarsList", "NetSuite::AccountingPeriodFiscalCalendarsList", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BudgetCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AccountingPeriodSearch", [0, 1]],
      ["columns", "NetSuite::AccountingPeriodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AccountingPeriodSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactCategorySearch", [0, 1]],
      ["columns", "NetSuite::ContactCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactRoleSearch", [0, 1]],
      ["columns", "NetSuite::ContactRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactRoleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerCategorySearch", [0, 1]],
      ["columns", "NetSuite::CustomerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ExpenseCategorySearch", [0, 1]],
      ["columns", "NetSuite::ExpenseCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ExpenseCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NoteTypeSearch", [0, 1]],
      ["columns", "NetSuite::NoteTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NoteTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PartnerCategorySearch", [0, 1]],
      ["columns", "NetSuite::PartnerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PartnerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PaymentMethodSearch", [0, 1]],
      ["columns", "NetSuite::PaymentMethodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaymentMethodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PaymentMethodSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevelSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevelSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PriceLevelSearch", [0, 1]],
      ["columns", "NetSuite::PriceLevelSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PriceLevelSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PriceLevelSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SalesRoleSearch", [0, 1]],
      ["columns", "NetSuite::SalesRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SalesRoleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TermSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TermSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TermSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TermSearch", [0, 1]],
      ["columns", "NetSuite::TermSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TermSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TermSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::VendorCategorySearch", [0, 1]],
      ["columns", "NetSuite::VendorCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::VendorCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReasonSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReasonSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::WinLossReasonSearch", [0, 1]],
      ["columns", "NetSuite::WinLossReasonSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WinLossReasonSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::WinLossReasonSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::UnitsTypeSearch", [0, 1]],
      ["columns", "NetSuite::UnitsTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::UnitsTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::UnitsTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroupSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PricingGroupSearch", [0, 1]],
      ["columns", "NetSuite::PricingGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PricingGroupSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PricingGroupSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumber,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumber"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "NetSuite::InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityInTransit", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::InventoryNumberLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::InventoryNumberSearch", [0, 1]],
      ["columns", "NetSuite::InventoryNumberSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryNumberSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecSchedule,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecSchedule"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrence"),
    :schema_element => [
      ["incomeaccount", "NetSuite::RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceList"),
    :schema_element => [
      ["revRecScheduleRecurrence", "NetSuite::RevRecScheduleRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrence"),
    :schema_element => [
      ["incomeaccount", "NetSuite::RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrenceList"),
    :schema_element => [
      ["revRecTemplateRecurrence", "NetSuite::RevRecTemplateRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::RevRecScheduleSearch", [0, 1]],
      ["columns", "NetSuite::RevRecScheduleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::RevRecScheduleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::RevRecTemplateSearch", [0, 1]],
      ["columns", "NetSuite::RevRecTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecTemplateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::RevRecTemplateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CostCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CostCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["itemCostType", "NetSuite::CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Nexus,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Nexus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["state", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["taxAgencyPst", "NetSuite::RecordRef", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NexusSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NexusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::NexusSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NexusSearch", [0, 1]],
      ["columns", "NetSuite::NexusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::NexusSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NexusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessage,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessage"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::OtherNameCategorySearch", [0, 1]],
      ["columns", "NetSuite::OtherNameCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherNameCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OtherNameCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessageSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerMessageSearch", [0, 1]],
      ["columns", "NetSuite::CustomerMessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMessageSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerMessageSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["includeStartEndLines", "SOAP::SOAPBoolean", [0, 1]],
      ["isVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["baseCurrency", "NetSuite::RecordRef", [0, 1]],
      ["transactionCurrency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CurrencyRateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CurrencyRateSearch", [0, 1]],
      ["columns", "NetSuite::CurrencyRateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyRateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CurrencyRateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevision,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevision"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["obsoleteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevisionSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevisionSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemRevisionSearch", [0, 1]],
      ["columns", "NetSuite::ItemRevisionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemRevisionSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodFiscalCalendars,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodFiscalCalendars"),
    :schema_element => [
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountingPeriodFiscalCalendarsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodFiscalCalendarsList"),
    :schema_element => [
      ["accountingPeriodFiscalCalendars", "NetSuite::AccountingPeriodFiscalCalendars[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxAcct,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxAcct"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexus", "NetSuite::RecordRef", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["taxAcctType", "NetSuite::TaxAcctType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategoryRates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategoryRates"),
    :schema_element => [
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["defaultRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseCategoryRatesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategoryRatesList"),
    :schema_element => [
      ["expenseCategoryRates", "NetSuite::ExpenseCategoryRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Opportunity,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::OpportunityPartnersList", [0, 1]],
      ["itemList", "NetSuite::OpportunityItemList", [0, 1]],
      ["competitorsList", "NetSuite::OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::OpportunitySalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
    :schema_element => [
      ["item", "NetSuite::OpportunityItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityCompetitors,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
    :schema_element => [
      ["competitor", "NetSuite::RecordRef", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["strategy", "SOAP::SOAPString", [0, 1]],
      ["winner", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityCompetitorsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
    :schema_element => [
      ["competitors", "NetSuite::OpportunityCompetitors[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySearch,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["estimateJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["orderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::OpportunitySearch", [0, 1]],
      ["columns", "NetSuite::OpportunitySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunitySearchRow,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["actualJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["decisionMakerJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["estimateJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["orderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityPartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrder,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "NetSuite::TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "NetSuite::TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "NetSuite::TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["itemList", "NetSuite::SalesOrderItemList", [0, 1]],
      ["shipGroupList", "NetSuite::SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::SalesOrderSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["commitInventory", "NetSuite::SalesOrderItemCommitInventory", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["createPo", "NetSuite::SalesOrderItemCreatePo", [0, 1]],
      ["createdPo", "NetSuite::RecordRef", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["poVendor", "NetSuite::RecordRef", [0, 1]],
      ["poCurrency", "SOAP::SOAPString", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["excludeFromRateRequest", "SOAP::SOAPBoolean", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::SalesOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderPartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionSearch,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["accountJoin", "NetSuite::AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobMainJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["payingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["payrollItemJoin", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["revisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TransactionSearch", [0, 1]],
      ["columns", "NetSuite::TransactionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionSearchRow,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["accountJoin", "NetSuite::AccountSearchRowBasic", [0, 1]],
      ["accountingPeriodJoin", "NetSuite::AccountingPeriodSearchRowBasic", [0, 1]],
      ["appliedToTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["applyingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["billingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["cogsPurchaseJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["cogsSaleJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["createdFromJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["customerMainJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["depositTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["expenseCategoryJoin", "NetSuite::ExpenseCategorySearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["fulfillingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["itemNumberJoin", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["jobMainJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["paidTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["payingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["payrollItemJoin", "NetSuite::PayrollItemSearchRowBasic", [0, 1]],
      ["purchaseOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["requestorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["revCommittingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["revisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["rgPostingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["salesOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillment,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "NetSuite::ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeUps", "NetSuite::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "NetSuite::ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "NetSuite::ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "NetSuite::ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "NetSuite::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "NetSuite::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeFedEx", "NetSuite::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "NetSuite::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["insideDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insidePickupFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["ancillaryEndorsementFedEx", "NetSuite::ItemFulfillmentAncillaryEndorsementFedEx", [0, 1]],
      ["holdAtLocationFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["halPhoneFedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr1FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr2FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr3FedEx", "SOAP::SOAPString", [0, 1]],
      ["halCityFedEx", "SOAP::SOAPString", [0, 1]],
      ["halZipFedEx", "SOAP::SOAPString", [0, 1]],
      ["halStateFedEx", "SOAP::SOAPString", [0, 1]],
      ["halCountryFedEx", "SOAP::SOAPString", [0, 1]],
      ["hazmatTypeFedEx", "NetSuite::ItemFulfillmentHazmatTypeFedEx", [0, 1]],
      ["accessibilityTypeFedEx", "NetSuite::ItemFulfillmentAccessibilityTypeFedEx", [0, 1]],
      ["isCargoAircraftOnlyFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["packageList", "NetSuite::ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "NetSuite::ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "NetSuite::ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "NetSuite::ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "NetSuite::ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "NetSuite::ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
    :schema_element => [
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["createPo", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["poNum", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
    :schema_element => [
      ["item", "NetSuite::ItemFulfillmentItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackage,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
    :schema_element => [
      ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescr", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
    :schema_element => [
      ["package", "NetSuite::ItemFulfillmentPackage[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUps,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
    :schema_element => [
      ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
      ["packagingUps", "NetSuite::ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
      ["useInsuredValueUps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Ups", "SOAP::SOAPString", [0, 1]],
      ["reference2Ups", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
      ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
      ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodUps", "NetSuite::ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
      ["deliveryConfUps", "NetSuite::ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
    :schema_element => [
      ["packageUps", "NetSuite::ItemFulfillmentPackageUps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUsps,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUsps"),
    :schema_element => [
      ["packageWeightUsps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUsps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUsps", "SOAP::SOAPString", [0, 1]],
      ["packagingUsps", "NetSuite::ItemFulfillmentPackageUspsPackagingUsps", [0, 1]],
      ["useInsuredValueUsps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUsps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Usps", "SOAP::SOAPString", [0, 1]],
      ["reference2Usps", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUsps", "SOAP::SOAPLong", [0, 1]],
      ["deliveryConfUsps", "NetSuite::ItemFulfillmentPackageUspsDeliveryConfUsps", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsList"),
    :schema_element => [
      ["packageUsps", "NetSuite::ItemFulfillmentPackageUsps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedEx,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
    :schema_element => [
      ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["dryIceWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
      ["packagingFedEx", "NetSuite::ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
      ["admPackageTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
      ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["isAlcoholFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["isNonHazLithiumFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
      ["priorityAlertTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExPriorityAlertTypeFedEx", [0, 1]],
      ["priorityAlertContentFedEx", "SOAP::SOAPString", [0, 1]],
      ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
      ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodFedEx", "NetSuite::ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
      ["codFreightTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
      ["deliveryConfFedEx", "NetSuite::ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
      ["signatureOptionsFedEx", "NetSuite::ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
      ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
      ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
    :schema_element => [
      ["packageFedEx", "NetSuite::ItemFulfillmentPackageFedEx[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Invoice,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::InvoicePartnersList", [0, 1]],
      ["itemList", "NetSuite::InvoiceItemList", [0, 1]],
      ["itemCostList", "NetSuite::InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::InvoiceExpCostList", [0, 1]],
      ["timeList", "NetSuite::InvoiceTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::InvoiceSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
    :schema_element => [
      ["item", "NetSuite::InvoiceItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceItemCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceItemCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
    :schema_element => [
      ["itemCost", "NetSuite::InvoiceItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceExpCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceExpCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
    :schema_element => [
      ["expCost", "NetSuite::InvoiceExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceTime,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceTimeList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
    :schema_element => [
      ["time", "NetSuite::InvoiceTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoicePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoicePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InvoiceShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSale,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashSalePartnersList", [0, 1]],
      ["itemList", "NetSuite::CashSaleItemList", [0, 1]],
      ["itemCostList", "NetSuite::CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::CashSaleExpCostList", [0, 1]],
      ["timeList", "NetSuite::CashSaleTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CashSaleSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
    :schema_element => [
      ["item", "NetSuite::CashSaleItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleItemCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleItemCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
    :schema_element => [
      ["itemCost", "NetSuite::CashSaleItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleExpCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleExpCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
    :schema_element => [
      ["expCost", "NetSuite::CashSaleExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleTime,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleTimeList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
    :schema_element => [
      ["time", "NetSuite::CashSaleTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSalePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSalePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashSaleShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Estimate,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::EstimateItemList", [0, 1]],
      ["salesTeamList", "NetSuite::EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "NetSuite::EstimatePartnersList", [0, 1]],
      ["shipGroupList", "NetSuite::EstimateShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimateItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimateItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
    :schema_element => [
      ["item", "NetSuite::EstimateItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimateSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimateSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::EstimateSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimatePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimatePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EstimateShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertRedemption,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
    :schema_element => [
      ["authCode", "NetSuite::RecordRef", [0, 1]],
      ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
      ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::GiftCertRedemptionList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
    :schema_element => [
      ["giftCertRedemption", "NetSuite::GiftCertRedemption[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionShipGroup,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionShipGroup"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["isFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["sourceAddressRef", "NetSuite::RecordRef", [0, 1]],
      ["sourceAddress", "SOAP::SOAPString", [0, 1]],
      ["destinationAddressRef", "NetSuite::RecordRef", [0, 1]],
      ["destinationAddress", "SOAP::SOAPString", [0, 1]],
      ["shippingMethodRef", "NetSuite::RecordRef", [0, 1]],
      ["shippingMethod", "SOAP::SOAPString", [0, 1]],
      ["isHandlingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingRate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["isShippingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingRate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Amt", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchLandedCostList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchLandedCostList"),
    :schema_element => [
      ["landedCost", "NetSuite::LandedCostSummary[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorBill,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::VendorBillExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorBillItemList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]],
      ["purchaseOrderList", "NetSuite::RecordRefList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorBillExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
    :schema_element => [
      ["orderDoc", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorBillExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorBillExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorBillItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderDoc", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["landedCostCategory", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["billreceiptsList", "NetSuite::RecordRefList", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorBillItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorBillItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrder,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["shipTo", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "NetSuite::PurchaseOrderItemList", [0, 1]],
      ["expenseList", "NetSuite::PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrderExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrderExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::PurchaseOrderExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrderItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["landedCostCategory", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrderItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::PurchaseOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemReceipt,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ItemReceiptItemList", [0, 1]],
      ["expenseList", "NetSuite::ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemReceiptItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
    :schema_element => [
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitCostOverride", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["restock", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemReceiptItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
    :schema_element => [
      ["item", "NetSuite::ItemReceiptItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemReceiptExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
    :schema_element => [
      ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["account", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemReceiptExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::ItemReceiptExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPayment,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::VendorPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPaymentApply,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPaymentApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
    :schema_element => [
      ["apply", "NetSuite::VendorPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPaymentCredit,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorPaymentCreditList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
    :schema_element => [
      ["credit", "NetSuite::VendorPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCredit,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCredit"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::VendorCreditExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorCreditItemList", [0, 1]],
      ["applyList", "NetSuite::VendorCreditApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorCreditExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbersList", "NetSuite::RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorCreditItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditApply,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorCreditApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditApplyList"),
    :schema_element => [
      ["apply", "NetSuite::VendorCreditApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorization,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["expenseList", "NetSuite::VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorReturnAuthorizationExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbersList", "NetSuite::RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefund,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::CashRefundItemList", [0, 1]],
      ["salesTeamList", "NetSuite::CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashRefundPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefundItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPString", [0, 1]],
      ["taxRate2", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefundItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
    :schema_element => [
      ["item", "NetSuite::CashRefundItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefundSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefundSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CashRefundSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CashRefundPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPayment,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::CustomerPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::CustomerPaymentCreditList", [0, 1]],
      ["depositList", "NetSuite::CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CustomerPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentCredit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentCreditList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
    :schema_element => [
      ["credit", "NetSuite::CustomerPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerPaymentDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
    :schema_element => [
      ["deposit", "NetSuite::CustomerPaymentDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorization,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "NetSuite::ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "NetSuite::ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "NetSuite::ReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::ReturnAuthorizationSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemo,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "NetSuite::CreditMemoItemList", [0, 1]],
      ["partnersList", "NetSuite::CreditMemoPartnersList", [0, 1]],
      ["applyList", "NetSuite::CreditMemoApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CreditMemoSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
    :schema_element => [
      ["item", "NetSuite::CreditMemoItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CreditMemoApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CreditMemoPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerRefund,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerRefundApplyList", [0, 1]],
      ["depositList", "NetSuite::CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerRefundApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerRefundApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CustomerRefundApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerRefundDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerRefundDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
    :schema_element => [
      ["customerRefundDeposit", "NetSuite::CustomerRefundDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerDepositApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDepositApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerDepositApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDepositApplyList"),
    :schema_element => [
      ["customerDepositApply", "NetSuite::CustomerDepositApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DepositApplication,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["deposit", "NetSuite::RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DepositApplicationApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DepositApplicationApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
    :schema_element => [
      ["apply", "NetSuite::DepositApplicationApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Charge,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "Charge"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["billTo", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::ChargeStage", [0, 1]],
      ["chargeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["use", "NetSuite::ChargeUse", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["projectTask", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timeRecord", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["billingItem", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["salesOrderLine", "NetSuite::RecordRef", [0, 1]],
      ["invoice", "NetSuite::RecordRef", [0, 1]],
      ["invoiceLine", "NetSuite::RecordRef", [0, 1]],
      ["runId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeSearch,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ChargeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ChargeSearch", [0, 1]],
      ["columns", "NetSuite::ChargeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeSearchRow,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ChargeSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::Budget,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "Budget"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["budgetType", "NetSuite::BudgetBudgetType", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetSearch,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::BudgetSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetSearchAdvanced,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::BudgetSearch", [0, 1]],
      ["columns", "NetSuite::BudgetSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetSearchRow,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::BudgetSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckLandedCostList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckLandedCostList"),
    :schema_element => [
      ["landedCost", "NetSuite::LandedCostSummary[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Check,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::CheckExpenseList", [0, 1]],
      ["itemList", "NetSuite::CheckItemList", [0, 1]],
      ["landedCostsList", "NetSuite::CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckExpense,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckExpenseList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::CheckExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckItem,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CheckItemList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckItemList"),
    :schema_element => [
      ["item", "NetSuite::CheckItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryAdjustment,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "NetSuite::InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryAdjustmentInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["currentValue", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryAdjustmentInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::InventoryAdjustmentInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyBuild,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyBuild"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyUnbuild,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyUnbuild"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["componentNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyComponentList"),
    :schema_element => [
      ["component", "NetSuite::AssemblyComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::TransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["commitInventory", "NetSuite::TransferOrderItemCommitInventory", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::TransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyTransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyTransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["commitInventory", "NetSuite::TransferOrderItemCommitInventory", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyTransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::InterCompanyTransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["assemblyItem", "NetSuite::RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "NetSuite::WorkOrderItemList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::SalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::PartnersList", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItem"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["componentYield", "SOAP::SOAPDouble", [0, 1]],
      ["bomQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["poVendor", "NetSuite::RecordRef", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["commit", "NetSuite::WorkOrderItemItemCommitInventory", [0, 1]],
      ["createPo", "NetSuite::WorkOrderItemItemCreatePo", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::WorkOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesTeamList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "SalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CustomerSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnersList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "PartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryTransfer,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["fromBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["toBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransferInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::InventoryTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinTransfer,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::BinTransferInventoryList", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["fromBins", "SOAP::SOAPString", [0, 1]],
      ["toBins", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BinTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransferInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::BinTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinWorksheet,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheet"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["itemList", "NetSuite::BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::BinWorksheetItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheetItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemOnHand", "SOAP::SOAPString", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["itemBins", "SOAP::SOAPString", [0, 1]],
      ["itemBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["itemBinList", "SOAP::SOAPString", [0, 1]],
      ["itemPreferBin", "SOAP::SOAPString", [0, 1]],
      ["itemBlank", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::BinWorksheetItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheetItemList"),
    :schema_element => [
      ["item", "NetSuite::BinWorksheetItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderIssue,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderIssueComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderIssueComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssueComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderIssueComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssueComponentList"),
    :schema_element => [
      ["workOrderIssueComponent", "NetSuite::WorkOrderIssueComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderCompletion,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletion"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["isBackflush", "SOAP::SOAPBoolean", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["startOperation", "NetSuite::RecordRef", [0, 1]],
      ["endOperation", "NetSuite::RecordRef", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderCompletionComponentList", [0, 1]],
      ["operationList", "NetSuite::WorkOrderCompletionOperationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderCompletionComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantityPer", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderCompletionComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionComponentList"),
    :schema_element => [
      ["workOrderCompletionComponent", "NetSuite::WorkOrderCompletionComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderClose,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderClose"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderCompletionOperation,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionOperation"),
    :schema_element => [
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["operationName", "SOAP::SOAPString", [0, 1]],
      ["workCenter", "SOAP::SOAPString", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["inputQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["predecessorCompletedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["recordSetup", "SOAP::SOAPBoolean", [0, 1]],
      ["machineSetupTime", "SOAP::SOAPDouble", [0, 1]],
      ["laborSetupTime", "SOAP::SOAPDouble", [0, 1]],
      ["machineRunTime", "SOAP::SOAPDouble", [0, 1]],
      ["laborRunTime", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderCompletionOperationList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionOperationList"),
    :schema_element => [
      ["workOrderCompletionOperation", "NetSuite::WorkOrderCompletionOperation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryCostRevaluation,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluation"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryValue", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["costComponentList", "NetSuite::InventoryCostRevaluationCostComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryCostRevaluationCostComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluationCostComponent"),
    :schema_element => [
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["componentItem", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InventoryCostRevaluationCostComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluationCostComponentList"),
    :schema_element => [
      ["costComponent", "NetSuite::InventoryCostRevaluationCostComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["lineList", "NetSuite::JournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::JournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
    :schema_element => [
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["scheduleNum", "NetSuite::RecordRef", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::JournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
    :schema_element => [
      ["line", "NetSuite::JournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyJournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "NetSuite::InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyJournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
    :schema_element => [
      ["lineSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["scheduleNum", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::InterCompanyJournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
    :schema_element => [
      ["line", "NetSuite::InterCompanyJournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecord,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTranslationsList", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["ownerJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomRecordSearch", [0, 1]],
      ["columns", "NetSuite::CustomRecordSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomRecordSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["ownerJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "NetSuite::CustomListCustomValueList", [0, 1]],
      ["translationsList", "NetSuite::CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListCustomValue,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
    :schema_element => [
      ["value", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["valueId", "SOAP::SOAPLong", [0, 1]],
      ["valueLanguageValueList", "NetSuite::LanguageValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListCustomValueList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
    :schema_element => [
      ["customValue", "NetSuite::CustomListCustomValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomListTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordType,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "NetSuite::CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["enableDle", "SOAP::SOAPBoolean", [0, 1]],
      ["enableNameTranslation", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "NetSuite::CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "NetSuite::CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "NetSuite::CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "NetSuite::CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "NetSuite::CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "NetSuite::CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "NetSuite::CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "NetSuite::CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "NetSuite::CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTypeTranslationsList", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeFieldList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
    :schema_element => [
      ["customField", "NetSuite::CustomRecordCustomField[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeTabs,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
    :schema_element => [
      ["tabTitle", "SOAP::SOAPString", [0, 1]],
      ["tabParent", "NetSuite::RecordRef", [0, 1]],
      ["tabTitleLanguageValueList", "NetSuite::LanguageValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeTabsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
    :schema_element => [
      ["tabs", "NetSuite::CustomRecordTypeTabs[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeForms,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
    :schema_element => [
      ["formEdit", "SOAP::SOAPString", [0, 1]],
      ["formName", "SOAP::SOAPString", [0, 1]],
      ["formPref", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
    :schema_element => [
      ["forms", "NetSuite::CustomRecordTypeForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeOnlineForms,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
    :schema_element => [
      ["onlineFormName", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPString", [0, 1]],
      ["templateName", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeOnlineFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
    :schema_element => [
      ["onlineForms", "NetSuite::CustomRecordTypeOnlineForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypePermissions,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
    :schema_element => [
      ["permittedRole", "NetSuite::RecordRef", [0, 1]],
      ["permittedLevel", "NetSuite::CustomRecordTypePermissionsPermittedLevel", [0, 1]],
      ["restriction", "NetSuite::CustomRecordTypePermissionsRestriction", [0, 1]],
      ["defaultForm", "NetSuite::RecordRef", [0, 1]],
      ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
      ["searchForm", "NetSuite::RecordRef", [0, 1]],
      ["searchResults", "NetSuite::RecordRef", [0, 1]],
      ["listView", "NetSuite::RecordRef", [0, 1]],
      ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
      ["dashboardView", "NetSuite::RecordRef", [0, 1]],
      ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
      ["sublistView", "NetSuite::RecordRef", [0, 1]],
      ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
    :schema_element => [
      ["permissions", "NetSuite::CustomRecordTypePermissions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeLinks,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
    :schema_element => [
      ["linkCenter", "NetSuite::RecordRef", [0, 1]],
      ["linkSection", "NetSuite::RecordRef", [0, 1]],
      ["linkLabel", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeLinksList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
    :schema_element => [
      ["links", "NetSuite::CustomRecordTypeLinks[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeManagers,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
    :schema_element => [
      ["managerEmp", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeManagersList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
    :schema_element => [
      ["managers", "NetSuite::CustomRecordTypeManagers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeChildren,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]],
      ["childTab", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeChildrenList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
    :schema_element => [
      ["children", "NetSuite::CustomRecordTypeChildren[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeParents,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeParentsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
    :schema_element => [
      ["parents", "NetSuite::CustomRecordTypeParents[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomRecordTypeTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeSublists,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeSublists"),
    :schema_element => [
      ["recordSearch", "NetSuite::RecordRef", [0, 1]],
      ["recordDescr", "SOAP::SOAPString", [0, 1]],
      ["recordDescrLanguageValueList", "NetSuite::LanguageValueList", [0, 1]],
      ["recordTab", "NetSuite::RecordRef", [0, 1]],
      ["recordId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeSublistsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeSublistsList"),
    :schema_element => [
      ["sublists", "NetSuite::CustomRecordTypeSublists[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::EntityCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::FldFilterSelList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "FldFilterSelList"),
    :schema_element => [
      ["fldFilterSel", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CrmCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToMfgProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CrmCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CrmCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::CrmCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["filterList", "NetSuite::OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::OtherCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::OtherCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "NetSuite::ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "NetSuite::ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionBodyCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionBodyCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionBodyCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::TransactionBodyCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionColumnCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionColumnCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionColumnCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::TransactionColumnCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOptionCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemsList"),
    :schema_element => [
      ["items", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOptionCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOptionCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemOptionCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourcefilterby", "NetSuite::RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::CustomRecordCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldRoleAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldRoleAccess"),
    :schema_element => [
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldRoleAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldRoleAccessList"),
    :schema_element => [
      ["roleAccess", "NetSuite::CustomFieldRoleAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldDepartmentAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccess"),
    :schema_element => [
      ["dept", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldDepartmentAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccessList"),
    :schema_element => [
      ["deptAccess", "NetSuite::CustomFieldDepartmentAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldSubAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldSubAccess"),
    :schema_element => [
      ["sub", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldSubAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldSubAccessList"),
    :schema_element => [
      ["subAccess", "NetSuite::CustomFieldSubAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::LanguageValue,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "LanguageValue"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["value", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::LanguageValueList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "LanguageValueList"),
    :schema_element => [
      ["languageValue", "NetSuite::LanguageValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomFieldTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomFieldTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemNumberCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["filterList", "NetSuite::ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemNumberCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldfilterNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldCompareField", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemNumberCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemNumberCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomListSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomListSearch", [0, 1]],
      ["columns", "NetSuite::CustomListSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomListSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomListSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinition,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinition"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "NetSuite::AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionPackages,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionPackages"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionPackagesList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionPackagesList"),
    :schema_element => [
      ["packages", "NetSuite::AppDefinitionPackages[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AppDefinitionSearch", [0, 1]],
      ["columns", "NetSuite::AppDefinitionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AppDefinitionSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AppDefinitionSearchRowBasic", [0, 1]],
      ["appPackageJoin", "NetSuite::AppPackageSearchRowBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackage,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackage"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "NetSuite::RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "NetSuite::RecordRef", [0, 1]],
      ["bundle", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackageSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AppPackageSearch", [0, 1]],
      ["columns", "NetSuite::AppPackageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::AppPackageSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AppPackageSearchRowBasic", [0, 1]],
      ["appDefinitionJoin", "NetSuite::AppDefinitionSearchRowBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["packageFileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTranslationsList"),
    :schema_element => [
      ["customRecordTranslations", "NetSuite::CustomRecordTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Employee,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "Employee"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingClass", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["payFrequency", "NetSuite::EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["useTimeData", "NetSuite::EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["approver", "NetSuite::RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "NetSuite::RecordRef", [0, 1]],
      ["employeeType", "NetSuite::RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "NetSuite::RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "NetSuite::RecordRef", [0, 1]],
      ["ethnicity", "NetSuite::RecordRef", [0, 1]],
      ["gender", "NetSuite::Gender", [0, 1]],
      ["purchaseOrderApprover", "NetSuite::RecordRef", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "NetSuite::EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "NetSuite::EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::EmployeeAddressbookList", [0, 1]],
      ["rolesList", "NetSuite::EmployeeRolesList", [0, 1]],
      ["hrEducationList", "NetSuite::EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "NetSuite::EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "NetSuite::EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "NetSuite::EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "NetSuite::EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "NetSuite::EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "NetSuite::EmployeeDeductionList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSubscriptions,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPString", [0, 1]],
      ["subscription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSubscriptionsList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
    :schema_element => [
      ["subscriptions", "NetSuite::EmployeeSubscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeAddressbook,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeAddressbookList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::EmployeeAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeRoles,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeRoles"),
    :schema_element => [
      ["selectedRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeRolesList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
    :schema_element => [
      ["roles", "NetSuite::EmployeeRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::EmployeeSearch", [0, 1]],
      ["columns", "NetSuite::EmployeeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeEmergencyContact,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEmergencyContact"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["contact", "SOAP::SOAPString", [0, 1]],
      ["relationship", "SOAP::SOAPString", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeEmergencyContactList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEmergencyContactList"),
    :schema_element => [
      ["employeeEmergencyContact", "NetSuite::EmployeeEmergencyContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeHrEducation,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeHrEducation"),
    :schema_element => [
      ["education", "NetSuite::RecordRef", [0, 1]],
      ["degree", "SOAP::SOAPString", [0, 1]],
      ["degreeDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeHrEducationList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeHrEducationList"),
    :schema_element => [
      ["employeeHrEducation", "NetSuite::EmployeeHrEducation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeAccruedTime,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTime"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["accruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["accrualRate", "SOAP::SOAPDouble", [0, 1]],
      ["monetaryRate", "SOAP::SOAPDouble", [0, 1]],
      ["resetAccruedHoursAtYearEnd", "SOAP::SOAPBoolean", [0, 1]],
      ["accrualMethod", "NetSuite::EmployeeAccruedTimeAccrualMethod", [0, 1]],
      ["maximumAccruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeAccruedTimeList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeList"),
    :schema_element => [
      ["employeeAccruedTime", "NetSuite::EmployeeAccruedTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDeduction"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDeductionList"),
    :schema_element => [
      ["employeeDeduction", "NetSuite::EmployeeDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCompanyContribution"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCompanyContributionList"),
    :schema_element => [
      ["employeeCompanyContribution", "NetSuite::EmployeeCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeEarning,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEarning"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["payRate", "SOAP::SOAPString", [0, 1]],
      ["primaryEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEarningList"),
    :schema_element => [
      ["employeeEarning", "NetSuite::EmployeeEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeDirectDeposit,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDeposit"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["netAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["savingsAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["accountPrenoted", "SOAP::SOAPBoolean", [0, 1]],
      ["accountStatus", "NetSuite::EmployeeDirectDepositAccountStatus", [0, 1]],
      ["bankName", "SOAP::SOAPString", [0, 1]],
      ["bankId", "SOAP::SOAPString", [0, 1]],
      ["bankNumber", "SOAP::SOAPString", [0, 1]],
      ["bankRoutingNumber", "SOAP::SOAPString", [0, 1]],
      ["bankAccountNumber", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeDirectDepositList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDepositList"),
    :schema_element => [
      ["employeeDirectDeposit", "NetSuite::EmployeeDirectDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItem,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["itemType", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["employeePaid", "SOAP::SOAPBoolean", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PayrollItemSearch", [0, 1]],
      ["columns", "NetSuite::PayrollItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PayrollItemSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategory,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "NetSuite::RecordRef", [0, 1]],
      ["categoryListLayout", "NetSuite::RecordRef", [0, 1]],
      ["itemListLayout", "NetSuite::RecordRef", [0, 1]],
      ["relatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["correlatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "NetSuite::SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "NetSuite::SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategoryTranslation,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryTranslation"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategoryTranslationList,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryTranslationList"),
    :schema_element => [
      ["translation", "NetSuite::SiteCategoryTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategoryPresentationItemList,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
    :schema_element => [
      ["presentationItem", "NetSuite::PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategorySearch,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SiteCategorySearch", [0, 1]],
      ["columns", "NetSuite::SiteCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::SiteCategorySearchRow,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SiteCategorySearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBill,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["caseTaskEvent", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["hours", "NetSuite::Duration", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["timeType", "NetSuite::TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TimeBillSearch", [0, 1]],
      ["columns", "NetSuite::TimeBillSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseReport,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReport"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseReportExpense,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReportExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["expenseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["foreignAmount", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["expMediaItem", "NetSuite::RecordRef", [0, 1]],
      ["isNonReimbursable", "SOAP::SOAPBoolean", [0, 1]],
      ["receipt", "SOAP::SOAPBoolean", [0, 1]],
      ["refNumber", "SOAP::SOAPLong", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ExpenseReportExpenseList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReportExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::ExpenseReportExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournal,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournal"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["companyContributionList", "NetSuite::PaycheckJournalCompanyContributionList", [0, 1]],
      ["deductionList", "NetSuite::PaycheckJournalDeductionList", [0, 1]],
      ["employeeTaxList", "NetSuite::PaycheckJournalEmployeeTaxList", [0, 1]],
      ["companyTaxList", "NetSuite::PaycheckJournalCompanyTaxList", [0, 1]],
      ["earningList", "NetSuite::PaycheckJournalEarningList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyTax,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyTax"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyTaxList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyTaxList"),
    :schema_element => [
      ["paycheckJournalCompanyTax", "NetSuite::PaycheckJournalCompanyTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalDeduction"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalDeductionList"),
    :schema_element => [
      ["paycheckJournalDeduction", "NetSuite::PaycheckJournalDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyContribution"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyContributionList"),
    :schema_element => [
      ["paycheckJournalCompanyContribution", "NetSuite::PaycheckJournalCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalEarning,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEarning"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["hours", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEarningList"),
    :schema_element => [
      ["paycheckJournalEarning", "NetSuite::PaycheckJournalEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalEmployeeTax,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEmployeeTax"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PaycheckJournalEmployeeTaxList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEmployeeTaxList"),
    :schema_element => [
      ["paycheckJournalEmployeeTax", "NetSuite::PaycheckJournalEmployeeTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::Campaign,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "NetSuite::RecordRef", [0, 1]],
      ["audience", "NetSuite::RecordRef", [0, 1]],
      ["offer", "NetSuite::RecordRef", [0, 1]],
      ["promotionCode", "NetSuite::RecordRef", [0, 1]],
      ["itemList", "NetSuite::RecordRefList", [0, 1]],
      ["family", "NetSuite::RecordRef", [0, 1]],
      ["searchEngine", "NetSuite::RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "NetSuite::CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "NetSuite::CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "NetSuite::CampaignEventList", [0, 1]],
      ["eventResponseList", "NetSuite::CampaignEventResponseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEmail,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEmail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignEmailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEmailList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEmailList"),
    :schema_element => [
      ["campaignEmail", "NetSuite::CampaignEmail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignDirectMail,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignDirectMailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignDirectMailList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
    :schema_element => [
      ["campaignDirectMail", "NetSuite::CampaignDirectMail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEvent,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEvent"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignEventStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEventList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventList"),
    :schema_element => [
      ["campaignEvent", "NetSuite::CampaignEvent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEventResponse,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["sent", "SOAP::SOAPDouble", [0, 1]],
      ["opened", "SOAP::SOAPDouble", [0, 1]],
      ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThru", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThruRatio", "SOAP::SOAPDouble", [0, 1]],
      ["responded", "SOAP::SOAPLong", [0, 1]],
      ["respondedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["unsubscribed", "SOAP::SOAPLong", [0, 1]],
      ["unsubscribedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["bounced", "SOAP::SOAPLong", [0, 1]],
      ["bouncedRatio", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignEventResponseList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
    :schema_element => [
      ["eventResponse", "NetSuite::CampaignEventResponse[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CampaignSearch", [0, 1]],
      ["columns", "NetSuite::CampaignSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["campaignRecipientJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["promotionCodeJoin", "NetSuite::PromotionCodeSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignCategory,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignAudience,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignFamily,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSearchEngine,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignChannel,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "NetSuite::CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignOffer,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponse,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["campaignEvent", "NetSuite::RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "NetSuite::CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "NetSuite::CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponseResponses,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
    :schema_element => [
      ["response", "SOAP::SOAPString", [0, 1]],
      ["responseDate", "SOAP::SOAPString", [0, 1]],
      ["author", "SOAP::SOAPString", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponseResponsesList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
    :schema_element => [
      ["responses", "NetSuite::CampaignResponseResponses[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignVertical,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignSubscription,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCode,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCode"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["useType", "NetSuite::PromotionCodeUseType", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["codePattern", "SOAP::SOAPString", [0, 1]],
      ["numberToGenerate", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "NetSuite::PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "NetSuite::PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["itemsList", "NetSuite::PromotionCodeItemsList", [0, 1]],
      ["partnersList", "NetSuite::PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodePartners,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodePartners"),
    :schema_element => [
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodePartnersList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::PromotionCodePartners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeItems,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeItems"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeItemsList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeItemsList"),
    :schema_element => [
      ["items", "NetSuite::PromotionCodeItems[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PromotionCodeSearch", [0, 1]],
      ["columns", "NetSuite::PromotionCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PromotionCodeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeCurrency,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeCurrencyList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeCurrencyList"),
    :schema_element => [
      ["currency", "NetSuite::PromotionCodeCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCode,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCode"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["promotion", "NetSuite::RecordRef"],
      ["code", "SOAP::SOAPString"],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]],
      ["useCount", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CouponCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CouponCodeSearch", [0, 1]],
      ["columns", "NetSuite::CouponCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::CouponCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CouponCodeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "NetSuite::DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "NetSuite::DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "NetSuite::DemandPlanMatrix", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::DemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlan"),
    :schema_element => [
      ["startDate", "SOAP::SOAPDateTime"],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["periodDemandPlanList", "NetSuite::PeriodDemandPlanList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::DemandPlanMatrix,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanMatrix"),
    :schema_element => [
      ["demandPlan", "NetSuite::DemandPlan[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::PeriodDemandPlanList,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "PeriodDemandPlanList"),
    :schema_element => [
      ["periodDemandPlan", "NetSuite::PeriodDemandPlan[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::PeriodDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "PeriodDemandPlan"),
    :schema_element => [
      ["quantity", "SOAP::SOAPDouble"],
      ["dayOfTheWeek", "NetSuite::DayOfTheWeek", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchAdvanced,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemDemandPlanSearch", [0, 1]],
      ["columns", "NetSuite::ItemDemandPlanSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemDemandPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["orderList", "NetSuite::ItemSupplyPlanOrderList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrder,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrder"),
    :schema_element => [
      ["orderLineId", "SOAP::SOAPLong", [0, 1]],
      ["orderDate", "SOAP::SOAPDateTime", [0, 1]],
      ["receiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["orderCreated", "SOAP::SOAPBoolean", [0, 1]],
      ["orderType", "NetSuite::ItemSupplyPlanOrderType", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrderList,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrderList"),
    :schema_element => [
      ["itemSupplyPlanOrder", "NetSuite::ItemSupplyPlanOrder[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemSupplyPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchAdvanced,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemSupplyPlanSearch", [0, 1]],
      ["columns", "NetSuite::ItemSupplyPlanSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemSupplyPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplate,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostDetail,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostDetail"),
    :schema_element => [
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["fixedRate", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostDetailList,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostDetailList"),
    :schema_element => [
      ["manufacturingCostDetail", "NetSuite::ManufacturingCostDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingCostTemplateSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingCostTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingCostTemplateSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRouting,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRouting"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["locationList", "NetSuite::RecordRefList", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["routingStepList", "NetSuite::ManufacturingRoutingRoutingStepList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingRoutingStep,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingRoutingStep"),
    :schema_element => [
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["operationName", "SOAP::SOAPString", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::RecordRef", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["setupTime", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingRoutingStepList,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingRoutingStepList"),
    :schema_element => [
      ["manufacturingRoutingRoutingStep", "NetSuite::ManufacturingRoutingRoutingStep[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingRoutingSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["manufacturingCostTemplateJoin", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["manufacturingWorkCenterJoin", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingRoutingSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingRoutingSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingRoutingSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["manufacturingCostTemplateJoin", "NetSuite::ManufacturingCostTemplateSearchRowBasic", [0, 1]],
      ["manufacturingWorkCenterJoin", "NetSuite::EntityGroupSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTask,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTask"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["workOrder", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::ManufacturingOperationTaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["inputQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["setupTime", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["workOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingOperationTaskSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingOperationTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingOperationTaskSearchRowBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ManufacturingOperationTaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["workOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NetSuite::RecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "RecordType")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordType")
  )

  EncodedRegistry.register(
    :class => NetSuite::GetAllRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllRecordType")
  )

  EncodedRegistry.register(
    :class => NetSuite::GetCustomizationType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationType")
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRefType")
  )

  EncodedRegistry.register(
    :class => NetSuite::InitializeAuxRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeAuxRefType")
  )

  EncodedRegistry.register(
    :class => NetSuite::DeletedRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecordType")
  )

  EncodedRegistry.register(
    :class => NetSuite::AsyncStatusType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusType")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchStringFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchLongFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchTextNumberFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDoubleFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDateFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::SearchDate,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDate")
  )

  EncodedRegistry.register(
    :class => NetSuite::DurationUnit,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "DurationUnit")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventAttendeeResponse,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
  )

  EncodedRegistry.register(
    :class => NetSuite::GetSelectValueFilterOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFilterOperator")
  )

  EncodedRegistry.register(
    :class => NetSuite::StatusDetailType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "StatusDetailType")
  )

  EncodedRegistry.register(
    :class => NetSuite::StatusDetailCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::FaultCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "FaultCodeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::Country,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Country")
  )

  EncodedRegistry.register(
    :class => NetSuite::Language,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Language")
  )

  EncodedRegistry.register(
    :class => NetSuite::AvsMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "AvsMatchCode")
  )

  EncodedRegistry.register(
    :class => NetSuite::CscMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "CscMatchCode")
  )

  EncodedRegistry.register(
    :class => NetSuite::VsoeSopGroup,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoeSopGroup")
  )

  EncodedRegistry.register(
    :class => NetSuite::VsoeDeferral,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoeDeferral")
  )

  EncodedRegistry.register(
    :class => NetSuite::VsoePermitDiscount,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
  )

  EncodedRegistry.register(
    :class => NetSuite::RevenueStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RevenueStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::RevenueCommitStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RevenueCommitStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::PostingPeriodDate,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
  )

  EncodedRegistry.register(
    :class => NetSuite::PermissionLevel,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PermissionLevel")
  )

  EncodedRegistry.register(
    :class => NetSuite::Source,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Source")
  )

  EncodedRegistry.register(
    :class => NetSuite::GlobalSubscriptionStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "GlobalSubscriptionStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCostEstimateType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemCostEstimateType")
  )

  EncodedRegistry.register(
    :class => NetSuite::PresentationItemType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PresentationItemType")
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCostSource,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostSource")
  )

  EncodedRegistry.register(
    :class => NetSuite::LandedCostMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::SitemapPriority,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "SitemapPriority")
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeItemTimeType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeItemTimeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::PermissionCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PermissionCode")
  )

  EncodedRegistry.register(
    :class => NetSuite::IntercoStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "IntercoStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencySymbolPlacement,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencySymbolPlacement")
  )

  EncodedRegistry.register(
    :class => NetSuite::RecurrenceFrequency,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceFrequency")
  )

  EncodedRegistry.register(
    :class => NetSuite::RecurrenceDow,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDow")
  )

  EncodedRegistry.register(
    :class => NetSuite::RecurrenceDowim,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDowim")
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeRuleType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeRuleType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventAccessLevel,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventAttendeeAttendance,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CalendarEventStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskPriority")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
  )

  EncodedRegistry.register(
    :class => NetSuite::PhoneCallStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPriority")
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskConstraintType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskConstraintType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ProjectTaskPredecessorPredecessorType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorPredecessorType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ResourceAllocationAllocationUnit,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationAllocationUnit")
  )

  EncodedRegistry.register(
    :class => NetSuite::NoteDirection,
    :schema_type => XSD::QName.new(NsTypesCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteDirection")
  )

  EncodedRegistry.register(
    :class => NetSuite::MessageMessageType,
    :schema_type => XSD::QName.new(NsTypesCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageMessageType")
  )

  EncodedRegistry.register(
    :class => NetSuite::MediaType,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "MediaType")
  )

  EncodedRegistry.register(
    :class => NetSuite::FileAttachFrom,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
  )

  EncodedRegistry.register(
    :class => NetSuite::FileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileEncoding")
  )

  EncodedRegistry.register(
    :class => NetSuite::TextFileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "TextFileEncoding")
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStatusStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusStage")
  )

  EncodedRegistry.register(
    :class => NetSuite::ContactType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStage")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerCreditHoldOverride,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerMonthlyClosing,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerMonthlyClosing")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmailPreference,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EmailPreference")
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupType")
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupDailyTime,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupDefView,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupDefView")
  )

  EncodedRegistry.register(
    :class => NetSuite::EntityGroupPeriodSize,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxFractionUnit,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "TaxFractionUnit")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxRounding,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "TaxRounding")
  )

  EncodedRegistry.register(
    :class => NetSuite::JobBillingType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "JobBillingType")
  )

  EncodedRegistry.register(
    :class => NetSuite::PartnerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerOtherRelationships")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerOtherRelationships")
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorOtherRelationships")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerNegativeNumberFormat,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerNegativeNumberFormat")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomerNumberFormat,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerNumberFormat")
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseStatusStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
  )

  EncodedRegistry.register(
    :class => NetSuite::SupportCaseStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStage")
  )

  EncodedRegistry.register(
    :class => NetSuite::SolutionStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueEventStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueEventStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueTrackCode,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueTrackCode")
  )

  EncodedRegistry.register(
    :class => NetSuite::IssueRelationship,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelationship")
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyLocale,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyLocale")
  )

  EncodedRegistry.register(
    :class => NetSuite::AccountType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCostingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCostingMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemProductFeed,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemProductFeed")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemWeightUnit,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemWeightUnit")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemPreferenceCriterion,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOverallQuantityPricingType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ScheduleBCode,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ScheduleBCode")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSubType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSubType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyCurrencyPrecision,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
  )

  EncodedRegistry.register(
    :class => NetSuite::CurrencyFxRateUpdateTimezone,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyFxRateUpdateTimezone")
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesTaxItemAvailable,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemEbayAuctionDuration,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOutOfStockBehavior,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemEbayRelistingOption,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
  )

  EncodedRegistry.register(
    :class => NetSuite::ConsolidatedRate,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ConsolidatedRate")
  )

  EncodedRegistry.register(
    :class => NetSuite::CashFlowRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CashFlowRateType")
  )

  EncodedRegistry.register(
    :class => NetSuite::GeneralRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "GeneralRateType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemMatrixType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMatrixType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandSource,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemDemandSource")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyLotSizingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyLotSizingMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyReplenishmentMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyReplenishmentMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleRecogIntervalSrc,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecogIntervalSrc")
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrenceType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceType")
  )

  EncodedRegistry.register(
    :class => NetSuite::RevRecScheduleAmortizationType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleAmortizationType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CostCategoryItemCostType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CostCategoryItemCostType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemAtpMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemAtpMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::AssemblyItemEffectiveBomControl,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "AssemblyItemEffectiveBomControl")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemInvtClassification,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemInvtClassification")
  )

  EncodedRegistry.register(
    :class => NetSuite::PeriodicLotSizeType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "PeriodicLotSizeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::HazmatPackingGroup,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "HazmatPackingGroup")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCarrier,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCarrier")
  )

  EncodedRegistry.register(
    :class => NetSuite::TaxAcctType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxAcctType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemOverheadType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOverheadType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCostAccountingStatus,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCostAccountingStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
  )

  EncodedRegistry.register(
    :class => NetSuite::SalesOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentExportTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentLicenseExceptionUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentMethodOfTransportUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentThirdPartyTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsCodMethodUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsDeliveryConfUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsPackagingUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsDeliveryConfUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsDeliveryConfUsps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsPackagingUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsPackagingUsps")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentB13AFilingOptionFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentHomeDeliveryTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentThirdPartyTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExCodMethodFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExDeliveryConfFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExPackagingFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExSignatureOptionsFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentTermsOfSaleFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentShipStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::OpportunityStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionPaymentEventResult,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventResult")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionPaymentEventType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionPaymentEventHoldReason,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventHoldReason")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExCodFreightTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionLinkType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ForecastType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ForecastType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionLineType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionLineType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionApprovalStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionApprovalStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExPriorityAlertTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPriorityAlertTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentHazmatTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHazmatTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentAncillaryEndorsementFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentAncillaryEndorsementFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemFulfillmentAccessibilityTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentAccessibilityTypeFedEx")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionChargeType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionChargeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::PurchaseOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransactionBillVarianceStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "TransactionBillVarianceStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationOrderStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeStage,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeStage")
  )

  EncodedRegistry.register(
    :class => NetSuite::ChargeUse,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeUse")
  )

  EncodedRegistry.register(
    :class => NetSuite::BudgetBudgetType,
    :schema_type => XSD::QName.new(NsTypesFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetBudgetType")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransferOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => NetSuite::TransferOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderItemItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCreatePo")
  )

  EncodedRegistry.register(
    :class => NetSuite::WorkOrderItemItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationFieldType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationFieldType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationDynamicDefault,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationDisplayType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationFilterCompareType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsPermittedLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsRestriction,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemCustomFieldItemSubType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationAccessLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationAccessLevel")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomizationSearchLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationSearchLevel")
  )

  EncodedRegistry.register(
    :class => NetSuite::CustomRecordTypeAccessType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeAccessType")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeePayFrequency,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeUseTimeData,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeUseTimeData")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeCommissionPaymentPreference,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
  )

  EncodedRegistry.register(
    :class => NetSuite::Gender,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "Gender")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeAccruedTimeAccrualMethod,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeAccrualMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::EmployeeDirectDepositAccountStatus,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDepositAccountStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::PayrollItemItemTypeNoHierarchy,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemItemTypeNoHierarchy")
  )

  EncodedRegistry.register(
    :class => NetSuite::TimeBillTimeType,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillTimeType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignCampaignDirectMailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignCampaignEmailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignCampaignEventStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignChannelEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponseResponse,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignCampaignEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponse_,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponse")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignStatus")
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeApplyDiscountTo,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeApplyDiscountTo")
  )

  EncodedRegistry.register(
    :class => NetSuite::CampaignResponseCategory,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseCategory")
  )

  EncodedRegistry.register(
    :class => NetSuite::PromotionCodeUseType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeUseType")
  )

  EncodedRegistry.register(
    :class => NetSuite::DemandPlanCalendarType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanCalendarType")
  )

  EncodedRegistry.register(
    :class => NetSuite::DemandPlanMonth,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanMonth")
  )

  EncodedRegistry.register(
    :class => NetSuite::DayOfTheWeek,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DayOfTheWeek")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemDemandPlanProjectionMethod,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanProjectionMethod")
  )

  EncodedRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrderType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrderType")
  )

  EncodedRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskStatus,
    :schema_type => XSD::QName.new(NsTypesSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::Passport,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoPassport,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SsoPassport"),
    :schema_element => [
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"],
      ["partnerAccount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoCredentials,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SsoCredentials"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangePassword,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ChangePassword"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newPassword", "SOAP::SOAPString", [0, 1]],
      ["newPassword2", "SOAP::SOAPString", [0, 1]],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangeEmail,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmail"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newEmail", "SOAP::SOAPString"],
      ["newEmail2", "SOAP::SOAPString"],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::StatusDetail,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "StatusDetail"),
    :schema_element => [
      ["code", "NetSuite::StatusDetailCodeType"],
      ["message", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Status,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Status"),
    :schema_element => [
      ["statusDetail", "NetSuite::StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WsRole,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "WsRole"),
    :schema_element => [
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isLoggedInRole", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WsRoleList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "WsRoleList"),
    :schema_element => [
      ["wsRole", "NetSuite::WsRole[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NullField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "NullField"),
    :schema_element => [
      ["name", "SOAP::SOAPString[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]],
      ["searchRowList", "NetSuite::SearchRowList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "NetSuite::AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "NetSuite::RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "NetSuite::CustomizationRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "NetSuite::BaseRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRowList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowList"),
    :schema_element => [
      ["searchRow", "NetSuite::SearchRow[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRefList"),
    :schema_element => [
      ["recordRef", "NetSuite::RecordRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BaseRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRefList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Duration,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Duration"),
    :schema_element => [
      ["timeSpan", "SOAP::SOAPDouble"],
      ["unit", "NetSuite::DurationUnit"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationRefList"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRecord"),
    :schema_element => [
      ["type", "NetSuite::InitializeType"],
      ["reference", "NetSuite::InitializeRef", [0, 1]],
      ["auxReference", "NetSuite::InitializeAuxRef", [0, 1]],
      ["referenceList", "NetSuite::InitializeRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRefList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRefList"),
    :schema_element => [
      ["initializeRef", "NetSuite::InitializeRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeAuxRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeAuxRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusReference"),
    :schema_element => [
      ["eventId", "NetSuite::RecordRef"],
      ["responseCode", "NetSuite::CalendarEventAttendeeResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "searchType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationType,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomizationType"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ListOrRecordRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LongCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPLong"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DoubleCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BooleanCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPBoolean"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::StringCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DateCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDateTime"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "NetSuite::ListOrRecordRef"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MultiSelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "NetSuite::ListOrRecordRef[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::CustomFieldRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchBooleanField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchStringField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchLongField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]],
      ["searchValue2", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDoubleField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDateField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateField"),
    :schema_element => [
      ["predefinedSearchValue", "NetSuite::SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
    :schema_element => [
      ["searchValue", "NetSuite::RecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["predefinedSearchValue", "NetSuite::SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "NetSuite::ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::SearchCustomField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnBooleanField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnBooleanField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnStringField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnStringField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnLongField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnLongField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnTextNumberField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnDoubleField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDoubleField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnDateField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDateField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnEnumSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnEnumSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnSelectField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::ListOrRecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "NetSuite::ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchColumnCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchColumnCustomFieldList"),
    :schema_element => [
      ["customField", "NetSuite::SearchColumnCustomField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemAvailabilityFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
    :schema_element => [
      ["item", "NetSuite::RecordRefList"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemAvailability,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailability"),
    :schema_element => [
      ["item", "NetSuite::RecordRef"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemAvailabilityList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
    :schema_element => [
      ["itemAvailability", "NetSuite::ItemAvailability[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["itemAvailabilityList", "NetSuite::ItemAvailabilityList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRateFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRate"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef"],
      ["toSubsidiary", "NetSuite::RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "BudgetExchangeRateList"),
    :schema_element => [
      ["budgetExchangeRate", "NetSuite::BudgetExchangeRate[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["budgetExchangeRateList", "NetSuite::BudgetExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRate"),
    :schema_element => [
      ["period", "NetSuite::RecordRef"],
      ["fromSubsidiary", "NetSuite::RecordRef"],
      ["toSubsidiary", "NetSuite::RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ConsolidatedExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateList"),
    :schema_element => [
      ["consolidatedExchangeRate", "NetSuite::ConsolidatedExchangeRate[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["consolidatedExchangeRateList", "NetSuite::ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateFilter"),
    :schema_element => [
      ["baseCurrency", "NetSuite::RecordRef", [0, 1]],
      ["fromCurrency", "NetSuite::RecordRef", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRate_,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRate"),
    :schema_element => [
      ["baseCurrency", "NetSuite::RecordRef"],
      ["fromCurrency", "NetSuite::RecordRef"],
      ["exchangeRate", "SOAP::SOAPDouble"],
      ["effectiveDate", "SOAP::SOAPDateTime"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateList"),
    :schema_element => [
      ["currencyRate", "NetSuite::CurrencyRate_[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["currencyRateList", "NetSuite::CurrencyRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DataCenterUrls,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DataCenterUrls"),
    :schema_element => [
      ["restDomain", "SOAP::SOAPString"],
      ["webservicesDomain", "SOAP::SOAPString"],
      ["systemDomain", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["dataCenterUrls", "NetSuite::DataCenterUrls", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PostingTransactionSummaryField,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryField"),
    :schema_element => [
      ["period", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "SOAP::SOAPBoolean", [0, 1]],
      ["parentItem", "SOAP::SOAPBoolean", [0, 1]],
      ["item", "SOAP::SOAPBoolean", [0, 1]],
      ["entity", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPBoolean", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PostingTransactionSummaryFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryFilter"),
    :schema_element => [
      ["period", "NetSuite::RecordRefList", [0, 1]],
      ["account", "NetSuite::RecordRefList", [0, 1]],
      ["parentItem", "NetSuite::RecordRefList", [0, 1]],
      ["item", "NetSuite::RecordRefList", [0, 1]],
      ["entity", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRefList", [0, 1]],
      ["v_class", ["NetSuite::RecordRefList", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiary", "NetSuite::RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PostingTransactionSummary,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummary"),
    :schema_element => [
      ["period", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["parentItem", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PostingTransactionSummaryList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryList"),
    :schema_element => [
      ["postingTransactionSummary", "NetSuite::PostingTransactionSummary[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "NetSuite::PostingTransactionSummaryList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueFieldDescription,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFieldDescription"),
    :schema_element => [
      ["recordType", "NetSuite::RecordType", [0, 1]],
      ["customRecordType", "NetSuite::RecordRef", [0, 1]],
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["filter", "NetSuite::GetSelectValueFilter", [0, 1]],
      ["filterByValueList", "NetSuite::GetSelectFilterByFieldValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFilter"),
    :schema_element => [
      ["filterValue", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectFilterByFieldValueList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValueList"),
    :schema_element => [
      ["filterBy", "NetSuite::GetSelectFilterByFieldValue[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectFilterByFieldValue,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValue"),
    :schema_element => [
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["internalId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeletedRecord,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecord"),
    :schema_element => [
      ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["record", "NetSuite::BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeletedRecordList,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
    :schema_element => [
      ["deletedRecord", "NetSuite::DeletedRecord[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedResult,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["deletedRecordList", "NetSuite::DeletedRecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedFilter,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
    :schema_element => [
      ["deletedDate", "NetSuite::SearchDateField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachContactReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachContactReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "NetSuite::BaseRef"],
      ["contact", "NetSuite::RecordRef"],
      ["contactRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "NetSuite::BaseRef"],
      ["attachedRecord", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DetachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DetachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "DetachReference"),
    :schema_element => [
      ["detachFrom", "NetSuite::BaseRef"],
      ["detachedRecord", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SoapFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InsufficientPermissionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidAccountFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidCredentialsFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidSessionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRequestLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededUsageLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRecordCountFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidVersionFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRequestSizeFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "AsyncFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnexpectedErrorFault,
    :schema_type => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ApplicationInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "PartnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DocumentInfo,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DocumentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Preferences,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "Preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchPreferences,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SessionResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SessionResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "NetSuite::RecordRef", [0, 1]],
      ["wsRoleList", ["NetSuite::WsRoleList", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WriteResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "WriteResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "NetSuite::BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReadResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ReadResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "NetSuite::Record", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WriteResponseList,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "WriteResponseList"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReadResponseList,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ReadResponseList"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LoginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoLoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SsoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MapSsoResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangePasswordResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangePasswordResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangeEmailResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmailResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LogoutResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LogoutResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreWithIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchNextResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAllResponse"),
    :schema_element => [
      ["getAllResult", ["NetSuite::GetAllResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["NetSuite::GetSavedSearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["NetSuite::GetCustomizationIdResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["NetSuite::GetSelectValueResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["NetSuite::GetItemAvailabilityResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["NetSuite::GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["NetSuite::GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateResponse"),
    :schema_element => [
      ["getCurrencyRateResult", ["NetSuite::GetCurrencyRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsResponse"),
    :schema_element => [
      ["getDataCenterUrlsResult", ["NetSuite::GetDataCenterUrlsResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrlsResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["NetSuite::GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["NetSuite::GetServerTimeResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AttachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DetachResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DetachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAsyncResultResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "NetSuite::AsyncResult"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncAddListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpdateListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpsertListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpsertListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncDeleteListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncGetListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncSearchResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncInitializeListResult,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedResponse,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["NetSuite::GetDeletedResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LoginRequest"),
    :schema_element => [
      ["passport", "NetSuite::Passport"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoLoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SsoLoginRequest"),
    :schema_element => [
      ["ssoPassport", "NetSuite::SsoPassport"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MapSsoRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
    :schema_element => [
      ["ssoCredentials", "NetSuite::SsoCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangePasswordRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangePasswordRequest"),
    :schema_element => [
      ["changePassword", "NetSuite::ChangePassword"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangeEmailRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ChangeEmailRequest"),
    :schema_element => [
      ["changeEmail", "NetSuite::ChangeEmail"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LogoutRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "LogoutRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AddRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchRequest"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreWithIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchMoreWithIdRequest"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchNextRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertRequest"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AddListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpsertListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAllRequest"),
    :schema_element => [
      ["record", "NetSuite::GetAllRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetSavedSearchRequest"),
    :schema_element => [
      ["record", "NetSuite::GetSavedSearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationIdRequest"),
    :schema_element => [
      ["customizationType", "NetSuite::CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
    :schema_element => [
      ["fieldDescription", "NetSuite::GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
    :schema_element => [
      ["itemAvailabilityFilter", "NetSuite::ItemAvailabilityFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateRequest"),
    :schema_element => [
      ["budgetExchangeRateFilter", "NetSuite::BudgetExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateRequest"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "NetSuite::ConsolidatedExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetCurrencyRateRequest"),
    :schema_element => [
      ["currencyRateFilter", "NetSuite::CurrencyRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDataCenterUrlsRequest"),
    :schema_element => [
      ["account", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryRequest"),
    :schema_element => [
      ["fields", "NetSuite::PostingTransactionSummaryField"],
      ["filters", "NetSuite::PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetServerTimeRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AttachRequest"),
    :schema_element => [
      ["attachReference", "NetSuite::AttachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DetachRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "DetachRequest"),
    :schema_element => [
      ["detachReference", "NetSuite::DetachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncAddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncUpsertListRequest"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncDeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncGetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncInitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckAsyncStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAsyncResultRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedRequest,
    :schema_type => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
    :schema_element => [
      ["getDeletedFilter", "NetSuite::GetDeletedFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ShipAddress,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ShipAddress"),
    :schema_element => [
      ["shipAttention", "SOAP::SOAPString", [0, 1]],
      ["shipAddressee", "SOAP::SOAPString", [0, 1]],
      ["shipPhone", "SOAP::SOAPString", [0, 1]],
      ["shipAddr1", "SOAP::SOAPString", [0, 1]],
      ["shipAddr2", "SOAP::SOAPString", [0, 1]],
      ["shipAddr3", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "NetSuite::Country", [0, 1]],
      ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BillAddress,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BillAddress"),
    :schema_element => [
      ["billAttention", "SOAP::SOAPString", [0, 1]],
      ["billAddressee", "SOAP::SOAPString", [0, 1]],
      ["billPhone", "SOAP::SOAPString", [0, 1]],
      ["billAddr1", "SOAP::SOAPString", [0, 1]],
      ["billAddr2", "SOAP::SOAPString", [0, 1]],
      ["billAddr3", "SOAP::SOAPString", [0, 1]],
      ["billCity", "SOAP::SOAPString", [0, 1]],
      ["billState", "SOAP::SOAPString", [0, 1]],
      ["billZip", "SOAP::SOAPString", [0, 1]],
      ["billCountry", "NetSuite::Country", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PresentationItem,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PresentationItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["itemType", "NetSuite::PresentationItemType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
      ["basePrice", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Partners,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "Partners"),
    :schema_element => [
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["partnerRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCost,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCost"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["landedCostDataList", "NetSuite::LandedCostDataList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCostDataList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostDataList"),
    :schema_element => [
      ["landedCostData", "NetSuite::LandedCostData[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCostData,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostData"),
    :schema_element => [
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCostSummary,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostSummary"),
    :schema_element => [
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["source", "NetSuite::LandedCostSource", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSalesTeam,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeItem,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeItem"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["timeType", "NetSuite::TimeItemTimeType", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["hours", "NetSuite::Duration", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["hoursTotal", "NetSuite::Duration", [0, 1]],
      ["caseTaskEvent", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isUtilized", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductive", "SOAP::SOAPBoolean", [0, 1]],
      ["isExempt", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryDetail,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetail"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryAssignmentList", "NetSuite::InventoryAssignmentList", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecurrenceDowMaskList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
    :schema_element => [
      ["recurrenceDowMask", "NetSuite::RecurrenceDow[]", [1, 7]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAssignmentList,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryAssignmentList"),
    :schema_element => [
      ["inventoryAssignment", "NetSuite::InventoryAssignment[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAssignment,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryAssignment"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["issueInventoryNumber", "NetSuite::RecordRef", [0, 1]],
      ["receiptInventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["binNumber", "NetSuite::RecordRef", [0, 1]],
      ["toBinNumber", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryDetailSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetailSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryDetailSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryDetailSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntitySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contactRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contactSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employer", "NetSuite::SearchStringField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contactRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contactSource", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["boughtAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtDate", "NetSuite::SearchDateField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["ccExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccHolderName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["ccType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["classBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["companyName", "NetSuite::SearchStringField", [0, 1]],
      ["consolBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolDaysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["consolDepositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolOverdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["consolUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["conversionDate", "NetSuite::SearchDateField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["creditHold", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["creditHoldOverride", "NetSuite::SearchBooleanField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateClosed", "NetSuite::SearchDateField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["defaultOrderPriority", "NetSuite::SearchDoubleField", [0, 1]],
      ["depositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["deptBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["drAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["explicitConversion", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["firstOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["firstSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["fxAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxConsolBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxConsolUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReportedLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["itemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["lastOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["monthlyClosing", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["onCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["orderedDate", "NetSuite::SearchDateField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["prospectDate", "NetSuite::SearchDateField", [0, 1]],
      ["pstExempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["receivablesAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reminderDate", "NetSuite::SearchDateField", [0, 1]],
      ["resaleNumber", "NetSuite::SearchStringField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shippingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["territory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["webLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["consolBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolDaysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["consolDepositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolOverdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["consolUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["creditHold", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["creditHoldOverride", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["defaultOrderPriority", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["depositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["drAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["fxAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["groupPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["manualCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["monthlyClosing", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["onCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["receivablesAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["reminderDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shippingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["territory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["webLead", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["attendee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["calendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["instanceStart", "NetSuite::SearchDateField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isUpcomingEvent", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchStringField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["organizer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["response", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["attendee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["instanceEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["instanceStart", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["organizer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["recurrence", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["response", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isJobSummaryTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["milestone", "NetSuite::SearchLongField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["percentComplete", "NetSuite::SearchLongField", [0, 1]],
      ["percentTimeComplete", "NetSuite::SearchLongField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["timeRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accessLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dueDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isJobSummaryTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["milestone", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["order", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["percentComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["timeRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "NetSuite::SearchDateField", [0, 1]],
      ["competitor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOpen", "NetSuite::SearchLongField", [0, 1]],
      ["daysToClose", "NetSuite::SearchLongField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["expectedCloseDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["forecastType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["foreignProjectedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["foreignRangeHigh", "NetSuite::SearchDoubleField", [0, 1]],
      ["foreignRangeLow", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["probability", "NetSuite::SearchLongField", [0, 1]],
      ["projAltSalesAmt", "NetSuite::SearchDoubleField", [0, 1]],
      ["projectedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeHigh", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeHighAlt", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeLow", "NetSuite::SearchDoubleField", [0, 1]],
      ["rangeLowAlt", "NetSuite::SearchDoubleField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxPeriod", "NetSuite::RecordRef", [0, 1]],
      ["taxPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["tranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranDate", "NetSuite::SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranId", "NetSuite::SearchStringField", [0, 1]],
      ["winLossReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["wonBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OpportunitySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actionItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["closeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["competitor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["custType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysToClose", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["decisionMaker", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["expectedCloseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["foreignProjectedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeHigh", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeLow", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["period", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projAltSalesAmt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projectedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeHigh", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeHighAlt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeLow", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rangeLowAlt", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["total", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranEstGrossProfitPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["weightedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["winLossReason", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["wonBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["alienNumber", "NetSuite::SearchStringField", [0, 1]],
      ["anniversary", "NetSuite::SearchDateField", [0, 1]],
      ["approvalLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["approver", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["authWorkDate", "NetSuite::SearchDateField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["billingClass", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["birthDate", "NetSuite::SearchDateField", [0, 1]],
      ["birthDay", "NetSuite::SearchDateField", [0, 1]],
      ["cContribution", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["commissionPlan", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["concurrentWebServicesUser", "NetSuite::SearchBooleanField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["deduction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["earning", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["education", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employeeStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["employeeType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["employeeTypeKpi", "NetSuite::SearchBooleanField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["ethnicity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["expenseLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["gender", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hireDate", "NetSuite::SearchDateField", [0, 1]],
      ["i9Verified", ["NetSuite::SearchBooleanField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobResource", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTemplate", "NetSuite::SearchBooleanField", [0, 1]],
      ["jobDescription", "NetSuite::SearchStringField", [0, 1]],
      ["laborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["lastPaidDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastReviewDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["maritalStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["nextReviewDate", "NetSuite::SearchDateField", [0, 1]],
      ["offlineAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["payFrequency", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permChangeDate", "NetSuite::SearchDateField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["permissionChange", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["primaryEarningAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["primaryEarningItem", "NetSuite::SearchStringField", [0, 1]],
      ["primaryEarningType", "NetSuite::SearchStringField", [0, 1]],
      ["purchaseOrderApprovalLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["purchaseOrderApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["purchaseOrderLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["releaseDate", "NetSuite::SearchDateField", [0, 1]],
      ["residentStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roleChange", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roleChangeDate", "NetSuite::SearchDateField", [0, 1]],
      ["salesRep", "NetSuite::SearchBooleanField", [0, 1]],
      ["salesRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["socialSecurityNumber", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["supervisor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["supportRep", "NetSuite::SearchBooleanField", [0, 1]],
      ["timeApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["usePerquest", "NetSuite::SearchBooleanField", [0, 1]],
      ["useTimeData", "NetSuite::SearchBooleanField", [0, 1]],
      ["visaExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["visaType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["withholding", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workplace", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EmployeeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["alienNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["approvalLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["approver", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["authWorkDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billingClass", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["birthDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["birthDay", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["concurrentWebServicesUser", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["employeeStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["employeeType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["ethnicity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gender", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hireDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["i9Verified", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobResource", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSalesRep", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSupportRep", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTemplate", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastPaidDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastReviewDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["maritalStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nextReviewDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["offlineAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payFrequency", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permChangeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["permChangeLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["permissionChange", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["primaryEarningAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["primaryEarningItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["primaryEarningType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["purchaseOrderApprovalLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["purchaseOrderApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrderLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["releaseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["residentStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["roleChange", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["roleChangeAction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["roleChangeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["salesRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["socialSecurityNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["supervisor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["timeApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["usePerquest", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useTimeData", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["visaExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["visaType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["workplace", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["completedDate", "NetSuite::SearchDateField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["owner", "NetSuite::SearchBooleanField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PhoneCallSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accessLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["markdone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["awaitingReply", "NetSuite::SearchBooleanField", [0, 1]],
      ["caseNumber", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["closedDate", "NetSuite::SearchDateField", [0, 1]],
      ["company", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["escalateTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["helpDesk", "NetSuite::SearchBooleanField", [0, 1]],
      ["inboundEmail", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["issue", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastMessage", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastReopenedDate", "NetSuite::SearchDateField", [0, 1]],
      ["locked", "NetSuite::SearchBooleanField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["messageAuthor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["messageDate", "NetSuite::SearchDateField", [0, 1]],
      ["messageType", "NetSuite::SearchBooleanField", [0, 1]],
      ["v_module", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["origin", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["priority", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["product", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SupportCaseSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["awaitingReply", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["caseNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customerStage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["escalatee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["helpDesk", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["inboundEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issue", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["issueNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastMessageDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastReopenedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["v_module", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["origin", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["product", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["authorEmail", "NetSuite::SearchStringField", [0, 1]],
      ["bcc", "NetSuite::SearchStringField", [0, 1]],
      ["cc", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["hasAttachment", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["internalOnly", "NetSuite::SearchBooleanField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["messageDate", "NetSuite::SearchDateField", [0, 1]],
      ["messageType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipientEmail", "NetSuite::SearchStringField", [0, 1]],
      ["subject", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "MessageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["authorEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["bcc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["cc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["hasAttachment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalOnly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isEmailed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isIncoming", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["messageDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["messageType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["recipientEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subject", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["direction", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["note", "NetSuite::SearchStringField", [0, 1]],
      ["noteDate", "NetSuite::SearchDateField", [0, 1]],
      ["noteType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["author", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["direction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["note", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["noteDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["noteType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["recType", "NetSuite::RecordRef"],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModified", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomRecordSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["recType", "NetSuite::RecordRef"],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["cashFlowRateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["category1099Misc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["generalRateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["number", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cashFlowRateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["category1099Misc", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["generalRateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["number", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["defRev", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entity", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["incomeAcct", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["jeDoc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["postPeriod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["srcDoc", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["srcDocDate", "NetSuite::SearchDateField", [0, 1]],
      ["srcTranPostPeriod", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["defRev", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jeDoc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["jeDocUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["postPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["srcDoc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["srcDocLine", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amorMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["amorPeriod", "NetSuite::SearchLongField", [0, 1]],
      ["amorStartOffset", "NetSuite::SearchLongField", [0, 1]],
      ["amorTermSrc", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["amorType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["contraAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["deferralAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["periodOffset", "NetSuite::SearchLongField", [0, 1]],
      ["targetAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["useForeignAmounts", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amorMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorStartOffset", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorTermSrc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contraAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["deferralAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["periodOffset", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["targetAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useForeignAmounts", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["inactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BinSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["inactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "DepartmentSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOffice", "NetSuite::SearchBooleanField", [0, 1]],
      ["makeInventoryAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["makeInventoryAvailableStore", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tranprefix", "NetSuite::SearchStringField", [0, 1]],
      ["zip", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "LocationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOffice", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailableStore", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["tranPrefix", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ClassificationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["accountType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["actualShipDate", "NetSuite::SearchDateField", [0, 1]],
      ["altSalesAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["altSalesNetAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountPaid", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountUnbilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["anyLineItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["appliedToForeignAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["appliedToIsFxVariance", "NetSuite::SearchBooleanField", [0, 1]],
      ["appliedToLinkAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["appliedToLinkType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["appliedToTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["applyingForeignAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["applyingIsFxVariance", "NetSuite::SearchBooleanField", [0, 1]],
      ["applyingLinkAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["applyingLinkType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["applyingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["approvalStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["authCode", "NetSuite::SearchStringField", [0, 1]],
      ["avsStreetMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["avsZipMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billable", "NetSuite::SearchBooleanField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["billAddressee", "NetSuite::SearchStringField", [0, 1]],
      ["billAttention", "NetSuite::SearchStringField", [0, 1]],
      ["billCity", "NetSuite::SearchStringField", [0, 1]],
      ["billCountry", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billCounty", "NetSuite::SearchStringField", [0, 1]],
      ["billedDate", "NetSuite::SearchDateField", [0, 1]],
      ["billingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billingStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["billingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billPhone", "NetSuite::SearchStringField", [0, 1]],
      ["billState", "NetSuite::SearchStringField", [0, 1]],
      ["billVarianceStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["billZip", "NetSuite::SearchStringField", [0, 1]],
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["binNumberQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["bomQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "NetSuite::SearchBooleanField", [0, 1]],
      ["buildVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["built", "NetSuite::SearchDoubleField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccExpireDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["chargeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["cleared", "NetSuite::SearchBooleanField", [0, 1]],
      ["closed", "NetSuite::SearchBooleanField", [0, 1]],
      ["closeDate", "NetSuite::SearchDateField", [0, 1]],
      ["cogs", "NetSuite::SearchBooleanField", [0, 1]],
      ["commissionEffectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["commit", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["componentYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["confirmationNumber", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["costComponentAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["costComponentCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costComponentItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costComponentQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["costComponentStandardCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["createdBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["createdFrom", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["creditAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["cscMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customerSubOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customForm", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["daysOpen", "NetSuite::SearchLongField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["debitAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["deferredRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["deferRevRec", "NetSuite::SearchBooleanField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["depositDate", "NetSuite::SearchDateField", [0, 1]],
      ["depositTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["drAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dueDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["employee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["estGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["exchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["excludeCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["expectedCloseDate", "NetSuite::SearchDateField", [0, 1]],
      ["expectedReceiptDate", "NetSuite::SearchDateField", [0, 1]],
      ["expenseCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["expenseDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["finChrg", "NetSuite::SearchBooleanField", [0, 1]],
      ["forecastType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["fulfillingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fxAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxCostEstimateRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoeAllocation", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxVsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoAvailabelToCharge", "NetSuite::SearchBooleanField", [0, 1]],
      ["gcoAvailableToRefund", "NetSuite::SearchBooleanField", [0, 1]],
      ["gcoAvsStreetMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoAvsZipMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoBuyerAccountAge", "NetSuite::SearchLongField", [0, 1]],
      ["gcoBuyerIp", "NetSuite::SearchStringField", [0, 1]],
      ["gcoChargeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoChargebackAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoConfirmedChargedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoConfirmedRefundedTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoCreditcardNumber", "NetSuite::SearchStringField", [0, 1]],
      ["gcoCscMatch", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["gcoFinancialState", "NetSuite::SearchStringField", [0, 1]],
      ["gcoFulfillmentState", "NetSuite::SearchStringField", [0, 1]],
      ["gcoOrderId", "NetSuite::SearchStringField", [0, 1]],
      ["gcoOrderTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoPromotionAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoPromotionName", "NetSuite::SearchStringField", [0, 1]],
      ["gcoRefundAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoShippingTotal", "NetSuite::SearchDoubleField", [0, 1]],
      ["gcoStateChangedDetail", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertificate", "NetSuite::SearchStringField", [0, 1]],
      ["grossAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["includeInForecast", "NetSuite::SearchBooleanField", [0, 1]],
      ["intercoStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["intercoTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["isAllocation", "NetSuite::SearchBooleanField", [0, 1]],
      ["isBackflush", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoChargeback", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoChargeConfirmed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoPaymentGuaranteed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoRefundConfirmed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isIntercompanyAdjustment", "NetSuite::SearchBooleanField", [0, 1]],
      ["isMultiShipTo", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPayPalMeth", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReversal", "NetSuite::SearchBooleanField", [0, 1]],
      ["isRevRecTransaction", "NetSuite::SearchBooleanField", [0, 1]],
      ["isScrap", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTransferPriceCosting", "NetSuite::SearchBooleanField", [0, 1]],
      ["isVsoeAlloc", "NetSuite::SearchBooleanField", [0, 1]],
      ["isWip", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemSubOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["landedCostPerLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["mainLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["mainName", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingRouting", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["matchBillToReceipt", "NetSuite::SearchBooleanField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["memoMain", "NetSuite::SearchStringField", [0, 1]],
      ["memorized", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchStringField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["multiSubsidiary", "NetSuite::SearchBooleanField", [0, 1]],
      ["nameText", "NetSuite::SearchStringField", [0, 1]],
      ["netAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["nextApprover", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["nextBillDate", "NetSuite::SearchDateField", [0, 1]],
      ["nonReimbursable", "NetSuite::SearchBooleanField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["opportunity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["orderPriority", "NetSuite::SearchDoubleField", [0, 1]],
      ["otherRefNum", "NetSuite::SearchTextNumberField", [0, 1]],
      ["otherRefNumNonDeposit", "NetSuite::SearchTextNumberField", [0, 1]],
      ["overheadParentItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["packageCount", "NetSuite::SearchLongField", [0, 1]],
      ["paidTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchLongField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["paymentApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventDate", "NetSuite::SearchDateField", [0, 1]],
      ["paymentEventHoldReason", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventPurchaseCardUsed", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventPurchaseDataSent", "NetSuite::SearchBooleanField", [0, 1]],
      ["paymentEventResult", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["paymentMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payPalPending", "NetSuite::SearchBooleanField", [0, 1]],
      ["payPalStatus", "NetSuite::SearchStringField", [0, 1]],
      ["payPalTranId", "NetSuite::SearchStringField", [0, 1]],
      ["pnRefNum", "NetSuite::SearchStringField", [0, 1]],
      ["poAsText", "NetSuite::SearchStringField", [0, 1]],
      ["posting", "NetSuite::SearchBooleanField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printedPickingTicket", "NetSuite::SearchBooleanField", [0, 1]],
      ["probability", "NetSuite::SearchLongField", [0, 1]],
      ["projectedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["purchaseOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityBilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPacked", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPicked", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityRevCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityShipRecv", "NetSuite::SearchDoubleField", [0, 1]],
      ["recognizedRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["recordType", "NetSuite::SearchStringField", [0, 1]],
      ["refNumber", "NetSuite::SearchLongField", [0, 1]],
      ["revCommitStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["revCommittingStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["revCommittingTransaction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["revenueStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["reversalDate", "NetSuite::SearchDateField", [0, 1]],
      ["reversalNumber", "NetSuite::SearchStringField", [0, 1]],
      ["revRecEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["revRecOnRevCommitment", "NetSuite::SearchBooleanField", [0, 1]],
      ["revRecStartDate", "NetSuite::SearchDateField", [0, 1]],
      ["revRecTermInMonths", "NetSuite::SearchLongField", [0, 1]],
      ["salesEffectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["salesOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["serialNumberCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumberCostAdjustment", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumberQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["serialNumbers", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddressee", "NetSuite::SearchStringField", [0, 1]],
      ["shipAttention", "NetSuite::SearchStringField", [0, 1]],
      ["shipCity", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipCountry", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["shipCounty", "NetSuite::SearchStringField", [0, 1]],
      ["shipDate", "NetSuite::SearchDateField", [0, 1]],
      ["shipGroup", "NetSuite::SearchLongField", [0, 1]],
      ["shipMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipPhone", "NetSuite::SearchStringField", [0, 1]],
      ["shipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipRecvStatus", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipRecvStatusLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipState", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipZip", "NetSuite::SearchStringField", [0, 1]],
      ["source", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxLine", "NetSuite::SearchBooleanField", [0, 1]],
      ["taxPeriod", "NetSuite::RecordRef", [0, 1]],
      ["taxPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["taxRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["toBeEmailed", "NetSuite::SearchBooleanField", [0, 1]],
      ["toBePrinted", "NetSuite::SearchBooleanField", [0, 1]],
      ["toSubsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["totalAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["trackingNumbers", "NetSuite::SearchStringField", [0, 1]],
      ["tranCostEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranDate", "NetSuite::SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["tranId", "NetSuite::SearchStringField", [0, 1]],
      ["tranIsVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["transactionDiscount", "NetSuite::SearchBooleanField", [0, 1]],
      ["transactionLineType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["transferLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["transferOrderQuantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPacked", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPicked", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityReceived", "NetSuite::SearchDoubleField", [0, 1]],
      ["transferOrderQuantityShipped", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["unit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["unitCostOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["visibleToCustomer", "NetSuite::SearchBooleanField", [0, 1]],
      ["voided", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoeAllocation", "NetSuite::SearchDoubleField", [0, 1]],
      ["vsoeAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["vsoeDeferral", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["webSite", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TransactionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["abbrev", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["accountType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualShipDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["altSalesAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["altSalesNetAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountPaid", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amountUnbilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToForeignAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToIsFxVariance", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["appliedToLinkAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["appliedToLinkType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["appliedToTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["applyingForeignAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["applyingIsFxVariance", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["applyingLinkAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["applyingLinkType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["applyingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["approvalStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["authCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["avsStreetMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["avsZipMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["billingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billVarianceStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binNumberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["bomQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buildVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["built", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccStreet", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["cleared", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["cogsAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["commissionEffectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["commit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["componentYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["confirmationNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costComponentItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costComponentQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costComponentStandardCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["createdBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["createdFrom", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["creditAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cscMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customForm", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["custType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["debitAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["deferredRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["deferRevRec", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["depositDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["depositTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["discountAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["drAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dueDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["effectiveRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["exchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["excludeCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["expectedCloseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expectedReceiptDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expenseCategory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["fulfillingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fxAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimateRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAllocation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoAvailabelToCharge", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvailableToRefund", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvsStreetMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoAvsZipMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoBuyerAccountAge", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["gcoBuyerIp", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoChargeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoChargebackAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedChargedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedRefundedTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoCreditcardNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoCscMatch", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoFinancialState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoFulfillmentState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoOrderId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoOrderTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["gcoRefundAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoShippingTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gcoStateChangedDetail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCert", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["grossAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["includeInForecast", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["intercoStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["intercoTransaction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isAllocation", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isBackflush", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeback", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeConfirmed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoPaymentGuaranteed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoRefundConfirmed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isIntercompanyAdjustment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isMultiShipTo", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isReversal", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isRevRecTransaction", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isScrap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTransferPriceCosting", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isWip", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["itemRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["landedCostPerLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["line", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["lineSequenceNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["mainLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["mainName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingRouting", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["matchBillToReceipt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memoMain", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["memorized", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["merchantAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["multiSubsidiary", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["netAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["netAmountNoTax", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["nextApprover", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["nextBillDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["nonReimbursable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["opportunity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["options", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["orderPriority", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["originator", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["otherRefNum", "NetSuite::SearchColumnTextNumberField[]", [0, nil]],
      ["overheadParentItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["packageCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["paidAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["paidTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["payingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["paymentApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["paymentEventHoldReason", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventPurchaseCardUsed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventPurchaseDataSent", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["paymentEventResult", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payPalPending", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payPalStatus", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payPalTranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payrollBatch", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pnRefNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["poRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["posting", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["postingPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["print", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["projectedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityBilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPacked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPicked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityRevCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityShipRecv", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["realizedGainPostingTransaction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recognizedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["recordType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["refNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["revCommitStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["revCommittingTransaction", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["revenueStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["reversalDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["reversalNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["revRecEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["revRecOnRevCommitment", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["revRecStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["rgAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["rgAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["salesEffectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["salesOrder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serialNumberCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberCostAdjustment", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["serialNumbers", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["shipGroup", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["shipMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shippingAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["shipRecvStatusLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipTo", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["signedAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["source", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["taxCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxLine", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxPeriod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxTotal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["termInMonths", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["toBeEmailed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["toBePrinted", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["toSubsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["total", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["totalCostEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["trackingNumbers", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranIsVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transactionDiscount", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transactionLineType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["transferLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["transferOrderItemLine", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["transferOrderQuantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPacked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPicked", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityReceived", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityShipped", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["unit", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unitCostOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["visibleToCustomer", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoeAllocation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vsoeAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vsoeDeferral", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["allowedShippingMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["atpLeadTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["atpMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["autoLeadTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["autoPreferredStockLevel", "NetSuite::SearchBooleanField", [0, 1]],
      ["autoReorderPoint", "NetSuite::SearchBooleanField", [0, 1]],
      ["availableToPartners", "NetSuite::SearchBooleanField", [0, 1]],
      ["averageCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["backwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["binNumber", "NetSuite::SearchStringField", [0, 1]],
      ["binOnHandAvail", "NetSuite::SearchDoubleField", [0, 1]],
      ["binOnHandCount", "NetSuite::SearchDoubleField", [0, 1]],
      ["bomQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "NetSuite::SearchBooleanField", [0, 1]],
      ["buildTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["buyItNowPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["caption", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["component", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["componentOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["componentYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["copyDescription", "NetSuite::SearchBooleanField", [0, 1]],
      ["correlatedItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["correlatedItemCorrelation", "NetSuite::SearchDoubleField", [0, 1]],
      ["correlatedItemCount", "NetSuite::SearchLongField", [0, 1]],
      ["correlatedItemLift", "NetSuite::SearchDoubleField", [0, 1]],
      ["correlatedItemPurchaseRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costAccountingStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["costCategory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["costEstimate", "NetSuite::SearchDoubleField", [0, 1]],
      ["costEstimateType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["costingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["countryOfManufacture", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["createJob", "NetSuite::SearchBooleanField", [0, 1]],
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["daysBeforeExpiration", "NetSuite::SearchDoubleField", [0, 1]],
      ["defaultReturnCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["defaultShippingMethod", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["demandModifier", "NetSuite::SearchDoubleField", [0, 1]],
      ["demandSource", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["displayIneBayStore", "NetSuite::SearchBooleanField", [0, 1]],
      ["displayName", "NetSuite::SearchStringField", [0, 1]],
      ["dontShowPrice", "NetSuite::SearchBooleanField", [0, 1]],
      ["eBayItemDescription", "NetSuite::SearchStringField", [0, 1]],
      ["eBayItemSubtitle", "NetSuite::SearchStringField", [0, 1]],
      ["eBayItemTitle", "NetSuite::SearchStringField", [0, 1]],
      ["ebayRelistingOption", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["effectiveBomControl", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["effectiveRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endAuctionsWhenOutOfStock", "NetSuite::SearchBooleanField", [0, 1]],
      ["excludeFromSitemap", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["featuredDescription", "NetSuite::SearchStringField", [0, 1]],
      ["feedDescription", "NetSuite::SearchStringField", [0, 1]],
      ["feedName", "NetSuite::SearchStringField", [0, 1]],
      ["fixedLotSize", "NetSuite::SearchDoubleField", [0, 1]],
      ["forwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["froogleProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["fxCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["giftCertAuthCode", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertEmail", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["giftCertFrom", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertMsg", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertOrigAmt", "NetSuite::SearchStringField", [0, 1]],
      ["giftCertRecipient", "NetSuite::SearchStringField", [0, 1]],
      ["imageUrl", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["invtClassification", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["invtCountInterval", "NetSuite::SearchLongField", [0, 1]],
      ["isAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDropShipItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isFulfillable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isGcoCompliant", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isLotItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPreferredVendor", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSerialItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSpecialOrderItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSpecialWorkOrderItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["issueProduct", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["isTaxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isVsoeBundle", "NetSuite::SearchBooleanField", [0, 1]],
      ["isWip", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemId", "NetSuite::SearchStringField", [0, 1]],
      ["itemUrl", "NetSuite::SearchStringField", [0, 1]],
      ["lastInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastPurchasePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["lastQuantityAvailableChange", "NetSuite::SearchDateField", [0, 1]],
      ["leadTime", "NetSuite::SearchLongField", [0, 1]],
      ["listingDuration", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationAtpLeadTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationAverageCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationBuildTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationCostAccountingStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationDefaultReturnCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationDemandSource", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationFixedLotSize", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationInventoryCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationInvtClassification", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationInvtCountInterval", "NetSuite::SearchLongField", [0, 1]],
      ["locationLastInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["locationLeadTime", "NetSuite::SearchLongField", [0, 1]],
      ["locationNextInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["locationPeriodicLotSizeDays", "NetSuite::SearchLongField", [0, 1]],
      ["locationPeriodicLotSizeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationPreferredStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityBackOrdered", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityInTransit", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationQuantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationReorderPoint", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationSafetyStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["locationSupplyLotSizingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationSupplyType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["locationTotalValue", "NetSuite::SearchDoubleField", [0, 1]],
      ["locBackwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["locForwardConsumptionDays", "NetSuite::SearchLongField", [0, 1]],
      ["manufacturer", "NetSuite::SearchStringField", [0, 1]],
      ["manufactureraddr1", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerCity", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerState", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerTariff", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerTaxId", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturerZip", "NetSuite::SearchStringField", [0, 1]],
      ["manufacturingChargeItem", "NetSuite::SearchBooleanField", [0, 1]],
      ["matchBillToReceipt", "NetSuite::SearchBooleanField", [0, 1]],
      ["matrix", "NetSuite::SearchBooleanField", [0, 1]],
      ["matrixChild", "NetSuite::SearchBooleanField", [0, 1]],
      ["metaTagHtml", "NetSuite::SearchStringField", [0, 1]],
      ["minimumQuantity", "NetSuite::SearchLongField", [0, 1]],
      ["mpn", "NetSuite::SearchStringField", [0, 1]],
      ["multManufactureAddr", "NetSuite::SearchBooleanField", [0, 1]],
      ["nexTagCategory", "NetSuite::SearchStringField", [0, 1]],
      ["nexTagProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["nextInvtCountDate", "NetSuite::SearchDateField", [0, 1]],
      ["numActiveListings", "NetSuite::SearchLongField", [0, 1]],
      ["numberAllowedDownloads", "NetSuite::SearchDoubleField", [0, 1]],
      ["numCurrentlyListed", "NetSuite::SearchLongField", [0, 1]],
      ["obsoleteDate", "NetSuite::SearchDateField", [0, 1]],
      ["obsoleteRevision", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["offerSupport", "NetSuite::SearchBooleanField", [0, 1]],
      ["onlineCustomerPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["onSpecial", "NetSuite::SearchBooleanField", [0, 1]],
      ["otherVendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["outOfStockBehavior", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overheadType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["pageTitle", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["periodicLotSizeDays", "NetSuite::SearchLongField", [0, 1]],
      ["periodicLotSizeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["preferenceCriterion", "NetSuite::SearchStringField", [0, 1]],
      ["preferredBin", "NetSuite::SearchBooleanField", [0, 1]],
      ["preferredLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["preferredStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["preferredStockLevelDays", "NetSuite::SearchLongField", [0, 1]],
      ["price", "NetSuite::SearchDoubleField", [0, 1]],
      ["pricesIncludeTax", "NetSuite::SearchBooleanField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["primaryCategory", "NetSuite::SearchLongField", [0, 1]],
      ["purchaseUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityBackOrdered", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityCommitted", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reorderMultiple", "NetSuite::SearchLongField", [0, 1]],
      ["reorderPoint", "NetSuite::SearchDoubleField", [0, 1]],
      ["reservePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["revRecSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["roundUpAsComponent", "NetSuite::SearchBooleanField", [0, 1]],
      ["safetyStockLevel", "NetSuite::SearchDoubleField", [0, 1]],
      ["safetyStockLevelDays", "NetSuite::SearchLongField", [0, 1]],
      ["salesDescription", "NetSuite::SearchStringField", [0, 1]],
      ["saleUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["scheduleBCode", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["scheduleBNumber", "NetSuite::SearchStringField", [0, 1]],
      ["scheduleBQuantity", "NetSuite::SearchStringField", [0, 1]],
      ["searchKeywords", "NetSuite::SearchStringField", [0, 1]],
      ["seasonalDemand", "NetSuite::SearchBooleanField", [0, 1]],
      ["sellOnEBay", "NetSuite::SearchBooleanField", [0, 1]],
      ["serialNumber", "NetSuite::SearchStringField", [0, 1]],
      ["serialNumberLocation", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shipIndividually", "NetSuite::SearchBooleanField", [0, 1]],
      ["shipPackage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["shippingCarrier", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["shippingRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["shoppingDotComCategory", "NetSuite::SearchStringField", [0, 1]],
      ["shoppingProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["shopzillaCategoryId", "NetSuite::SearchLongField", [0, 1]],
      ["shopzillaProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["sitemapPriority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["softDescriptor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startingPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["stockDescription", "NetSuite::SearchStringField", [0, 1]],
      ["stockUnit", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["storeDescription", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["supplyType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["taxCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["thumbnailUrl", "NetSuite::SearchStringField", [0, 1]],
      ["totalValue", "NetSuite::SearchDoubleField", [0, 1]],
      ["trackLandedCost", "NetSuite::SearchBooleanField", [0, 1]],
      ["transferPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["unitsType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["upcCode", "NetSuite::SearchStringField", [0, 1]],
      ["urlComponent", "NetSuite::SearchStringField", [0, 1]],
      ["useBins", "NetSuite::SearchBooleanField", [0, 1]],
      ["useComponentYield", "NetSuite::SearchBooleanField", [0, 1]],
      ["useMarginalRates", "NetSuite::SearchBooleanField", [0, 1]],
      ["vendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vendorCode", "NetSuite::SearchStringField", [0, 1]],
      ["vendorCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendorCostEntered", "NetSuite::SearchDoubleField", [0, 1]],
      ["vendorName", "NetSuite::SearchStringField", [0, 1]],
      ["vendorPriceCurrency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vsoeDeferral", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "NetSuite::SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["webSite", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["weight", "NetSuite::SearchDoubleField", [0, 1]],
      ["yahooProductFeed", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allowedShippingMethod", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["alternateDemandSourceItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assetAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["atpLeadTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["atpMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["autoLeadTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["autoPreferredStockLevel", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["autoReorderPoint", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["availableToPartners", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["averageCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["backwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["basePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billExchRateVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billQtyVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["binNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["binOnHandAvail", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["binOnHandCount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["bomQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["buildTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["buyItNowPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["categoryPreferred", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["componentYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["copyDescription", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["correlatedItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["correlatedItemCorrelation", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["correlatedItemLift", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemPurchaseRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costAccountingStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["costCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["costEstimate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["costingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryOfManufacture", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["createJob", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["custReturnVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysBeforeExpiration", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["defaultReturnCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["defaultShippingMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["deferredExpenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["deferredRevenueAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["demandModifier", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["demandSource", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["departmentnohierarchy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["displayIneBayStore", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["displayName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dontShowPrice", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["eBayItemDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["eBayItemSubtitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["eBayItemTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ebayRelistingOption", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["effectiveBomControl", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["effectiveRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endAuctionsWhenOutOfStock", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["excludeFromSitemap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["featuredDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["feedDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["feedName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fixedLotSize", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["forwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["froogleProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["fxCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["gainLossAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["giftCertAuthCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertExpirationDate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertFrom", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertOriginalAmount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giftCertRecipient", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["imageUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["invtClassification", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["invtCountInterval", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["isAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDropShipItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isFulfillable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isGcoCompliant", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isLotItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSerialItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialOrderItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialWorkOrderItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issueProduct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isTaxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isVsoeBundle", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isWip", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastPurchasePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["lastQuantityAvailableChange", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadTime", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["liabilityAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["listingDuration", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["locationAtpLeadTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationAverageCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationBinQuantityAvailable", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationBuildTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationCostAccountingStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationDefaultReturnCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationDemandSource", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationFixedLotSize", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationInventoryCostTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationInvtClassification", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationInvtCountInterval", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationLastInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locationLeadTime", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationNextInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["locationPeriodicLotSizeDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locationPeriodicLotSizeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationPreferredStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityBackOrdered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityInTransit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnOrder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationReOrderPoint", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationSafetyStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locationSupplyLotSizingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationSupplyType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["locationTotalValue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["locBackwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["locForwardConsumptionDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["manufacturer", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerAddr1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerTariff", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerTaxId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturerZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingChargeItem", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["matchBillToReceipt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["memberItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memberQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["metaTagHtml", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["minimumQuantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["modified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["mpn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["multManufactureAddr", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["nextagCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nextagProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["nextInvtCountDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["noPriceMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numActiveListings", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["numberAllowedDownloads", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numCurrentlyListed", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["obsoleteDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["obsoleteRevision", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["offerSupport", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["onlineCustomerPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["onlinePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["onSpecial", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["otherPrices", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["otherVendor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["outOfStockBehavior", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["outOfStockMessage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["overallQuantityPricingType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["overheadType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["pageTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["periodicLotSizeDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["periodicLotSizeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["preferenceCriterion", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferredBin", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["preferredLocation", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["preferredStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["preferredStockLevelDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["pricesIncludeTax", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["primaryCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prodPriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["prodQtyVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["purchasePriceVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["purchaseUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityBackOrdered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnOrder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityPricingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reorderMultiple", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["reOrderPoint", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["reservePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["revRecSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["roundUpAsComponent", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["safetyStockLevel", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["safetyStockLevelDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["salesDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesTaxCode", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["saleUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["scheduleBCode", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["scheduleBNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["scheduleBQuantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["scrapAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["searchKeywords", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["seasonalDemand", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sellOnEBay", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["serialNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serialNumberLocation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipIndividually", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shipPackage", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shippingCarrier", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shippingRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["shoppingDotComCategory", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shoppingProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shopzillaCategoryId", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["shopzillaProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sitemapPriority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["softDescriptor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startingPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["stockDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stockUnit", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["storeDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDetailedDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDisplayImage", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["storeDisplayName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["storeDisplayThumbnail", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyLotSizingMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyReplenishmentMethod", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["taxSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["thumbNailUrl", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["totalValue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["trackLandedCost", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["transferPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["unbuildVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["unitsType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["upcCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["urlComponent", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useBins", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useComponentYield", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["useMarginalRates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vendor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vendorCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendorCostEntered", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["vendorName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorPriceCurrency", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendorSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vendReturnVarianceAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["vsoeDeferral", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["weight", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["weightUnit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["wipAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["wipVarianceAcct", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["yahooProductFeed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["assignTasks", "NetSuite::SearchBooleanField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["commissionPlan", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerCode", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["uRL", ["NetSuite::SearchStringField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["assignTasks", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["billAddress", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["currentExchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["eligibleForCommission", "NetSuite::SearchBooleanField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["emailPreference", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["expenseAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["fxBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["is1099Eligible", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isJobResourceVend", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["laborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["payablesAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipAddress", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxIdNum", "NetSuite::SearchStringField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["currentExchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["eligibleForCommission", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fxBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["is1099Eligible", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isJobResourceVend", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["payablesAccount", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printOnCheckAs", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["taxIdNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["excludeFromSitemap", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["name", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["sitemapPriority", "NetSuite::SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SiteCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["excludeFromSitemap", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fullName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hidden", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["longDescription", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pageTitle", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["sitemapPriority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["urlComponent", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["approved", "NetSuite::SearchBooleanField", [0, 1]],
      ["billable", "NetSuite::SearchBooleanField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["date", "NetSuite::SearchDateField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["duration", "NetSuite::SearchDoubleField", [0, 1]],
      ["employee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["exempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModified", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["paidByPayroll", "NetSuite::SearchBooleanField", [0, 1]],
      ["paidExternally", "NetSuite::SearchBooleanField", [0, 1]],
      ["payItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["productive", "NetSuite::SearchBooleanField", [0, 1]],
      ["status", "NetSuite::SearchBooleanField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["type", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["utilized", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeBillSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["v_break", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "break")], [0, nil]],
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["date", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["durationDecimal", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["employee", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hours", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isBillable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isExempt", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isProductive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isUtilized", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastModified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["paidExternally", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["payItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payrollDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startTime", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["supervisorApproval", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["temporaryLocalJurisdiction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["temporaryStateJurisdiction", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["abstract", "NetSuite::SearchStringField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["caseCount", "NetSuite::SearchLongField", [0, 1]],
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["find", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["topic", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SolutionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["displayOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["previewref", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["solutionCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TopicSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isElimination", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["legalName", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["nameNoHierarchy", "NetSuite::SearchStringField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["taxIdNum", "NetSuite::SearchStringField", [0, 1]],
      ["tranPrefix", "NetSuite::SearchStringField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["zip", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SubsidiarySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerInboundEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerOnlineForms", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseAssignmentTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseAutomaticClosureTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseCopyEmployeeTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseCreationTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseEscalationTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["caseUpdateTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyNameForSupportMessages", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["employeeCaseUpdateTemplate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isElimination", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["legalName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mainSupportEmailAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["taxIdNum", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["tranPrefix", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["zip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amountAvailableBilled", "NetSuite::SearchDoubleField", [0, 1]],
      ["amountRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["expirationDate", "NetSuite::SearchDateField", [0, 1]],
      ["giftCertCode", "NetSuite::SearchStringField", [0, 1]],
      ["incomeAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isActive", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["liabilityAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["message", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["originalAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["purchaseDate", "NetSuite::SearchDateField", [0, 1]],
      ["sender", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GiftCertificateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amountRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["amtAvailBilled", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["expirationDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["gcActive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["giftCertCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["liabilityAcct", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["originalAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["purchaseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["sender", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTopLevel", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["numFiles", "NetSuite::SearchLongField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["private", "NetSuite::SearchBooleanField", [0, 1]],
      ["size", "NetSuite::SearchLongField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FolderSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["v_class", ["NetSuite::SearchColumnSelectField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["department", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["folderSize", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["group", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numFiles", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["availableWithoutLogin", "NetSuite::SearchBooleanField", [0, 1]],
      ["created", "NetSuite::SearchDateField", [0, 1]],
      ["dateViewed", "NetSuite::SearchDateField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["documentSize", "NetSuite::SearchLongField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fileType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["folder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isAvailable", "NetSuite::SearchBooleanField", [0, 1]],
      ["isLink", "NetSuite::SearchBooleanField", [0, 1]],
      ["modified", "NetSuite::SearchDateField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "FileSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["availableWithoutLogin", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["created", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateViewed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["documentSize", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fileType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["folder", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["hits", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["hostedPath", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["modified", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["actualTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["address", "NetSuite::SearchStringField", [0, 1]],
      ["addressee", "NetSuite::SearchStringField", [0, 1]],
      ["addressLabel", "NetSuite::SearchStringField", [0, 1]],
      ["addressPhone", "NetSuite::SearchStringField", [0, 1]],
      ["allocatePayrollExpenses", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowAllResourcesForTasks", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowExpenses", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["applyProjectExpenseTypeToAll", "NetSuite::SearchBooleanField", [0, 1]],
      ["attention", "NetSuite::SearchStringField", [0, 1]],
      ["billingSchedule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["calculatedEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["calculatedEndDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["city", "NetSuite::SearchStringField", [0, 1]],
      ["comments", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["county", "NetSuite::SearchStringField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateCreated", "NetSuite::SearchDateField", [0, 1]],
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityId", "NetSuite::SearchStringField", [0, 1]],
      ["estCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["estEndDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedGrossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedGrossProfitPercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborCostBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedLaborRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedTimeOverrideBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["fax", "NetSuite::SearchStringField", [0, 1]],
      ["giveAccess", "NetSuite::SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["image", "NetSuite::SearchStringField", [0, 1]],
      ["includeCrmTasksInTotals", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefaultBilling", "NetSuite::SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "NetSuite::SearchBooleanField", [0, 1]],
      ["isExemptTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isProductiveTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["isUtilizedTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["jobBillingType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["jobItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["jobPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["jobResource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["jobResourceRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["language", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["lastBaselineDate", "NetSuite::SearchDateField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["level", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["limitTimeToAssignees", "NetSuite::SearchBooleanField", [0, 1]],
      ["materializeTime", "NetSuite::SearchBooleanField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pctComplete", "NetSuite::SearchLongField", [0, 1]],
      ["percentTimeComplete", "NetSuite::SearchLongField", [0, 1]],
      ["permission", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["phone", "NetSuite::SearchStringField", [0, 1]],
      ["phoneticName", "NetSuite::SearchStringField", [0, 1]],
      ["projectedEndDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["projectExpenseType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["startDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["state", "NetSuite::SearchStringField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["timeRemaining", "NetSuite::SearchDoubleField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["zipCode", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["actualTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["address", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["address3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["allocatePayrollExpenses", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowAllResourcesForTasks", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowExpenses", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altEmail", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["attention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billingSchedule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["calculatedEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["calculatedEndDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["city", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["comments", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfitPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCostBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverrideBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["fax", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["includeCrmTasksInTotals", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isExemptTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isProductiveTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isUtilizedTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["jobBillingType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["jobItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jobPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobResource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["jobResourceRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["language", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["lastBaselineDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["level", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["limitTimeToAssignees", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["materializeTime", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["percentComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["permission", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectedEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["projectedEndDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["projectExpenseType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["shipAddress1", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipState", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipZip", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["timeRemaining", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["ageInMonths", "NetSuite::SearchLongField", [0, 1]],
      ["assigned", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildBroken", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildBrokenName", "NetSuite::SearchStringField", [0, 1]],
      ["buildFixed", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildFixedName", "NetSuite::SearchStringField", [0, 1]],
      ["buildTarget", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buildTargetName", "NetSuite::SearchStringField", [0, 1]],
      ["caseCount", "NetSuite::SearchLongField", [0, 1]],
      ["caseNumber", "NetSuite::SearchStringField", [0, 1]],
      ["closedDate", "NetSuite::SearchDateField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["dateReleased", "NetSuite::SearchDateField", [0, 1]],
      ["details", "NetSuite::SearchStringField", [0, 1]],
      ["duplicateOf", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eFix", "NetSuite::SearchBooleanField", [0, 1]],
      ["employeeOrTeam", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["eventStatus", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["externalAbstract", "NetSuite::SearchStringField", [0, 1]],
      ["externalDetails", "NetSuite::SearchStringField", [0, 1]],
      ["externalFixedIn", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["externalStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["fixed", "NetSuite::SearchDateField", [0, 1]],
      ["fixedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isOwner", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReviewed", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShowStopper", "NetSuite::SearchBooleanField", [0, 1]],
      ["issueAbstract", "NetSuite::SearchStringField", [0, 1]],
      ["issueNumber", "NetSuite::SearchStringField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["v_module", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["originalFixedIn", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["product", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["productTeam", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["relatedIssue", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["relationship", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["relationshipComment", "NetSuite::SearchStringField", [0, 1]],
      ["reportedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reproduce", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resolved", "NetSuite::SearchDateField", [0, 1]],
      ["resolvedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["reviewer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["severity", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["source", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tags", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["tracking", "NetSuite::SearchBooleanField", [0, 1]],
      ["type", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["userType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionBroken", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionFixed", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["versionTarget", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "IssueSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["ageInMonths", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["assigned", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildBroken", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildFixed", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["buildTarget", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["caseNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["closedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["dateReleased", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["duplicateOf", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["employeeOrTeam", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["eventStatus", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["externalAbstract", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalDetails", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalFixedIn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["fixed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["fixedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isOwner", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isReviewed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShowStopper", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["issueAbstract", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["issueStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["v_module", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["number", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["originalFixedIn", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["product", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["productTeam", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["relatedIssue", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["relationship", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["relationshipComment", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["reportedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reproduce", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resolved", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["resolvedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["reviewer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["severity", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["source", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["tags", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["type", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["userType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionBroken", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionFixed", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["versionTarget", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GroupMemberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["groupId", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["audience", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["baseCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["campaignEventType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["campaignId", "NetSuite::SearchStringField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["channel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["event", "NetSuite::SearchStringField", [0, 1]],
      ["expectedRevenue", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["family", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSalesCampaign", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["keyword", "NetSuite::SearchStringField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["manager", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["managerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["number", "NetSuite::SearchLongField", [0, 1]],
      ["offer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["promoCode", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["response", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["responseCategory", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["responseCode", "NetSuite::SearchLongField", [0, 1]],
      ["responseComments", "NetSuite::SearchStringField", [0, 1]],
      ["responseDate", "NetSuite::SearchDateField", [0, 1]],
      ["scheduleDate", "NetSuite::SearchDateField", [0, 1]],
      ["searchEngine", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["subscription", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["template", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["vertical", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CampaignSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["audience", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["baseCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["campaignId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["channel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["event", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["executedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["expectedRevenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["family", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSalesCampaign", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["keyword", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["managerRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["offer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["promoCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["response", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCategory", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCode", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["responseDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["responseNotes", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["revenue", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["roi", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["scheduledDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["searchEngine", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vertical", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["email", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["groupName", "NetSuite::SearchStringField", [0, 1]],
      ["groupOwner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDynamic", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isManufacturingWorkCenter", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPrivate", "NetSuite::SearchBooleanField", [0, 1]],
      ["laborResources", "NetSuite::SearchLongField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["machineResources", "NetSuite::SearchLongField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "EntityGroupSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["email", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["groupName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["groupType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDynamic", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isManufacturingWorkCenter", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPrivate", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["laborResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["machineResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["savedSearch", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["size", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PromotionCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["applyDiscountTo", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["discount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["discountAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["freeShipItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPublic", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PromotionCodeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["discount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["discountAmount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPublic", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BudgetSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["v_class", ["NetSuite::SearchMultiSelectField", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["department", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["global", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["year", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["year2", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "BudgetSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["v_class", ["NetSuite::SearchColumnStringField[]", XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["classnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["department", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["departmentnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["global", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["locationnohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiarynohierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["year", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["year2", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["assignee", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["company", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["constraintType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["contact", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBaseVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["costVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["costVariancePercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["endDateVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkVariancePercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["finishByDate", "NetSuite::SearchDateField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isMilestone", "NetSuite::SearchBooleanField", [0, 1]],
      ["isSummaryTask", "NetSuite::SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["percentWorkComplete", "NetSuite::SearchDoubleField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["predecessors", "NetSuite::SearchStringField", [0, 1]],
      ["priority", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["remainingWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["startDateBaseline", "NetSuite::SearchDateField", [0, 1]],
      ["startDateVariance", "NetSuite::SearchDoubleField", [0, 1]],
      ["status", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["successor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["company", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["constraintType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBaseVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costVariancePercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDateVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariancePercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["finishByDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isMilestone", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isSummaryTask", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["percentWorkComplete", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["predecessorLagDays", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessors", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["predecessorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["priority", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["remainingWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["startDateVariance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["successor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["successorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskAssignmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["cost", "NetSuite::SearchDoubleField", [0, 1]],
      ["costBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "NetSuite::SearchDoubleField", [0, 1]],
      ["grossProfit", "NetSuite::SearchDoubleField", [0, 1]],
      ["grossProfitBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["price", "NetSuite::SearchDoubleField", [0, 1]],
      ["priceBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resourceName", "NetSuite::SearchStringField", [0, 1]],
      ["serviceItem", "NetSuite::SearchStringField", [0, 1]],
      ["serviceItemDesc", "NetSuite::SearchStringField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["unitCost", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitCostBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["unitPriceBase", "NetSuite::SearchDoubleField", [0, 1]],
      ["units", "NetSuite::SearchDoubleField", [0, 1]],
      ["workCalendar", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskAssignmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["cost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["grossProfit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["grossProfitBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["price", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["priceBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resourceName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serviceItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["serviceItemDesc", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["unitCost", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitCostBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["unitPriceBase", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["workCalendar", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["allLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["allowNonGlChanges", "NetSuite::SearchBooleanField", [0, 1]],
      ["apLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["arLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["closed", "NetSuite::SearchBooleanField", [0, 1]],
      ["closedOnDate", "NetSuite::SearchDateField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isAdjust", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isQuarter", "NetSuite::SearchBooleanField", [0, 1]],
      ["isYear", "NetSuite::SearchBooleanField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["payrollLocked", "NetSuite::SearchBooleanField", [0, 1]],
      ["periodName", "NetSuite::SearchStringField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["allowNonGLChanges", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["apLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["arLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closed", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["closedOnDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isAdjust", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isQuarter", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isYear", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["payrollLocked", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["periodName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["private", "NetSuite::SearchBooleanField", [0, 1]],
      ["sync", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["private", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["sync", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ContactRoleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["includeInLeadReports", "NetSuite::SearchBooleanField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["probability", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerStatusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["includeInLeadReports", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["probability", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["rateRequired", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rateRequired", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobStatusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "JobTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NoteTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PartnerCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PaymentMethodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["creditCard", "NetSuite::SearchBooleanField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDebitCard", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PaymentMethodSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["account", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["creditCard", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDebitCard", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PriceLevelSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["discountPct", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOnline", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PriceLevelSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["discountPct", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SalesRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "SalesRoleSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TermSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["dateDriven", "NetSuite::SearchBooleanField", [0, 1]],
      ["dayDiscountExpires", "NetSuite::SearchLongField", [0, 1]],
      ["dayOfMonthNetDue", "NetSuite::SearchLongField", [0, 1]],
      ["daysUntilExpiry", "NetSuite::SearchLongField", [0, 1]],
      ["daysUntilNetDue", "NetSuite::SearchLongField", [0, 1]],
      ["discountPercent", "NetSuite::SearchDoubleField", [0, 1]],
      ["discountPercentDateDriven", "NetSuite::SearchDoubleField", [0, 1]],
      ["dueNextMonthIfWithinDays", "NetSuite::SearchLongField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["preferred", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "TermSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["dateDriven", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["dayDiscountExpires", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["dayOfMonthNetDue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysUntilExpiry", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["daysUntilNetDue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["discountPercent", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["discountPercentDateDriven", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["dueNextMonthIfWithinDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferred", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isTaxAgency", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "VendorCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isTaxAgency", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "WinLossReasonSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "WinLossReasonSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OriginatingLeadSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchStringField", [0, 1]],
      ["availableOffline", "NetSuite::SearchBooleanField", [0, 1]],
      ["balance", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["boughtDate", "NetSuite::SearchDateField", [0, 1]],
      ["buyingReason", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["category", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "NetSuite::SearchStringField", [0, 1]],
      ["ccDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["ccExpDate", "NetSuite::SearchDateField", [0, 1]],
      ["ccHolderName", "NetSuite::SearchStringField", [0, 1]],
      ["ccNumber", "NetSuite::SearchStringField", [0, 1]],
      ["ccType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["classBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["companyName", "NetSuite::SearchStringField", [0, 1]],
      ["contact", "NetSuite::SearchStringField", [0, 1]],
      ["contribution", "NetSuite::SearchLongField", [0, 1]],
      ["conversionDate", "NetSuite::SearchDateField", [0, 1]],
      ["creditHoldOverride", "NetSuite::SearchBooleanField", [0, 1]],
      ["creditLimit", "NetSuite::SearchDoubleField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["custStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["dateClosed", "NetSuite::SearchDateField", [0, 1]],
      ["daysOverdue", "NetSuite::SearchLongField", [0, 1]],
      ["depositBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["deptBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["emailTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["entityStatus", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "NetSuite::SearchDoubleField", [0, 1]],
      ["explicitConversion", "NetSuite::SearchBooleanField", [0, 1]],
      ["faxTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["firstName", "NetSuite::SearchStringField", [0, 1]],
      ["firstOrderDate", "NetSuite::SearchDateField", [0, 1]],
      ["firstSaleDate", "NetSuite::SearchDateField", [0, 1]],
      ["group", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "NetSuite::SearchBooleanField", [0, 1]],
      ["isBudgetApproved", "NetSuite::SearchBooleanField", [0, 1]],
      ["isPerson", "NetSuite::SearchBooleanField", [0, 1]],
      ["isReportedLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["isShipAddress", "NetSuite::SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "NetSuite::SearchDoubleField", [0, 1]],
      ["itemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastName", "NetSuite::SearchStringField", [0, 1]],
      ["leadDate", "NetSuite::SearchDateField", [0, 1]],
      ["leadSource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["locationBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["merchantAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["middleName", "NetSuite::SearchStringField", [0, 1]],
      ["onCreditHold", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderedAmount", "NetSuite::SearchDoubleField", [0, 1]],
      ["orderedDate", "NetSuite::SearchDateField", [0, 1]],
      ["otherRelationships", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "NetSuite::SearchDoubleField", [0, 1]],
      ["parent", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "NetSuite::SearchLongField", [0, 1]],
      ["partnerRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pec", "NetSuite::SearchStringField", [0, 1]],
      ["priceLevel", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["pricingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["printTransactions", "NetSuite::SearchBooleanField", [0, 1]],
      ["prospectDate", "NetSuite::SearchDateField", [0, 1]],
      ["pstExempt", "NetSuite::SearchBooleanField", [0, 1]],
      ["reminderDate", "NetSuite::SearchDateField", [0, 1]],
      ["resaleNumber", "NetSuite::SearchStringField", [0, 1]],
      ["role", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesRep", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["salutation", "NetSuite::SearchStringField", [0, 1]],
      ["shipComplete", "NetSuite::SearchBooleanField", [0, 1]],
      ["shippingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["stage", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["subsidBought", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["taxable", "NetSuite::SearchBooleanField", [0, 1]],
      ["terms", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["territory", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["title", "NetSuite::SearchStringField", [0, 1]],
      ["unbilledOrders", "NetSuite::SearchDoubleField", [0, 1]],
      ["url", "NetSuite::SearchStringField", [0, 1]],
      ["vatRegNumber", "NetSuite::SearchStringField", [0, 1]],
      ["webLead", "NetSuite::SearchBooleanField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OriginatingLeadSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["accountNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["altContact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["balance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["category", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["ccType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["companyName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contact", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["contribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["creditHoldOverride", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["emailTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["entityStatus", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["faxTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["giveAccess", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["groupPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isBudgetApproved", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["jobType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["leadDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["leadSource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manualCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["onCreditHold", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["parent", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pec", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["reminderDays", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["role", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesRep", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["salutation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["shippingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["taxable", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["terms", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["territory", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["title", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["url", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["webLead", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "UnitsTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["abbreviation", "NetSuite::SearchStringField", [0, 1]],
      ["baseUnit", "NetSuite::SearchBooleanField", [0, 1]],
      ["conversionRate", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInActive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["pluralAbbreviation", "NetSuite::SearchStringField", [0, 1]],
      ["pluralName", "NetSuite::SearchStringField", [0, 1]],
      ["unitName", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "UnitsTypeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["abbreviation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["baseUnit", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["conversionRate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInActive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pluralAbbreviation", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["pluralName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["unitName", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomListSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["isOrdered", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["owner", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["scriptId", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomListSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isOrdered", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["owner", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["scriptId", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PricingGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PricingGroupSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["expirationDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchStringField", [0, 1]],
      ["isOnHand", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityInTransit", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "NetSuite::SearchDoubleField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["expirationDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isonhand", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["quantityavailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityintransit", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityonhand", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityonorder", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberBinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberBinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["inventoryNumber", "NetSuite::SearchStringField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberBinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "InventoryNumberBinSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemBinNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemBinNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "NetSuite::SearchDoubleField", [0, 1]],
      ["quantityOnHand", "NetSuite::SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemBinNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemBinNumberSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["binNumber", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "NetSuite::SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppDefinitionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppDefinitionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppPackageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["appDefinition", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["version", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "AppPackageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["appDefinition", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["bundle", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["packageFile", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["version", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NexusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["country", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["state", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "NexusSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["country", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["state", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerMessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchStringField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["preferred", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomerMessageSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["description", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["preferred", "NetSuite::SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["alternateSourceItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["analysisDuration", "NetSuite::SearchLongField", [0, 1]],
      ["demandDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["projectionDuration", "NetSuite::SearchLongField", [0, 1]],
      ["projectionInterval", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["projectionMethod", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["projectionStartDate", "NetSuite::SearchDateField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["units", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["alternateSourceItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["analysisDuration", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["demandDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionDuration", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["projectionInterval", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionMethod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["projectionStartDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSupplyPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["orderCreated", "NetSuite::SearchBooleanField", [0, 1]],
      ["orderDate", "NetSuite::SearchDateField", [0, 1]],
      ["orderType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["receiptDate", "NetSuite::SearchDateField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["units", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemSupplyPlanSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["orderCreated", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["orderDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["orderType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["receiptDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["units", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["baseCurrency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["exchangeRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["transactionCurrency", "NetSuite::SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencyRateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["baseCurrency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["exchangeRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["transactionCurrency", "NetSuite::SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemRevisionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["effectiveDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["obsoleteDate", "NetSuite::SearchDateField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemRevisionSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["effectiveDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["obsoleteDate", "NetSuite::SearchColumnDateField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CouponCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchStringField", [0, 1]],
      ["dateSent", "NetSuite::SearchDateField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["promotion", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["recipient", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["useCount", "NetSuite::SearchLongField", [0, 1]],
      ["used", "NetSuite::SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CouponCodeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["code", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["dateSent", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["promotion", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["recipient", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["useCount", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["used", "NetSuite::SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PayrollItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["expenseAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["itemTypeNoHierarchy", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["liabilityAccount", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["vendor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "PayrollItemSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["expenseAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["itemTypeNoHierarchy", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["liabilityAccount", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["vendor", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingRoutingSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["isDefault", "NetSuite::SearchBooleanField", [0, 1]],
      ["isInactive", "NetSuite::SearchBooleanField", [0, 1]],
      ["subsidiary", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["item", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["location", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["memo", "NetSuite::SearchStringField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["operationName", "NetSuite::SearchStringField", [0, 1]],
      ["operationYield", "NetSuite::SearchDoubleField", [0, 1]],
      ["runRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["sequence", "NetSuite::SearchLongField", [0, 1]],
      ["setupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingRoutingSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["isDefault", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "NetSuite::SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["item", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["location", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingCostTemplate", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingWorkCenter", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["memo", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["operationName", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["operationYield", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["sequence", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["setupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["actualRunTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["actualSetupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["completedQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["estimatedWork", "NetSuite::SearchDoubleField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["id", "NetSuite::SearchLongField", [0, 1]],
      ["inputQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["laborResources", "NetSuite::SearchLongField", [0, 1]],
      ["machineResources", "NetSuite::SearchLongField", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["name", "NetSuite::SearchStringField", [0, 1]],
      ["order", "NetSuite::SearchDoubleField", [0, 1]],
      ["predecessor", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["remainingQuantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["runRate", "NetSuite::SearchDoubleField", [0, 1]],
      ["runTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["sequence", "NetSuite::SearchLongField", [0, 1]],
      ["setupTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["status", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["workOrder", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["actualRunTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["actualSetupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["completedQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["id", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["inputQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["laborResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["machineResources", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["message", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["manufacturingCostTemplate", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["manufacturingWorkCenter", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["name", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["order", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["predecessorLagDays", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["predecessorType", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["remainingQuantity", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runRate", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["runTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["sequence", "NetSuite::SearchColumnLongField[]", [0, nil]],
      ["setupTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["status", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["workOrder", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ResourceAllocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["allocationType", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["allocationUnit", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customer", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["endDate", "NetSuite::SearchDateField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["notes", "NetSuite::SearchStringField", [0, 1]],
      ["numberHours", "NetSuite::SearchDoubleField", [0, 1]],
      ["percentOfTime", "NetSuite::SearchDoubleField", [0, 1]],
      ["project", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["requestedBy", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["resource", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["startDate", "NetSuite::SearchDateField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ResourceAllocationSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["allocationType", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["allocationUnit", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customer", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["endDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["notes", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["numberHours", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["percentOfTime", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["project", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["requestedBy", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["resource", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["startDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomSearchJoin,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomSearchJoin"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef"],
      ["searchRecordBasic", "NetSuite::SearchRecordBasic"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "CustomSearchRowBasic"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef"],
      ["searchRowBasic", "NetSuite::SearchRowBasic"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchDoubleField", [0, 1]],
      ["billingItem", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["billTo", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["chargeDate", "NetSuite::SearchDateField", [0, 1]],
      ["chargeType", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["createdDate", "NetSuite::SearchDateField", [0, 1]],
      ["currency", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["externalIdString", "NetSuite::SearchStringField", [0, 1]],
      ["internalId", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "NetSuite::SearchLongField", [0, 1]],
      ["modifiedDate", "NetSuite::SearchDateField", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriodRelative", "NetSuite::PostingPeriodDate", [0, 1]],
      ["quantity", "NetSuite::SearchDoubleField", [0, 1]],
      ["rate", "NetSuite::SearchDoubleField", [0, 1]],
      ["rule", "NetSuite::SearchMultiSelectField", [0, 1]],
      ["runId", "NetSuite::SearchStringField", [0, 1]],
      ["salesOrder", "NetSuite::SearchLongField", [0, 1]],
      ["stage", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["use", "NetSuite::SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "NetSuite::SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeSearchRowBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRowBasic"),
    :schema_element => [
      ["amount", "NetSuite::SearchColumnDoubleField[]", [0, nil]],
      ["billingItem", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["billTo", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["chargeDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["chargeType", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["createdDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["currency", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["externalId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["internalId", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["modifiedDate", "NetSuite::SearchColumnDateField[]", [0, nil]],
      ["postingPeriod", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["quantity", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rate", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["rule", "NetSuite::SearchColumnSelectField[]", [0, nil]],
      ["runId", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["salesOrder", "NetSuite::SearchColumnStringField[]", [0, nil]],
      ["stage", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["use", "NetSuite::SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "NetSuite::SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEvent,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "NetSuite::RecurrenceFrequency", [0, 1]],
      ["recurrenceDowMaskList", "NetSuite::RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "NetSuite::RecurrenceDow", [0, 1]],
      ["recurrenceDowim", "NetSuite::RecurrenceDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::CalendarEventReminderMinutes", [0, 1]],
      ["status", "NetSuite::CalendarEventStatus", [0, 1]],
      ["accessLevel", "NetSuite::CalendarEventAccessLevel", [0, 1]],
      ["organizer", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "NetSuite::ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["attendeeList", "NetSuite::CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "NetSuite::CalendarEventResourceList", [0, 1]],
      ["timeItemList", "NetSuite::CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExclusionDateList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
    :schema_element => [
      ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventAttendee,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
    :schema_element => [
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["attendee", "NetSuite::RecordRef", [0, 1]],
      ["response", "NetSuite::CalendarEventAttendeeResponse", [0, 1]],
      ["attendance", "NetSuite::CalendarEventAttendeeAttendance", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventAttendeeList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
    :schema_element => [
      ["attendee", "NetSuite::CalendarEventAttendee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventResource,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
    :schema_element => [
      ["resource", "NetSuite::RecordRef", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventResourceList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
    :schema_element => [
      ["resource", "NetSuite::CalendarEventResource[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CalendarEventSearch", [0, 1]],
      ["columns", "NetSuite::CalendarEventSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["attendeeJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["attendeeContactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["attendeeCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Task,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "NetSuite::TaskPriority", [0, 1]],
      ["status", "NetSuite::TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::TaskReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["contactList", "NetSuite::TaskContactList", [0, 1]],
      ["timeItemList", "NetSuite::TaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskContact,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskContact"),
    :schema_element => [
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskContactList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
    :schema_element => [
      ["contact", "NetSuite::TaskContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TaskSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TaskSearch", [0, 1]],
      ["columns", "NetSuite::TaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCall,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::PhoneCallStatus", [0, 1]],
      ["priority", "NetSuite::PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "NetSuite::PhoneCallContactList", [0, 1]],
      ["timeItemList", "NetSuite::PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallContact,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
    :schema_element => [
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallContactList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
    :schema_element => [
      ["contact", "NetSuite::PhoneCallContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["participantJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PhoneCallSearch", [0, 1]],
      ["columns", "NetSuite::PhoneCallSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["participantJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTask,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTask"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["eventId", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "NetSuite::ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["finishByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isMilestone", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnCriticalPath", "SOAP::SOAPString", [0, 1]],
      ["slackMinutes", "SOAP::SOAPDouble", [0, 1]],
      ["lateEnd", "SOAP::SOAPDateTime", [0, 1]],
      ["lateStart", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "NetSuite::ProjectTaskStatus", [0, 1]],
      ["assigneeList", "NetSuite::ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "NetSuite::ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "NetSuite::ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskPredecessor,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessor"),
    :schema_element => [
      ["task", "NetSuite::RecordRef", [0, 1]],
      ["type", "NetSuite::ProjectTaskPredecessorPredecessorType", [0, 1]],
      ["lagDays", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskPredecessorList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorList"),
    :schema_element => [
      ["projectTaskPredecessor", "NetSuite::ProjectTaskPredecessor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskAssignee,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssignee"),
    :schema_element => [
      ["resource", "NetSuite::RecordRef", [0, 1]],
      ["units", "SOAP::SOAPDouble", [0, 1]],
      ["serviceItem", "NetSuite::RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["unitPrice", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskAssigneeList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssigneeList"),
    :schema_element => [
      ["projectTaskAssignee", "NetSuite::ProjectTaskAssignee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ProjectTaskSearch", [0, 1]],
      ["columns", "NetSuite::ProjectTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["successorJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocation,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocation"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["requestedby", "NetSuite::RecordRef", [0, 1]],
      ["allocationResource", "NetSuite::RecordRef", [0, 1]],
      ["project", "NetSuite::RecordRef", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allocationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["allocationUnit", "NetSuite::ResourceAllocationAllocationUnit", [0, 1]],
      ["numberHours", "SOAP::SOAPDouble", [0, 1]],
      ["percentOfTime", "SOAP::SOAPDouble", [0, 1]],
      ["allocationType", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearch,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["requestedByJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["resourceJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ResourceAllocationSearch", [0, 1]],
      ["columns", "NetSuite::ResourceAllocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["requestedByJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["resourceJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Note,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Note"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "NetSuite::RecordRef", [0, 1]],
      ["direction", "NetSuite::NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["folder", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["media", "NetSuite::RecordRef", [0, 1]],
      ["record", "NetSuite::RecordRef", [0, 1]],
      ["recordType", "NetSuite::RecordRef", [0, 1]],
      ["topic", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearch,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NoteSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NoteSearch", [0, 1]],
      ["columns", "NetSuite::NoteSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["authorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Message,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Message"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["mediaItemList", "NetSuite::MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageMediaItemList,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
    :schema_element => [
      ["mediaItem", "NetSuite::C_File[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearch,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::MessageSearch", [0, 1]],
      ["columns", "NetSuite::MessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["attachmentsJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["authorJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["recipientJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::C_File,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "File"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["attachFrom", "NetSuite::FileAttachFrom", [0, 1]],
      ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
      ["fileType", "NetSuite::MediaType", [0, 1]],
      ["content", "SOAP::SOAPBase64", [0, 1]],
      ["folder", "NetSuite::RecordRef", [0, 1]],
      ["fileSize", "SOAP::SOAPDouble", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["mediaFile", "NetSuite::RecordRef", [0, 1]],
      ["textFileEncoding", "NetSuite::TextFileEncoding", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["encoding", "NetSuite::FileEncoding", [0, 1]],
      ["altTagCaption", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["caption", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["siteDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["siteCategoryList", "NetSuite::FileSiteCategoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSiteCategory,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
    :schema_element => [
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]],
      ["website", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSiteCategoryList,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
    :schema_element => [
      ["siteCategory", "NetSuite::FileSiteCategory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::FileSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::FileSearch", [0, 1]],
      ["columns", "NetSuite::FileSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Folder,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "Folder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["group", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::FolderSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::FolderSearch", [0, 1]],
      ["columns", "NetSuite::FolderSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FolderSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::FolderSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Subscriptions,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Subscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SubscriptionsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "SubscriptionsList"),
    :schema_element => [
      ["subscriptions", "NetSuite::Subscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Contact,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Contact"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["contactSource", "NetSuite::RecordRef", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "NetSuite::RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "NetSuite::ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CategoryList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CategoryList"),
    :schema_element => [
      ["category", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::ContactAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["parentJobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["parentPartnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["parentVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactSearch", [0, 1]],
      ["columns", "NetSuite::ContactSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["customerPrimaryJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["jobPrimaryJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["parentJobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["parentPartnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["parentVendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["partnerPrimaryJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["vendorPrimaryJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Customer,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Customer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "NetSuite::Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["numberFormat", "NetSuite::CustomerNumberFormat", [0, 1]],
      ["negativeNumberFormat", "NetSuite::CustomerNegativeNumberFormat", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["territory", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "NetSuite::CustomerCreditHoldOverride", [0, 1]],
      ["monthlyClosing", "NetSuite::CustomerMonthlyClosing", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["prefCCProcessor", "NetSuite::RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "NetSuite::RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "NetSuite::Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["receivablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["defaultOrderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["downloadList", "NetSuite::CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["addressbookList", "NetSuite::CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["currencyList", "NetSuite::CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "NetSuite::CustomerCreditCardsList", [0, 1]],
      ["partnersList", "NetSuite::CustomerPartnersList", [0, 1]],
      ["groupPricingList", "NetSuite::CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "NetSuite::CustomerItemPricingList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDownload,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerDownload"),
    :schema_element => [
      ["file", "NetSuite::RecordRef", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
      ["expiration", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDownloadList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
    :schema_element => [
      ["download", "NetSuite::CustomerDownload[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactAccessRoles,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAccessRoles"),
    :schema_element => [
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactAccessRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactAccessRolesList"),
    :schema_element => [
      ["contactRoles", "NetSuite::ContactAccessRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSalesTeam_,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSalesTeamList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CustomerSalesTeam_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::CustomerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
    :schema_element => [
      ["creditCards", "NetSuite::CustomerCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerGroupPricing,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
    :schema_element => [
      ["group", "NetSuite::RecordRef", [0, 1]],
      ["level", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerGroupPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
    :schema_element => [
      ["groupPricing", "NetSuite::CustomerGroupPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerItemPricing,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["level", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerItemPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
    :schema_element => [
      ["itemPricing", "NetSuite::CustomerItemPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPartnersList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerSearch", [0, 1]],
      ["columns", "NetSuite::CustomerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["hostedPageJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["subCustomerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["topLevelParentJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["webSiteCategoryJoin", "NetSuite::SiteCategorySearchRowBasic", [0, 1]],
      ["webSiteItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatus,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "NetSuite::CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Partner,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Partner"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "NetSuite::RecordRefList", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["taxFractionUnit", "NetSuite::TaxFractionUnit", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["taxRounding", "NetSuite::TaxRounding", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "NetSuite::PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "NetSuite::PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerPromoCode,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
    :schema_element => [
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerPromoCodeList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
    :schema_element => [
      ["promoCode", "NetSuite::PartnerPromoCode[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::PartnerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PartnerSearch", [0, 1]],
      ["columns", "NetSuite::PartnerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Vendor,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["payablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["balancePrimary", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrdersPrimary", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "NetSuite::VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::VendorAddressbookList", [0, 1]],
      ["currencyList", "NetSuite::VendorCurrencyList", [0, 1]],
      ["rolesList", "NetSuite::VendorRolesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPricingSchedule,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
    :schema_element => [
      ["scheduleName", "SOAP::SOAPString", [0, 1]],
      ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPricingScheduleList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
    :schema_element => [
      ["pricingSchedule", "NetSuite::VendorPricingSchedule[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::VendorAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorRoles,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorRoles"),
    :schema_element => [
      ["selectedRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorRolesList"),
    :schema_element => [
      ["roles", "NetSuite::VendorRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::VendorSearch", [0, 1]],
      ["columns", "NetSuite::VendorSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroup,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "NetSuite::EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "NetSuite::RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "NetSuite::EntityGroupType", [0, 1]],
      ["savedSearch", "NetSuite::RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "NetSuite::RecordRef", [0, 1]],
      ["isManufacturingWorkCenter", "SOAP::SOAPBoolean", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "NetSuite::EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "NetSuite::EntityGroupPeriodSize", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::EntityGroupSearch", [0, 1]],
      ["columns", "NetSuite::EntityGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::EntityGroupSearchRowBasic", [0, 1]],
      ["groupMemberJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Job,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Job"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["language", "NetSuite::RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "NetSuite::RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["jobBillingType", "NetSuite::JobBillingType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["jobItem", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "NetSuite::RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["projectExpenseType", "NetSuite::RecordRef", [0, 1]],
      ["applyProjectExpenseTypeToAll", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "NetSuite::JobResourcesList", [0, 1]],
      ["addressbookList", "NetSuite::JobAddressbookList", [0, 1]],
      ["milestonesList", "NetSuite::JobMilestonesList", [0, 1]],
      ["creditCardsList", "NetSuite::JobCreditCardsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::JobAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobResources,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobResources"),
    :schema_element => [
      ["jobResource", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobResourcesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobResourcesList"),
    :schema_element => [
      ["jobResources", "NetSuite::JobResources[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobMilestones,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobMilestones"),
    :schema_element => [
      ["milestoneName", "SOAP::SOAPString", [0, 1]],
      ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
      ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
      ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
      ["milestoneComments", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobMilestonesList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobMilestonesList"),
    :schema_element => [
      ["milestones", "NetSuite::JobMilestones[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
    :schema_element => [
      ["creditCards", "NetSuite::JobCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobSearch", [0, 1]],
      ["columns", "NetSuite::JobSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobType,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatus,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerStatusSearch", [0, 1]],
      ["columns", "NetSuite::CustomerStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerStatusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobStatusSearch", [0, 1]],
      ["columns", "NetSuite::JobStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobStatusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::JobTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::JobTypeSearch", [0, 1]],
      ["columns", "NetSuite::JobTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::JobTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OriginatingLeadSearch,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "OriginatingLeadSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OriginatingLeadSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "OriginatingLeadSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCurrencyList"),
    :schema_element => [
      ["currency", "NetSuite::CustomerCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorCurrencyList"),
    :schema_element => [
      ["vendorCurrency", "NetSuite::VendorCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCase,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "NetSuite::RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["serialNumber", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["origin", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["escalateToList", "NetSuite::SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "NetSuite::SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "NetSuite::SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmailEmployeesList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
    :schema_element => [
      ["emailEmployees", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseEscalateTo,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
    :schema_element => [
      ["escalatee", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseEscalateToList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
    :schema_element => [
      ["escalateTo", "NetSuite::SupportCaseEscalateTo[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSolutions,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
    :schema_element => [
      ["solutions", "NetSuite::SupportCaseSolutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseTimeItemList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseTimeItemList"),
    :schema_element => [
      ["timeItem", "NetSuite::TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SupportCaseSearch", [0, 1]],
      ["columns", "NetSuite::SupportCaseSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseStatus,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseType,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseOrigin,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseIssue,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCasePriority,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Solution,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Solution"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "NetSuite::SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "NetSuite::SolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionTopics,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionTopics"),
    :schema_element => [
      ["topic", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionTopicsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
    :schema_element => [
      ["topics", "NetSuite::SolutionTopics[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Solutions,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Solutions"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionsList"),
    :schema_element => [
      ["solutions", "NetSuite::Solutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["topicJoin", "NetSuite::TopicSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SolutionSearch", [0, 1]],
      ["columns", "NetSuite::SolutionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["relatedSolutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["topicJoin", "NetSuite::TopicSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Topic,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Topic"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "NetSuite::TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSolution,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSolution"),
    :schema_element => [
      ["solution", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSolutionList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSolutionList"),
    :schema_element => [
      ["solution", "NetSuite::TopicSolution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TopicSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TopicSearch", [0, 1]],
      ["columns", "NetSuite::TopicSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "TopicSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TopicSearchRowBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Issue,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Issue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "NetSuite::RecordRef", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["productTeam", "NetSuite::RecordRef", [0, 1]],
      ["source", "NetSuite::RecordRef", [0, 1]],
      ["reportedBy", "NetSuite::RecordRef", [0, 1]],
      ["reproduce", "NetSuite::RecordRef", [0, 1]],
      ["severity", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["reviewer", "NetSuite::RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "NetSuite::RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "NetSuite::RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "NetSuite::IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["emailCellsList", "NetSuite::RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["targetVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["fixedInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["relatedIssuesList", "NetSuite::IssueRelatedIssuesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueVersion,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueVersion"),
    :schema_element => [
      ["primary", "SOAP::SOAPBoolean", [0, 1]],
      ["version", "NetSuite::RecordRef", [0, 1]],
      ["build", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueVersionList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueVersionList"),
    :schema_element => [
      ["issueVersion", "NetSuite::IssueVersion[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearch,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::IssueSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::IssueSearch", [0, 1]],
      ["columns", "NetSuite::IssueSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::IssueSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueRelatedIssues,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelatedIssues"),
    :schema_element => [
      ["relationship", "NetSuite::IssueRelationship", [0, 1]],
      ["issueNumber", "NetSuite::RecordRef", [0, 1]],
      ["relationshipComment", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueRelatedIssuesList,
    :schema_type => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelatedIssuesList"),
    :schema_element => [
      ["issueRelatedIssues", "NetSuite::IssueRelatedIssues[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassTranslation,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassTranslation"),
    :schema_element => [
      ["locale", "SOAP::SOAPString", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassTranslationList"),
    :schema_element => [
      ["classTranslation", "NetSuite::ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRole,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevel,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReason,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Term,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Term"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethod,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "NetSuite::RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LeadSource,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Price,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Price"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceList"),
    :schema_element => [
      ["price", "NetSuite::Price[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Pricing,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Pricing"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPDouble", [0, 1]],
      ["priceList", "NetSuite::PriceList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingMatrix"),
    :schema_element => [
      ["pricing", "NetSuite::Pricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Rate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Rate"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RateList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RateList"),
    :schema_element => [
      ["rate", "NetSuite::Rate[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BillingRates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BillingRates"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["billingClass", "NetSuite::RecordRef", [0, 1]],
      ["rateList", "NetSuite::RateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BillingRatesMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
    :schema_element => [
      ["billingRates", "NetSuite::BillingRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Translation,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Translation"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TranslationList"),
    :schema_element => [
      ["translation", "NetSuite::Translation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOptionsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOptionsList"),
    :schema_element => [
      ["itemOptions", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemVendor,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemVendor"),
    :schema_element => [
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["vendorCode", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrency", "NetSuite::RecordRef", [0, 1]],
      ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemVendorList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemVendorList"),
    :schema_element => [
      ["itemVendor", "NetSuite::ItemVendor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategory_,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["website", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategoryList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryList"),
    :schema_element => [
      ["siteCategory", "NetSuite::SiteCategory_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProductFeedList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ProductFeedList"),
    :schema_element => [
      ["productFeed", "NetSuite::ItemProductFeed[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemMember,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMember"),
    :schema_element => [
      ["memberDescr", "SOAP::SOAPString", [0, 1]],
      ["componentYield", "SOAP::SOAPDouble", [0, 1]],
      ["bomQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["memberUnit", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["taxcode", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["taxrate", "SOAP::SOAPDouble", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["obsoleteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["effectiveRevision", "NetSuite::RecordRef", [0, 1]],
      ["obsoleteRevision", "NetSuite::RecordRef", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemMemberList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMemberList"),
    :schema_element => [
      ["itemMember", "NetSuite::ItemMember[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "NetSuite::ItemType", [0, 1]],
      ["originalItemSubtype", "NetSuite::ItemSubType", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MatrixOptionList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "MatrixOptionList"),
    :schema_element => [
      ["matrixOption", "NetSuite::SelectCustomFieldRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItemBinNumber,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
    :schema_element => [
      ["binNumber", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPString", [0, 1]],
      ["onHandAvail", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItemBinNumberList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
    :schema_element => [
      ["binNumber", "NetSuite::InventoryItemBinNumber[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::InventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PresentationItemList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PresentationItemList"),
    :schema_element => [
      ["presentationItem", "NetSuite::PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DescriptionItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DiscountItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DownloadItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DownloadItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MarkupItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubtotalItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventoryPurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventorySaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventoryResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargeResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["overheadType", "NetSuite::ItemOverheadType", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServicePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargeSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Currency,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Currency"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["locale", "NetSuite::CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "NetSuite::CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "NetSuite::CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rateRequired", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultRate", "SOAP::SOAPDouble", [0, 1]],
      ["ratesList", "NetSuite::ExpenseCategoryRatesList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Account,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Account"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "NetSuite::AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["cashFlowRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "NetSuite::RecordRef", [0, 1]],
      ["deferralAcct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["category1099misc", "NetSuite::RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::AccountTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountTranslationList"),
    :schema_element => [
      ["translation", "NetSuite::ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AccountSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AccountSearch", [0, 1]],
      ["columns", "NetSuite::AccountSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AccountSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Department,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Department"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::DepartmentSearch", [0, 1]],
      ["columns", "NetSuite::DepartmentSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DepartmentSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Classification,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Classification"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ClassificationSearch", [0, 1]],
      ["columns", "NetSuite::ClassificationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ClassificationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Location,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Location"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::LocationSearch", [0, 1]],
      ["columns", "NetSuite::LocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "NetSuite::UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeUom,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["unitName", "SOAP::SOAPString", [0, 1]],
      ["pluralName", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
      ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
      ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeUomList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
    :schema_element => [
      ["uom", "NetSuite::UnitsTypeUom[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["binOnHandJoin", "NetSuite::ItemBinNumberSearchBasic", [0, 1]],
      ["correlatedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["effectiveRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["inventoryNumberBinOnHandJoin", "NetSuite::InventoryNumberBinSearchBasic", [0, 1]],
      ["memberItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["obsoleteRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["parentJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemSearch", [0, 1]],
      ["columns", "NetSuite::ItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["binOnHandJoin", "NetSuite::ItemBinNumberSearchRowBasic", [0, 1]],
      ["correlatedItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["effectiveRevisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchRowBasic", [0, 1]],
      ["inventoryLocationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["inventoryNumberJoin", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["inventoryNumberBinOnHandJoin", "NetSuite::InventoryNumberBinSearchRowBasic", [0, 1]],
      ["memberItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["obsoleteRevisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["parentJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["preferredLocationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["preferredVendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRole,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Bin,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Bin"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::BinSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::BinSearch", [0, 1]],
      ["columns", "NetSuite::BinSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BinSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["purchaseAccount", "NetSuite::RecordRef", [0, 1]],
      ["saleAccount", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["service", "SOAP::SOAPBoolean", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "NetSuite::SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "NetSuite::RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxitem1", "NetSuite::RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "NetSuite::RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "NetSuite::TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxGroupTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
    :schema_element => [
      ["taxName", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["basis", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxGroupTaxItemList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
    :schema_element => [
      ["taxItem", "NetSuite::TaxGroupTaxItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxType,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "NetSuite::TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxTypeNexusesTax,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
    :schema_element => [
      ["nexus", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["saleTaxAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchTaxAcct", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxTypeNexusesTaxList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
    :schema_element => [
      ["nexusesTax", "NetSuite::TaxTypeNexusesTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::SerializedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "NetSuite::SerializedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["buildTime", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costingLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "NetSuite::RecordRef", [0, 1]],
      ["locationlookup", "NetSuite::RecordRef", [0, 1]],
      ["location_display", "SOAP::SOAPString", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::LotNumberedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "NetSuite::LotNumberedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["authCodesList", "NetSuite::GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateItemAuthCodes,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
    :schema_element => [
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateItemAuthCodesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
    :schema_element => [
      ["authCodes", "NetSuite::GiftCertificateItemAuthCodes[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Subsidiary,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "NetSuite::RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "NetSuite::RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "NetSuite::RecordRef", [0, 1]],
      ["caseCreationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "NetSuite::RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseEscalationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "NetSuite::Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxFiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "NetSuite::Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "NetSuite::RecordRef", [0, 1]],
      ["nexusList", "NetSuite::SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiaryNexus,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
    :schema_element => [
      ["nexusId", "NetSuite::RecordRef", [0, 1]],
      ["country", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiaryNexusList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
    :schema_element => [
      ["nexus", "NetSuite::SubsidiaryNexus[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SubsidiarySearch", [0, 1]],
      ["columns", "NetSuite::SubsidiarySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubsidiarySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::GiftCertificateSearch", [0, 1]],
      ["columns", "NetSuite::GiftCertificateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::GiftCertificateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::KitItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "KitItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceItemTaskTemplates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplates"),
    :schema_element => [
      ["taskName", "SOAP::SOAPString", [0, 1]],
      ["taskStartOffset", "SOAP::SOAPLong", [0, 1]],
      ["taskDuration", "NetSuite::Duration", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceItemTaskTemplatesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplatesList"),
    :schema_element => [
      ["taskTemplates", "NetSuite::ServiceItemTaskTemplates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::State,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "State"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriod,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriod"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendarsList", "NetSuite::AccountingPeriodFiscalCalendarsList", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "BudgetCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AccountingPeriodSearch", [0, 1]],
      ["columns", "NetSuite::AccountingPeriodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AccountingPeriodSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactCategorySearch", [0, 1]],
      ["columns", "NetSuite::ContactCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ContactRoleSearch", [0, 1]],
      ["columns", "NetSuite::ContactRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ContactRoleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerCategorySearch", [0, 1]],
      ["columns", "NetSuite::CustomerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ExpenseCategorySearch", [0, 1]],
      ["columns", "NetSuite::ExpenseCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ExpenseCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NoteTypeSearch", [0, 1]],
      ["columns", "NetSuite::NoteTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NoteTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PartnerCategorySearch", [0, 1]],
      ["columns", "NetSuite::PartnerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PartnerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PaymentMethodSearch", [0, 1]],
      ["columns", "NetSuite::PaymentMethodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PaymentMethodSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PriceLevelSearch", [0, 1]],
      ["columns", "NetSuite::PriceLevelSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevelSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PriceLevelSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SalesRoleSearch", [0, 1]],
      ["columns", "NetSuite::SalesRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SalesRoleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TermSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TermSearch", [0, 1]],
      ["columns", "NetSuite::TermSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TermSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TermSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::VendorCategorySearch", [0, 1]],
      ["columns", "NetSuite::VendorCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::VendorCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::WinLossReasonSearch", [0, 1]],
      ["columns", "NetSuite::WinLossReasonSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReasonSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::WinLossReasonSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::UnitsTypeSearch", [0, 1]],
      ["columns", "NetSuite::UnitsTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::UnitsTypeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PricingGroupSearch", [0, 1]],
      ["columns", "NetSuite::PricingGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PricingGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PricingGroupSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumber,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumber"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "NetSuite::InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberLocations,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityInTransit", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberLocationsList"),
    :schema_element => [
      ["locations", "NetSuite::InventoryNumberLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::InventoryNumberSearch", [0, 1]],
      ["columns", "NetSuite::InventoryNumberSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryNumberSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecSchedule,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecSchedule"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrence"),
    :schema_element => [
      ["incomeaccount", "NetSuite::RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceList"),
    :schema_element => [
      ["revRecScheduleRecurrence", "NetSuite::RevRecScheduleRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrence"),
    :schema_element => [
      ["incomeaccount", "NetSuite::RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrenceList"),
    :schema_element => [
      ["revRecTemplateRecurrence", "NetSuite::RevRecTemplateRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::RevRecScheduleSearch", [0, 1]],
      ["columns", "NetSuite::RevRecScheduleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::RevRecScheduleSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::RevRecTemplateSearch", [0, 1]],
      ["columns", "NetSuite::RevRecTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::RevRecTemplateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CostCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CostCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["itemCostType", "NetSuite::CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Nexus,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Nexus"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["state", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["taxAgencyPst", "NetSuite::RecordRef", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::NexusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::NexusSearch", [0, 1]],
      ["columns", "NetSuite::NexusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NexusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::NexusSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessage,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessage"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategory,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::OtherNameCategorySearch", [0, 1]],
      ["columns", "NetSuite::OtherNameCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherNameCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OtherNameCategorySearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomerMessageSearch", [0, 1]],
      ["columns", "NetSuite::CustomerMessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerMessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomerMessageSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemGroup,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["includeStartEndLines", "SOAP::SOAPBoolean", [0, 1]],
      ["isVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRate,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["baseCurrency", "NetSuite::RecordRef", [0, 1]],
      ["transactionCurrency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CurrencyRateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CurrencyRateSearch", [0, 1]],
      ["columns", "NetSuite::CurrencyRateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyRateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CurrencyRateSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevision,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevision"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["obsoleteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearch,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemRevisionSearch", [0, 1]],
      ["columns", "NetSuite::ItemRevisionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemRevisionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodFiscalCalendars,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodFiscalCalendars"),
    :schema_element => [
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodFiscalCalendarsList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountingPeriodFiscalCalendarsList"),
    :schema_element => [
      ["accountingPeriodFiscalCalendars", "NetSuite::AccountingPeriodFiscalCalendars[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxAcct,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxAcct"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexus", "NetSuite::RecordRef", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["taxAcctType", "NetSuite::TaxAcctType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategoryRates,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategoryRates"),
    :schema_element => [
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["defaultRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategoryRatesList,
    :schema_type => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategoryRatesList"),
    :schema_element => [
      ["expenseCategoryRates", "NetSuite::ExpenseCategoryRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Opportunity,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::OpportunityPartnersList", [0, 1]],
      ["itemList", "NetSuite::OpportunityItemList", [0, 1]],
      ["competitorsList", "NetSuite::OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::OpportunitySalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
    :schema_element => [
      ["item", "NetSuite::OpportunityItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityCompetitors,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
    :schema_element => [
      ["competitor", "NetSuite::RecordRef", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["strategy", "SOAP::SOAPString", [0, 1]],
      ["winner", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityCompetitorsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
    :schema_element => [
      ["competitors", "NetSuite::OpportunityCompetitors[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearch,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["estimateJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["orderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::OpportunitySearch", [0, 1]],
      ["columns", "NetSuite::OpportunitySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearchRow,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunitySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["actualJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["decisionMakerJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["estimateJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["orderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityPartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrder,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "NetSuite::TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "NetSuite::TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "NetSuite::TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["itemList", "NetSuite::SalesOrderItemList", [0, 1]],
      ["shipGroupList", "NetSuite::SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::SalesOrderSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["commitInventory", "NetSuite::SalesOrderItemCommitInventory", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["createPo", "NetSuite::SalesOrderItemCreatePo", [0, 1]],
      ["createdPo", "NetSuite::RecordRef", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["poVendor", "NetSuite::RecordRef", [0, 1]],
      ["poCurrency", "SOAP::SOAPString", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["excludeFromRateRequest", "SOAP::SOAPBoolean", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::SalesOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderPartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearch,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["accountJoin", "NetSuite::AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobMainJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["payingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["payrollItemJoin", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["revisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TransactionSearch", [0, 1]],
      ["columns", "NetSuite::TransactionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearchRow,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["accountJoin", "NetSuite::AccountSearchRowBasic", [0, 1]],
      ["accountingPeriodJoin", "NetSuite::AccountingPeriodSearchRowBasic", [0, 1]],
      ["appliedToTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["applyingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["billingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["cogsPurchaseJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["cogsSaleJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchRowBasic", [0, 1]],
      ["createdFromJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["customerMainJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["depositTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["expenseCategoryJoin", "NetSuite::ExpenseCategorySearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["fulfillingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["itemNumberJoin", "NetSuite::InventoryNumberSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["jobMainJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchRowBasic", [0, 1]],
      ["paidTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchRowBasic", [0, 1]],
      ["payingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["payrollItemJoin", "NetSuite::PayrollItemSearchRowBasic", [0, 1]],
      ["purchaseOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["requestorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["revCommittingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["revisionJoin", "NetSuite::ItemRevisionSearchRowBasic", [0, 1]],
      ["rgPostingTransactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["salesOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillment,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "NetSuite::ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeUps", "NetSuite::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "NetSuite::ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "NetSuite::ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "NetSuite::ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "NetSuite::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "NetSuite::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeFedEx", "NetSuite::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "NetSuite::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["insideDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insidePickupFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["ancillaryEndorsementFedEx", "NetSuite::ItemFulfillmentAncillaryEndorsementFedEx", [0, 1]],
      ["holdAtLocationFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["halPhoneFedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr1FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr2FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr3FedEx", "SOAP::SOAPString", [0, 1]],
      ["halCityFedEx", "SOAP::SOAPString", [0, 1]],
      ["halZipFedEx", "SOAP::SOAPString", [0, 1]],
      ["halStateFedEx", "SOAP::SOAPString", [0, 1]],
      ["halCountryFedEx", "SOAP::SOAPString", [0, 1]],
      ["hazmatTypeFedEx", "NetSuite::ItemFulfillmentHazmatTypeFedEx", [0, 1]],
      ["accessibilityTypeFedEx", "NetSuite::ItemFulfillmentAccessibilityTypeFedEx", [0, 1]],
      ["isCargoAircraftOnlyFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["packageList", "NetSuite::ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "NetSuite::ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "NetSuite::ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "NetSuite::ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "NetSuite::ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "NetSuite::ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
    :schema_element => [
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["createPo", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["poNum", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
    :schema_element => [
      ["item", "NetSuite::ItemFulfillmentItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackage,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
    :schema_element => [
      ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescr", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
    :schema_element => [
      ["package", "NetSuite::ItemFulfillmentPackage[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUps,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
    :schema_element => [
      ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
      ["packagingUps", "NetSuite::ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
      ["useInsuredValueUps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Ups", "SOAP::SOAPString", [0, 1]],
      ["reference2Ups", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
      ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
      ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodUps", "NetSuite::ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
      ["deliveryConfUps", "NetSuite::ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
    :schema_element => [
      ["packageUps", "NetSuite::ItemFulfillmentPackageUps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUsps,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUsps"),
    :schema_element => [
      ["packageWeightUsps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUsps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUsps", "SOAP::SOAPString", [0, 1]],
      ["packagingUsps", "NetSuite::ItemFulfillmentPackageUspsPackagingUsps", [0, 1]],
      ["useInsuredValueUsps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUsps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Usps", "SOAP::SOAPString", [0, 1]],
      ["reference2Usps", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUsps", "SOAP::SOAPLong", [0, 1]],
      ["deliveryConfUsps", "NetSuite::ItemFulfillmentPackageUspsDeliveryConfUsps", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsList"),
    :schema_element => [
      ["packageUsps", "NetSuite::ItemFulfillmentPackageUsps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedEx,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
    :schema_element => [
      ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["dryIceWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
      ["packagingFedEx", "NetSuite::ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
      ["admPackageTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
      ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["isAlcoholFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["isNonHazLithiumFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
      ["priorityAlertTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExPriorityAlertTypeFedEx", [0, 1]],
      ["priorityAlertContentFedEx", "SOAP::SOAPString", [0, 1]],
      ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
      ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodFedEx", "NetSuite::ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
      ["codFreightTypeFedEx", "NetSuite::ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
      ["deliveryConfFedEx", "NetSuite::ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
      ["signatureOptionsFedEx", "NetSuite::ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
      ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
      ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
    :schema_element => [
      ["packageFedEx", "NetSuite::ItemFulfillmentPackageFedEx[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Invoice,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::InvoicePartnersList", [0, 1]],
      ["itemList", "NetSuite::InvoiceItemList", [0, 1]],
      ["itemCostList", "NetSuite::InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::InvoiceExpCostList", [0, 1]],
      ["timeList", "NetSuite::InvoiceTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::InvoiceSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
    :schema_element => [
      ["item", "NetSuite::InvoiceItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceItemCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceItemCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
    :schema_element => [
      ["itemCost", "NetSuite::InvoiceItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceExpCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceExpCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
    :schema_element => [
      ["expCost", "NetSuite::InvoiceExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceTime,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceTimeList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
    :schema_element => [
      ["time", "NetSuite::InvoiceTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoicePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoicePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InvoiceShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "InvoiceShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSale,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashSalePartnersList", [0, 1]],
      ["itemList", "NetSuite::CashSaleItemList", [0, 1]],
      ["itemCostList", "NetSuite::CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::CashSaleExpCostList", [0, 1]],
      ["timeList", "NetSuite::CashSaleTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CashSaleSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
    :schema_element => [
      ["item", "NetSuite::CashSaleItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleItemCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleItemCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
    :schema_element => [
      ["itemCost", "NetSuite::CashSaleItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleExpCost,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleExpCostList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
    :schema_element => [
      ["expCost", "NetSuite::CashSaleExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleTime,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleTimeList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
    :schema_element => [
      ["time", "NetSuite::CashSaleTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSalePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSalePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSaleShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSaleShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Estimate,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::EstimateItemList", [0, 1]],
      ["salesTeamList", "NetSuite::EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "NetSuite::EstimatePartnersList", [0, 1]],
      ["shipGroupList", "NetSuite::EstimateShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimateItem,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "NetSuite::RecordRef", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimateItemList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
    :schema_element => [
      ["item", "NetSuite::EstimateItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimateSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimateSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::EstimateSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimatePartnersList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimatePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EstimateShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "EstimateShipGroupList"),
    :schema_element => [
      ["shipGroup", "NetSuite::TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertRedemption,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
    :schema_element => [
      ["authCode", "NetSuite::RecordRef", [0, 1]],
      ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
      ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertRedemptionList,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
    :schema_element => [
      ["giftCertRedemption", "NetSuite::GiftCertRedemption[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionShipGroup,
    :schema_type => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionShipGroup"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["isFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["sourceAddressRef", "NetSuite::RecordRef", [0, 1]],
      ["sourceAddress", "SOAP::SOAPString", [0, 1]],
      ["destinationAddressRef", "NetSuite::RecordRef", [0, 1]],
      ["destinationAddress", "SOAP::SOAPString", [0, 1]],
      ["shippingMethodRef", "NetSuite::RecordRef", [0, 1]],
      ["shippingMethod", "SOAP::SOAPString", [0, 1]],
      ["isHandlingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingRate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["isShippingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingRate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Amt", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchLandedCostList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchLandedCostList"),
    :schema_element => [
      ["landedCost", "NetSuite::LandedCostSummary[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBill,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::VendorBillExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorBillItemList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]],
      ["purchaseOrderList", "NetSuite::RecordRefList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBillExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
    :schema_element => [
      ["orderDoc", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBillExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorBillExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBillItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderDoc", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["landedCostCategory", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["billreceiptsList", "NetSuite::RecordRefList", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBillItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorBillItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrder,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["shipTo", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "NetSuite::PurchaseOrderItemList", [0, 1]],
      ["expenseList", "NetSuite::PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrderExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrderExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::PurchaseOrderExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrderItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["landedCostCategory", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrderItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::PurchaseOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceipt,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ItemReceiptItemList", [0, 1]],
      ["expenseList", "NetSuite::ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceiptItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
    :schema_element => [
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitCostOverride", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["restock", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "NetSuite::TransactionBillVarianceStatus", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceiptItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
    :schema_element => [
      ["item", "NetSuite::ItemReceiptItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceiptExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
    :schema_element => [
      ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["account", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceiptExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::ItemReceiptExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPayment,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::VendorPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPaymentApply,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPaymentApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
    :schema_element => [
      ["apply", "NetSuite::VendorPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPaymentCredit,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPaymentCreditList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
    :schema_element => [
      ["credit", "NetSuite::VendorPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCredit,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCredit"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::VendorCreditExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorCreditItemList", [0, 1]],
      ["applyList", "NetSuite::VendorCreditApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorCreditExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbersList", "NetSuite::RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorCreditItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditApply,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCreditApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorCreditApplyList"),
    :schema_element => [
      ["apply", "NetSuite::VendorCreditApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorization,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["expenseList", "NetSuite::VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationExpense,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::VendorReturnAuthorizationExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbersList", "NetSuite::RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "NetSuite::VendorReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefund,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::CashRefundItemList", [0, 1]],
      ["salesTeamList", "NetSuite::CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashRefundPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefundItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPString", [0, 1]],
      ["taxRate2", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefundItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
    :schema_element => [
      ["item", "NetSuite::CashRefundItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefundSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefundSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CashRefundSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefundPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefundPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPayment,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::CustomerPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::CustomerPaymentCreditList", [0, 1]],
      ["depositList", "NetSuite::CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CustomerPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentCredit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentCreditList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
    :schema_element => [
      ["credit", "NetSuite::CustomerPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPaymentDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
    :schema_element => [
      ["deposit", "NetSuite::CustomerPaymentDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorization,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "NetSuite::ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "NetSuite::ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "NetSuite::ReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::ReturnAuthorizationSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemo,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "NetSuite::CreditMemoItemList", [0, 1]],
      ["partnersList", "NetSuite::CreditMemoPartnersList", [0, 1]],
      ["applyList", "NetSuite::CreditMemoApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
    :schema_element => [
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CreditMemoSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoItem,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
    :schema_element => [
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["chargesList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoItemList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
    :schema_element => [
      ["item", "NetSuite::CreditMemoItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CreditMemoApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemoPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemoPartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefund,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerRefundApplyList", [0, 1]],
      ["depositList", "NetSuite::CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefundApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefundApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
    :schema_element => [
      ["apply", "NetSuite::CustomerRefundApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefundDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefundDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
    :schema_element => [
      ["customerRefundDeposit", "NetSuite::CustomerRefundDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDepositApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDepositApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDepositApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDepositApplyList"),
    :schema_element => [
      ["customerDepositApply", "NetSuite::CustomerDepositApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepositApplication,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["deposit", "NetSuite::RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepositApplicationApply,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DepositApplicationApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
    :schema_element => [
      ["apply", "NetSuite::DepositApplicationApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Charge,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "Charge"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["billTo", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::ChargeStage", [0, 1]],
      ["chargeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["use", "NetSuite::ChargeUse", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["projectTask", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timeRecord", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["billingItem", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["salesOrderLine", "NetSuite::RecordRef", [0, 1]],
      ["invoice", "NetSuite::RecordRef", [0, 1]],
      ["invoiceLine", "NetSuite::RecordRef", [0, 1]],
      ["runId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearch,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ChargeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ChargeSearch", [0, 1]],
      ["columns", "NetSuite::ChargeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearchRow,
    :schema_type => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ChargeSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Budget,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "Budget"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["budgetType", "NetSuite::BudgetBudgetType", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearch,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::BudgetSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearchAdvanced,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::BudgetSearch", [0, 1]],
      ["columns", "NetSuite::BudgetSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearchRow,
    :schema_type => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::BudgetSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckLandedCostList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckLandedCostList"),
    :schema_element => [
      ["landedCost", "NetSuite::LandedCostSummary[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Check,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::CheckExpenseList", [0, 1]],
      ["itemList", "NetSuite::CheckItemList", [0, 1]],
      ["landedCostsList", "NetSuite::CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckExpense,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckExpenseList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::CheckExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckItem,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["landedCost", "NetSuite::LandedCost", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckItemList,
    :schema_type => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "CheckItemList"),
    :schema_element => [
      ["item", "NetSuite::CheckItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAdjustment,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "NetSuite::InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAdjustmentInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["currentValue", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAdjustmentInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::InventoryAdjustmentInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyBuild,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyBuild"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyUnbuild,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyUnbuild"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["componentNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "AssemblyComponentList"),
    :schema_element => [
      ["component", "NetSuite::AssemblyComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::TransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["commitInventory", "NetSuite::TransferOrderItemCommitInventory", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::TransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyTransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyTransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["commitInventory", "NetSuite::TransferOrderItemCommitInventory", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyTransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::InterCompanyTransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrder,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["assemblyItem", "NetSuite::RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "NetSuite::WorkOrderItemList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::SalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::PartnersList", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItem"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["componentYield", "SOAP::SOAPDouble", [0, 1]],
      ["bomQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["orderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["poVendor", "NetSuite::RecordRef", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["commit", "NetSuite::WorkOrderItemItemCommitInventory", [0, 1]],
      ["createPo", "NetSuite::WorkOrderItemItemCreatePo", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemList"),
    :schema_element => [
      ["item", "NetSuite::WorkOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesTeamList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "SalesTeamList"),
    :schema_element => [
      ["salesTeam", "NetSuite::CustomerSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnersList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "PartnersList"),
    :schema_element => [
      ["partners", "NetSuite::Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryTransfer,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["fromBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["toBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryTransferInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::InventoryTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinTransfer,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::BinTransferInventoryList", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["fromBins", "SOAP::SOAPString", [0, 1]],
      ["toBins", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BinTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinTransferInventoryList"),
    :schema_element => [
      ["inventory", "NetSuite::BinTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinWorksheet,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheet"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["itemList", "NetSuite::BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinWorksheetItem,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheetItem"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemOnHand", "SOAP::SOAPString", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["itemBins", "SOAP::SOAPString", [0, 1]],
      ["itemBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["itemBinList", "SOAP::SOAPString", [0, 1]],
      ["itemPreferBin", "SOAP::SOAPString", [0, 1]],
      ["itemBlank", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BinWorksheetItemList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "BinWorksheetItemList"),
    :schema_element => [
      ["item", "NetSuite::BinWorksheetItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderIssue,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderIssueComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderIssueComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssueComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderIssueComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderIssueComponentList"),
    :schema_element => [
      ["workOrderIssueComponent", "NetSuite::WorkOrderIssueComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletion,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletion"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["isBackflush", "SOAP::SOAPBoolean", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["startOperation", "NetSuite::RecordRef", [0, 1]],
      ["endOperation", "NetSuite::RecordRef", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderCompletionComponentList", [0, 1]],
      ["operationList", "NetSuite::WorkOrderCompletionOperationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletionComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionComponent"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantityPer", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["lineNumber", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletionComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionComponentList"),
    :schema_element => [
      ["workOrderCompletionComponent", "NetSuite::WorkOrderCompletionComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderClose,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderClose"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletionOperation,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionOperation"),
    :schema_element => [
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["operationName", "SOAP::SOAPString", [0, 1]],
      ["workCenter", "SOAP::SOAPString", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["inputQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["predecessorCompletedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["recordSetup", "SOAP::SOAPBoolean", [0, 1]],
      ["machineSetupTime", "SOAP::SOAPDouble", [0, 1]],
      ["laborSetupTime", "SOAP::SOAPDouble", [0, 1]],
      ["machineRunTime", "SOAP::SOAPDouble", [0, 1]],
      ["laborRunTime", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletionOperationList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderCompletionOperationList"),
    :schema_element => [
      ["workOrderCompletionOperation", "NetSuite::WorkOrderCompletionOperation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryCostRevaluation,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluation"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryValue", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["costComponentList", "NetSuite::InventoryCostRevaluationCostComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryCostRevaluationCostComponent,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluationCostComponent"),
    :schema_element => [
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["componentItem", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryCostRevaluationCostComponentList,
    :schema_type => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryCostRevaluationCostComponentList"),
    :schema_element => [
      ["costComponent", "NetSuite::InventoryCostRevaluationCostComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["lineList", "NetSuite::JournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
    :schema_element => [
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["scheduleNum", "NetSuite::RecordRef", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
    :schema_element => [
      ["line", "NetSuite::JournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyJournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "NetSuite::InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyJournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
    :schema_element => [
      ["lineSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["schedule", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationSched", "NetSuite::RecordRef", [0, 1]],
      ["scheduleNum", "NetSuite::RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyJournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
    :schema_element => [
      ["line", "NetSuite::InterCompanyJournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecord,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTranslationsList", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["ownerJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomRecordSearch", [0, 1]],
      ["columns", "NetSuite::CustomRecordSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomRecordSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["ownerJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "NetSuite::CustomListCustomValueList", [0, 1]],
      ["translationsList", "NetSuite::CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListCustomValue,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
    :schema_element => [
      ["value", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["valueId", "SOAP::SOAPLong", [0, 1]],
      ["valueLanguageValueList", "NetSuite::LanguageValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListCustomValueList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
    :schema_element => [
      ["customValue", "NetSuite::CustomListCustomValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomListTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordType,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "NetSuite::CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["enableDle", "SOAP::SOAPBoolean", [0, 1]],
      ["enableNameTranslation", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "NetSuite::CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "NetSuite::CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "NetSuite::CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "NetSuite::CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "NetSuite::CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "NetSuite::CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "NetSuite::CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "NetSuite::CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "NetSuite::CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTypeTranslationsList", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeFieldList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
    :schema_element => [
      ["customField", "NetSuite::CustomRecordCustomField[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeTabs,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
    :schema_element => [
      ["tabTitle", "SOAP::SOAPString", [0, 1]],
      ["tabParent", "NetSuite::RecordRef", [0, 1]],
      ["tabTitleLanguageValueList", "NetSuite::LanguageValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeTabsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
    :schema_element => [
      ["tabs", "NetSuite::CustomRecordTypeTabs[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeForms,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
    :schema_element => [
      ["formEdit", "SOAP::SOAPString", [0, 1]],
      ["formName", "SOAP::SOAPString", [0, 1]],
      ["formPref", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
    :schema_element => [
      ["forms", "NetSuite::CustomRecordTypeForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeOnlineForms,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
    :schema_element => [
      ["onlineFormName", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPString", [0, 1]],
      ["templateName", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeOnlineFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
    :schema_element => [
      ["onlineForms", "NetSuite::CustomRecordTypeOnlineForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypePermissions,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
    :schema_element => [
      ["permittedRole", "NetSuite::RecordRef", [0, 1]],
      ["permittedLevel", "NetSuite::CustomRecordTypePermissionsPermittedLevel", [0, 1]],
      ["restriction", "NetSuite::CustomRecordTypePermissionsRestriction", [0, 1]],
      ["defaultForm", "NetSuite::RecordRef", [0, 1]],
      ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
      ["searchForm", "NetSuite::RecordRef", [0, 1]],
      ["searchResults", "NetSuite::RecordRef", [0, 1]],
      ["listView", "NetSuite::RecordRef", [0, 1]],
      ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
      ["dashboardView", "NetSuite::RecordRef", [0, 1]],
      ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
      ["sublistView", "NetSuite::RecordRef", [0, 1]],
      ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
    :schema_element => [
      ["permissions", "NetSuite::CustomRecordTypePermissions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeLinks,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
    :schema_element => [
      ["linkCenter", "NetSuite::RecordRef", [0, 1]],
      ["linkSection", "NetSuite::RecordRef", [0, 1]],
      ["linkLabel", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeLinksList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
    :schema_element => [
      ["links", "NetSuite::CustomRecordTypeLinks[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeManagers,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
    :schema_element => [
      ["managerEmp", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeManagersList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
    :schema_element => [
      ["managers", "NetSuite::CustomRecordTypeManagers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeChildren,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]],
      ["childTab", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeChildrenList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
    :schema_element => [
      ["children", "NetSuite::CustomRecordTypeChildren[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeParents,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeParentsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
    :schema_element => [
      ["parents", "NetSuite::CustomRecordTypeParents[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomRecordTypeTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeSublists,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeSublists"),
    :schema_element => [
      ["recordSearch", "NetSuite::RecordRef", [0, 1]],
      ["recordDescr", "SOAP::SOAPString", [0, 1]],
      ["recordDescrLanguageValueList", "NetSuite::LanguageValueList", [0, 1]],
      ["recordTab", "NetSuite::RecordRef", [0, 1]],
      ["recordId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeSublistsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeSublistsList"),
    :schema_element => [
      ["sublists", "NetSuite::CustomRecordTypeSublists[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::EntityCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::FldFilterSelList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "FldFilterSelList"),
    :schema_element => [
      ["fldFilterSel", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CrmCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToMfgProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CrmCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CrmCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::CrmCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["filterList", "NetSuite::OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::OtherCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "NetSuite::ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "NetSuite::ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionBodyCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionBodyCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionBodyCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::TransactionBodyCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionColumnCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionColumnCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionColumnCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::TransactionColumnCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOptionCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemsList"),
    :schema_element => [
      ["items", "NetSuite::RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOptionCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOptionCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemOptionCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourcefilterby", "NetSuite::RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "NetSuite::FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::CustomRecordCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldRoleAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldRoleAccess"),
    :schema_element => [
      ["role", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldRoleAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldRoleAccessList"),
    :schema_element => [
      ["roleAccess", "NetSuite::CustomFieldRoleAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldDepartmentAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccess"),
    :schema_element => [
      ["dept", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldDepartmentAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccessList"),
    :schema_element => [
      ["deptAccess", "NetSuite::CustomFieldDepartmentAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldSubAccess,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldSubAccess"),
    :schema_element => [
      ["sub", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldSubAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldSubAccessList"),
    :schema_element => [
      ["subAccess", "NetSuite::CustomFieldSubAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LanguageValue,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "LanguageValue"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["value", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LanguageValueList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "LanguageValueList"),
    :schema_element => [
      ["languageValue", "NetSuite::LanguageValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomFieldTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldTranslationsList"),
    :schema_element => [
      ["translations", "NetSuite::CustomFieldTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemNumberCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomField"),
    :schema_basetype => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomFieldType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["filterList", "NetSuite::ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemNumberCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "NetSuite::RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "NetSuite::CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldfilterNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldCompareField", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemNumberCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilterList"),
    :schema_element => [
      ["filter", "NetSuite::ItemNumberCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CustomListSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CustomListSearch", [0, 1]],
      ["columns", "NetSuite::CustomListSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomListSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CustomListSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinition,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinition"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "NetSuite::AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionPackages,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionPackages"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionPackagesList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionPackagesList"),
    :schema_element => [
      ["packages", "NetSuite::AppDefinitionPackages[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AppDefinitionSearch", [0, 1]],
      ["columns", "NetSuite::AppDefinitionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppDefinitionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AppDefinitionSearchRowBasic", [0, 1]],
      ["appPackageJoin", "NetSuite::AppPackageSearchRowBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackage,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackage"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "NetSuite::RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "NetSuite::RecordRef", [0, 1]],
      ["bundle", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearch,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::AppPackageSearch", [0, 1]],
      ["columns", "NetSuite::AppPackageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "AppPackageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::AppPackageSearchRowBasic", [0, 1]],
      ["appDefinitionJoin", "NetSuite::AppDefinitionSearchRowBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["packageFileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTranslations"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTranslationsList"),
    :schema_element => [
      ["customRecordTranslations", "NetSuite::CustomRecordTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Employee,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "Employee"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingClass", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["payFrequency", "NetSuite::EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["useTimeData", "NetSuite::EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["approver", "NetSuite::RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "NetSuite::RecordRef", [0, 1]],
      ["employeeType", "NetSuite::RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "NetSuite::RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "NetSuite::RecordRef", [0, 1]],
      ["ethnicity", "NetSuite::RecordRef", [0, 1]],
      ["gender", "NetSuite::Gender", [0, 1]],
      ["purchaseOrderApprover", "NetSuite::RecordRef", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "NetSuite::EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "NetSuite::EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::EmployeeAddressbookList", [0, 1]],
      ["rolesList", "NetSuite::EmployeeRolesList", [0, 1]],
      ["hrEducationList", "NetSuite::EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "NetSuite::EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "NetSuite::EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "NetSuite::EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "NetSuite::EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "NetSuite::EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "NetSuite::EmployeeDeductionList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSubscriptions,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPString", [0, 1]],
      ["subscription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSubscriptionsList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
    :schema_element => [
      ["subscriptions", "NetSuite::EmployeeSubscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeAddressbook,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeAddressbookList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
    :schema_element => [
      ["addressbook", "NetSuite::EmployeeAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeRoles,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeRoles"),
    :schema_element => [
      ["selectedRole", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeRolesList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
    :schema_element => [
      ["roles", "NetSuite::EmployeeRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::EmployeeSearch", [0, 1]],
      ["columns", "NetSuite::EmployeeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchRowBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeEmergencyContact,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEmergencyContact"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["contact", "SOAP::SOAPString", [0, 1]],
      ["relationship", "SOAP::SOAPString", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeEmergencyContactList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEmergencyContactList"),
    :schema_element => [
      ["employeeEmergencyContact", "NetSuite::EmployeeEmergencyContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeHrEducation,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeHrEducation"),
    :schema_element => [
      ["education", "NetSuite::RecordRef", [0, 1]],
      ["degree", "SOAP::SOAPString", [0, 1]],
      ["degreeDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeHrEducationList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeHrEducationList"),
    :schema_element => [
      ["employeeHrEducation", "NetSuite::EmployeeHrEducation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeAccruedTime,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTime"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["accruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["accrualRate", "SOAP::SOAPDouble", [0, 1]],
      ["monetaryRate", "SOAP::SOAPDouble", [0, 1]],
      ["resetAccruedHoursAtYearEnd", "SOAP::SOAPBoolean", [0, 1]],
      ["accrualMethod", "NetSuite::EmployeeAccruedTimeAccrualMethod", [0, 1]],
      ["maximumAccruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeAccruedTimeList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeList"),
    :schema_element => [
      ["employeeAccruedTime", "NetSuite::EmployeeAccruedTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDeduction"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDeductionList"),
    :schema_element => [
      ["employeeDeduction", "NetSuite::EmployeeDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCompanyContribution"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCompanyContributionList"),
    :schema_element => [
      ["employeeCompanyContribution", "NetSuite::EmployeeCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeEarning,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEarning"),
    :schema_element => [
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["payRate", "SOAP::SOAPString", [0, 1]],
      ["primaryEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeEarningList"),
    :schema_element => [
      ["employeeEarning", "NetSuite::EmployeeEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeDirectDeposit,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDeposit"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["netAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["savingsAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["accountPrenoted", "SOAP::SOAPBoolean", [0, 1]],
      ["accountStatus", "NetSuite::EmployeeDirectDepositAccountStatus", [0, 1]],
      ["bankName", "SOAP::SOAPString", [0, 1]],
      ["bankId", "SOAP::SOAPString", [0, 1]],
      ["bankNumber", "SOAP::SOAPString", [0, 1]],
      ["bankRoutingNumber", "SOAP::SOAPString", [0, 1]],
      ["bankAccountNumber", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeDirectDepositList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDepositList"),
    :schema_element => [
      ["employeeDirectDeposit", "NetSuite::EmployeeDirectDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItem,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItem"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["itemType", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["employeePaid", "SOAP::SOAPBoolean", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PayrollItemSearch", [0, 1]],
      ["columns", "NetSuite::PayrollItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PayrollItemSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategory,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "NetSuite::RecordRef", [0, 1]],
      ["categoryListLayout", "NetSuite::RecordRef", [0, 1]],
      ["itemListLayout", "NetSuite::RecordRef", [0, 1]],
      ["relatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["correlatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "NetSuite::SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "NetSuite::SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategoryTranslation,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryTranslation"),
    :schema_element => [
      ["locale", "NetSuite::Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategoryTranslationList,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryTranslationList"),
    :schema_element => [
      ["translation", "NetSuite::SiteCategoryTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategoryPresentationItemList,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
    :schema_element => [
      ["presentationItem", "NetSuite::PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearch,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::SiteCategorySearch", [0, 1]],
      ["columns", "NetSuite::SiteCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearchRow,
    :schema_type => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::SiteCategorySearchRowBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBill,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["caseTaskEvent", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["hours", "NetSuite::Duration", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["timeType", "NetSuite::TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearch,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::TimeBillSearch", [0, 1]],
      ["columns", "NetSuite::TimeBillSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::TimeBillSearchRowBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchRowBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchRowBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchRowBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchRowBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseReport,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReport"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseReportExpense,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReportExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["expenseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["foreignAmount", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["expMediaItem", "NetSuite::RecordRef", [0, 1]],
      ["isNonReimbursable", "SOAP::SOAPBoolean", [0, 1]],
      ["receipt", "SOAP::SOAPBoolean", [0, 1]],
      ["refNumber", "SOAP::SOAPLong", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseReportExpenseList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "ExpenseReportExpenseList"),
    :schema_element => [
      ["expense", "NetSuite::ExpenseReportExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournal,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournal"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["companyContributionList", "NetSuite::PaycheckJournalCompanyContributionList", [0, 1]],
      ["deductionList", "NetSuite::PaycheckJournalDeductionList", [0, 1]],
      ["employeeTaxList", "NetSuite::PaycheckJournalEmployeeTaxList", [0, 1]],
      ["companyTaxList", "NetSuite::PaycheckJournalCompanyTaxList", [0, 1]],
      ["earningList", "NetSuite::PaycheckJournalEarningList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyTax,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyTax"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyTaxList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyTaxList"),
    :schema_element => [
      ["paycheckJournalCompanyTax", "NetSuite::PaycheckJournalCompanyTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalDeduction"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalDeductionList"),
    :schema_element => [
      ["paycheckJournalDeduction", "NetSuite::PaycheckJournalDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyContribution"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalCompanyContributionList"),
    :schema_element => [
      ["paycheckJournalCompanyContribution", "NetSuite::PaycheckJournalCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalEarning,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEarning"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["hours", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEarningList"),
    :schema_element => [
      ["paycheckJournalEarning", "NetSuite::PaycheckJournalEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalEmployeeTax,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEmployeeTax"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournalEmployeeTaxList,
    :schema_type => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "PaycheckJournalEmployeeTaxList"),
    :schema_element => [
      ["paycheckJournalEmployeeTax", "NetSuite::PaycheckJournalEmployeeTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Campaign,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "NetSuite::RecordRef", [0, 1]],
      ["audience", "NetSuite::RecordRef", [0, 1]],
      ["offer", "NetSuite::RecordRef", [0, 1]],
      ["promotionCode", "NetSuite::RecordRef", [0, 1]],
      ["itemList", "NetSuite::RecordRefList", [0, 1]],
      ["family", "NetSuite::RecordRef", [0, 1]],
      ["searchEngine", "NetSuite::RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "NetSuite::CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "NetSuite::CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "NetSuite::CampaignEventList", [0, 1]],
      ["eventResponseList", "NetSuite::CampaignEventResponseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEmail,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEmail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignEmailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEmailList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEmailList"),
    :schema_element => [
      ["campaignEmail", "NetSuite::CampaignEmail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignDirectMail,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignDirectMailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignDirectMailList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
    :schema_element => [
      ["campaignDirectMail", "NetSuite::CampaignDirectMail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEvent,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEvent"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "NetSuite::RecordRef", [0, 1]],
      ["channel", "NetSuite::RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "NetSuite::CampaignCampaignEventStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEventList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventList"),
    :schema_element => [
      ["campaignEvent", "NetSuite::CampaignEvent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEventResponse,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["sent", "SOAP::SOAPDouble", [0, 1]],
      ["opened", "SOAP::SOAPDouble", [0, 1]],
      ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThru", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThruRatio", "SOAP::SOAPDouble", [0, 1]],
      ["responded", "SOAP::SOAPLong", [0, 1]],
      ["respondedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["unsubscribed", "SOAP::SOAPLong", [0, 1]],
      ["unsubscribedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["bounced", "SOAP::SOAPLong", [0, 1]],
      ["bouncedRatio", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignEventResponseList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
    :schema_element => [
      ["eventResponse", "NetSuite::CampaignEventResponse[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CampaignSearch", [0, 1]],
      ["columns", "NetSuite::CampaignSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CampaignSearchRowBasic", [0, 1]],
      ["campaignRecipientJoin", "NetSuite::EntitySearchRowBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchRowBasic", [0, 1]],
      ["promotionCodeJoin", "NetSuite::PromotionCodeSearchRowBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCategory,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignAudience,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignFamily,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchEngine,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignChannel,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "NetSuite::CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignOffer,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponse,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["campaignEvent", "NetSuite::RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "NetSuite::CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "NetSuite::CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponseResponses,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
    :schema_element => [
      ["response", "SOAP::SOAPString", [0, 1]],
      ["responseDate", "SOAP::SOAPString", [0, 1]],
      ["author", "SOAP::SOAPString", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponseResponsesList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
    :schema_element => [
      ["responses", "NetSuite::CampaignResponseResponses[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignVertical,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSubscription,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCode,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCode"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["useType", "NetSuite::PromotionCodeUseType", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["codePattern", "SOAP::SOAPString", [0, 1]],
      ["numberToGenerate", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "NetSuite::PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "NetSuite::PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["itemsList", "NetSuite::PromotionCodeItemsList", [0, 1]],
      ["partnersList", "NetSuite::PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodePartners,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodePartners"),
    :schema_element => [
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodePartnersList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodePartnersList"),
    :schema_element => [
      ["partners", "NetSuite::PromotionCodePartners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeItems,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeItems"),
    :schema_element => [
      ["item", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeItemsList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeItemsList"),
    :schema_element => [
      ["items", "NetSuite::PromotionCodeItems[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::PromotionCodeSearch", [0, 1]],
      ["columns", "NetSuite::PromotionCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::PromotionCodeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeCurrency,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeCurrency"),
    :schema_element => [
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeCurrencyList,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeCurrencyList"),
    :schema_element => [
      ["currency", "NetSuite::PromotionCodeCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCode,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCode"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["promotion", "NetSuite::RecordRef"],
      ["code", "SOAP::SOAPString"],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]],
      ["useCount", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::CouponCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::CouponCodeSearch", [0, 1]],
      ["columns", "NetSuite::CouponCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CouponCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::CouponCodeSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "NetSuite::DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "NetSuite::DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "NetSuite::DemandPlanMatrix", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlan"),
    :schema_element => [
      ["startDate", "SOAP::SOAPDateTime"],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["periodDemandPlanList", "NetSuite::PeriodDemandPlanList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DemandPlanMatrix,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanMatrix"),
    :schema_element => [
      ["demandPlan", "NetSuite::DemandPlan[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PeriodDemandPlanList,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "PeriodDemandPlanList"),
    :schema_element => [
      ["periodDemandPlan", "NetSuite::PeriodDemandPlan[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PeriodDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "PeriodDemandPlan"),
    :schema_element => [
      ["quantity", "SOAP::SOAPDouble"],
      ["dayOfTheWeek", "NetSuite::DayOfTheWeek", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchAdvanced,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemDemandPlanSearch", [0, 1]],
      ["columns", "NetSuite::ItemDemandPlanSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemDemandPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["orderList", "NetSuite::ItemSupplyPlanOrderList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrder,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrder"),
    :schema_element => [
      ["orderLineId", "SOAP::SOAPLong", [0, 1]],
      ["orderDate", "SOAP::SOAPDateTime", [0, 1]],
      ["receiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["orderCreated", "SOAP::SOAPBoolean", [0, 1]],
      ["orderType", "NetSuite::ItemSupplyPlanOrderType", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrderList,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrderList"),
    :schema_element => [
      ["itemSupplyPlanOrder", "NetSuite::ItemSupplyPlanOrder[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ItemSupplyPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchAdvanced,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ItemSupplyPlanSearch", [0, 1]],
      ["columns", "NetSuite::ItemSupplyPlanSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ItemSupplyPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplate,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostDetail,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostDetail"),
    :schema_element => [
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["fixedRate", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostDetailList,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostDetailList"),
    :schema_element => [
      ["manufacturingCostDetail", "NetSuite::ManufacturingCostDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingCostTemplateSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingCostTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingCostTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingCostTemplateSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRouting,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRouting"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["locationList", "NetSuite::RecordRefList", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["routingStepList", "NetSuite::ManufacturingRoutingRoutingStepList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingRoutingStep,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingRoutingStep"),
    :schema_element => [
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["operationName", "SOAP::SOAPString", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::RecordRef", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["setupTime", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingRoutingStepList,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingRoutingStepList"),
    :schema_element => [
      ["manufacturingRoutingRoutingStep", "NetSuite::ManufacturingRoutingRoutingStep[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingRoutingSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["manufacturingCostTemplateJoin", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["manufacturingWorkCenterJoin", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingRoutingSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingRoutingSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingRoutingSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingRoutingSearchRowBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchRowBasic", [0, 1]],
      ["manufacturingCostTemplateJoin", "NetSuite::ManufacturingCostTemplateSearchRowBasic", [0, 1]],
      ["manufacturingWorkCenterJoin", "NetSuite::EntityGroupSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTask,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTask"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["workOrder", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::ManufacturingOperationTaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["inputQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["setupTime", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearch,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["workOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NetSuite::ManufacturingOperationTaskSearch", [0, 1]],
      ["columns", "NetSuite::ManufacturingOperationTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearchRow,
    :schema_type => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingOperationTaskSearchRowBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ManufacturingOperationTaskSearchRowBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchRowBasic", [0, 1]],
      ["workOrderJoin", "NetSuite::TransactionSearchRowBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchRowBasic[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "RecordType")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchRecordType")
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetAllRecordType")
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetCustomizationType")
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeRefType")
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeAuxRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "InitializeAuxRefType")
  )

  LiteralRegistry.register(
    :class => NetSuite::DeletedRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "DeletedRecordType")
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusType,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "AsyncStatusType")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchStringFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchLongFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchTextNumberFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDoubleFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDateFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchEnumMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchDate,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "SearchDate")
  )

  LiteralRegistry.register(
    :class => NetSuite::DurationUnit,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "DurationUnit")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventAttendeeResponse,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueFilterOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2013_2PlatformWebservicesNetsuiteCom, "GetSelectValueFilterOperator")
  )

  LiteralRegistry.register(
    :class => NetSuite::StatusDetailType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "StatusDetailType")
  )

  LiteralRegistry.register(
    :class => NetSuite::StatusDetailCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::FaultCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2013_2PlatformWebservicesNetsuiteCom, "FaultCodeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::Country,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Country")
  )

  LiteralRegistry.register(
    :class => NetSuite::Language,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Language")
  )

  LiteralRegistry.register(
    :class => NetSuite::AvsMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "AvsMatchCode")
  )

  LiteralRegistry.register(
    :class => NetSuite::CscMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "CscMatchCode")
  )

  LiteralRegistry.register(
    :class => NetSuite::VsoeSopGroup,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoeSopGroup")
  )

  LiteralRegistry.register(
    :class => NetSuite::VsoeDeferral,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoeDeferral")
  )

  LiteralRegistry.register(
    :class => NetSuite::VsoePermitDiscount,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
  )

  LiteralRegistry.register(
    :class => NetSuite::RevenueStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RevenueStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::RevenueCommitStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RevenueCommitStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::PostingPeriodDate,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
  )

  LiteralRegistry.register(
    :class => NetSuite::PermissionLevel,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PermissionLevel")
  )

  LiteralRegistry.register(
    :class => NetSuite::Source,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "Source")
  )

  LiteralRegistry.register(
    :class => NetSuite::GlobalSubscriptionStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "GlobalSubscriptionStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCostEstimateType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "ItemCostEstimateType")
  )

  LiteralRegistry.register(
    :class => NetSuite::PresentationItemType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PresentationItemType")
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCostSource,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostSource")
  )

  LiteralRegistry.register(
    :class => NetSuite::LandedCostMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "LandedCostMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::SitemapPriority,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "SitemapPriority")
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeItemTimeType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "TimeItemTimeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::PermissionCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "PermissionCode")
  )

  LiteralRegistry.register(
    :class => NetSuite::IntercoStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "IntercoStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencySymbolPlacement,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "CurrencySymbolPlacement")
  )

  LiteralRegistry.register(
    :class => NetSuite::RecurrenceFrequency,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceFrequency")
  )

  LiteralRegistry.register(
    :class => NetSuite::RecurrenceDow,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDow")
  )

  LiteralRegistry.register(
    :class => NetSuite::RecurrenceDowim,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "RecurrenceDowim")
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeRuleType,
    :schema_type => XSD::QName.new(NsTypesCommon_2013_2PlatformWebservicesNetsuiteCom, "ChargeRuleType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventAccessLevel,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventAttendeeAttendance,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskPriority")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "TaskStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPriority")
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskConstraintType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskConstraintType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskPredecessorPredecessorType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorPredecessorType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationAllocationUnit,
    :schema_type => XSD::QName.new(NsTypesScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "ResourceAllocationAllocationUnit")
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteDirection,
    :schema_type => XSD::QName.new(NsTypesCommunication_2013_2GeneralWebservicesNetsuiteCom, "NoteDirection")
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageMessageType,
    :schema_type => XSD::QName.new(NsTypesCommunication_2013_2GeneralWebservicesNetsuiteCom, "MessageMessageType")
  )

  LiteralRegistry.register(
    :class => NetSuite::MediaType,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "MediaType")
  )

  LiteralRegistry.register(
    :class => NetSuite::FileAttachFrom,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
  )

  LiteralRegistry.register(
    :class => NetSuite::FileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "FileEncoding")
  )

  LiteralRegistry.register(
    :class => NetSuite::TextFileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "TextFileEncoding")
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatusStage")
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "ContactType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStage")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCreditHoldOverride,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMonthlyClosing,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerMonthlyClosing")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmailPreference,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EmailPreference")
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupType")
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupDailyTime,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupDefView,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupDefView")
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupPeriodSize,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxFractionUnit,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "TaxFractionUnit")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxRounding,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "TaxRounding")
  )

  LiteralRegistry.register(
    :class => NetSuite::JobBillingType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "JobBillingType")
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "PartnerOtherRelationships")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerOtherRelationships")
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "VendorOtherRelationships")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerNegativeNumberFormat,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerNegativeNumberFormat")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerNumberFormat,
    :schema_type => XSD::QName.new(NsTypesRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerNumberFormat")
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseStatusStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStage")
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "SolutionStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueEventStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueEventStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueTrackCode,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueTrackCode")
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueRelationship,
    :schema_type => XSD::QName.new(NsTypesSupport_2013_2ListsWebservicesNetsuiteCom, "IssueRelationship")
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyLocale,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyLocale")
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "AccountType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCostingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCostingMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemProductFeed,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemProductFeed")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemWeightUnit,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemWeightUnit")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemPreferenceCriterion,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOverallQuantityPricingType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ScheduleBCode,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ScheduleBCode")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSubType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSubType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyCurrencyPrecision,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyFxRateUpdateTimezone,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CurrencyFxRateUpdateTimezone")
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesTaxItemAvailable,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemEbayAuctionDuration,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOutOfStockBehavior,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemEbayRelistingOption,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
  )

  LiteralRegistry.register(
    :class => NetSuite::ConsolidatedRate,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ConsolidatedRate")
  )

  LiteralRegistry.register(
    :class => NetSuite::CashFlowRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CashFlowRateType")
  )

  LiteralRegistry.register(
    :class => NetSuite::GeneralRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "GeneralRateType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemMatrixType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemMatrixType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandSource,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemDemandSource")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyLotSizingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyLotSizingMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyReplenishmentMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemSupplyReplenishmentMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleRecogIntervalSrc,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecogIntervalSrc")
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleRecurrenceType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceType")
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleAmortizationType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "RevRecScheduleAmortizationType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CostCategoryItemCostType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "CostCategoryItemCostType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemAtpMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemAtpMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyItemEffectiveBomControl,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "AssemblyItemEffectiveBomControl")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemInvtClassification,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemInvtClassification")
  )

  LiteralRegistry.register(
    :class => NetSuite::PeriodicLotSizeType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "PeriodicLotSizeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::HazmatPackingGroup,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "HazmatPackingGroup")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCarrier,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCarrier")
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxAcctType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxAcctType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOverheadType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemOverheadType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCostAccountingStatus,
    :schema_type => XSD::QName.new(NsTypesAccounting_2013_2ListsWebservicesNetsuiteCom, "ItemCostAccountingStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentExportTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentLicenseExceptionUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentMethodOfTransportUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentThirdPartyTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsCodMethodUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsDeliveryConfUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUpsPackagingUps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsDeliveryConfUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsDeliveryConfUsps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageUspsPackagingUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsPackagingUsps")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentB13AFilingOptionFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentHomeDeliveryTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentThirdPartyTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExCodMethodFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExDeliveryConfFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExPackagingFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExSignatureOptionsFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentTermsOfSaleFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentShipStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunityStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionPaymentEventResult,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventResult")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionPaymentEventType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionPaymentEventHoldReason,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventHoldReason")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExCodFreightTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionLinkType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ForecastType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ForecastType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionLineType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionLineType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionApprovalStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionApprovalStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentPackageFedExPriorityAlertTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPriorityAlertTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentHazmatTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHazmatTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentAncillaryEndorsementFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentAncillaryEndorsementFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillmentAccessibilityTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillmentAccessibilityTypeFedEx")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionChargeType,
    :schema_type => XSD::QName.new(NsTypesSales_2013_2TransactionsWebservicesNetsuiteCom, "TransactionChargeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionBillVarianceStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "TransactionBillVarianceStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationOrderStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeStage,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeStage")
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeUse,
    :schema_type => XSD::QName.new(NsTypesCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ChargeUse")
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetBudgetType,
    :schema_type => XSD::QName.new(NsTypesFinancial_2013_2TransactionsWebservicesNetsuiteCom, "BudgetBudgetType")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "TransferOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderItemItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCreatePo")
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderItemItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2013_2TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationFieldType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationFieldType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationDynamicDefault,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationDisplayType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationFilterCompareType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsPermittedLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypePermissionsRestriction,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCustomFieldItemSubType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationAccessLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationAccessLevel")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationSearchLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomizationSearchLevel")
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordTypeAccessType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordTypeAccessType")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeePayFrequency,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeUseTimeData,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeUseTimeData")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeCommissionPaymentPreference,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
  )

  LiteralRegistry.register(
    :class => NetSuite::Gender,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "Gender")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeAccruedTimeAccrualMethod,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeAccrualMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeDirectDepositAccountStatus,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "EmployeeDirectDepositAccountStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemItemTypeNoHierarchy,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2ListsWebservicesNetsuiteCom, "PayrollItemItemTypeNoHierarchy")
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillTimeType,
    :schema_type => XSD::QName.new(NsTypesEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBillTimeType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCampaignDirectMailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCampaignEmailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCampaignEventStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignChannelEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponseResponse,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCampaignEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponse_,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponse")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeApplyDiscountTo,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeApplyDiscountTo")
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponseCategory,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponseCategory")
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeUseType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2013_2ListsWebservicesNetsuiteCom, "PromotionCodeUseType")
  )

  LiteralRegistry.register(
    :class => NetSuite::DemandPlanCalendarType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanCalendarType")
  )

  LiteralRegistry.register(
    :class => NetSuite::DemandPlanMonth,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DemandPlanMonth")
  )

  LiteralRegistry.register(
    :class => NetSuite::DayOfTheWeek,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "DayOfTheWeek")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanProjectionMethod,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemDemandPlanProjectionMethod")
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanOrderType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "ItemSupplyPlanOrderType")
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskStatus,
    :schema_type => XSD::QName.new(NsTypesSupplychain_2013_2ListsWebservicesNetsuiteCom, "ManufacturingOperationTaskStatus")
  )

  LiteralRegistry.register(
    :class => NetSuite::Status,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status"),
    :schema_element => [
      ["statusDetail", "NetSuite::StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WsRoleList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "wsRoleList"),
    :schema_element => [
      ["wsRole", "NetSuite::WsRole[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Record,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "record"),
    :schema_element => [
      ["nullFieldList", "NetSuite::NullField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRecord,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchRecord"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRecordBasic,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchRecordBasic"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRowBasic,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchRowBasic"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]],
      ["searchRowList", "NetSuite::SearchRowList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "NetSuite::AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getAllResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "NetSuite::RecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearchResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "NetSuite::RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationIdResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "NetSuite::CustomizationRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "NetSuite::BaseRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "recordList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRowList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchRowList"),
    :schema_element => [
      ["searchRow", "NetSuite::SearchRow[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RecordRefList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "recordRefList"),
    :schema_element => [
      ["recordRef", "NetSuite::RecordRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BaseRef,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "baseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::BaseRefList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "baseRefList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomizationRefList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "customizationRefList"),
    :schema_element => [
      ["customizationRef", "NetSuite::CustomizationRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRefList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "initializeRefList"),
    :schema_element => [
      ["initializeRef", "NetSuite::InitializeRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["itemAvailabilityList", "NetSuite::ItemAvailabilityList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["budgetExchangeRateList", "NetSuite::BudgetExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["consolidatedExchangeRateList", "NetSuite::ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRateResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["currencyRateList", "NetSuite::CurrencyRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrlsResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["dataCenterUrls", "NetSuite::DataCenterUrls", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "NetSuite::PostingTransactionSummaryList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getServerTimeResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeletedRecordList,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "deletedRecordList"),
    :schema_element => [
      ["deletedRecord", "NetSuite::DeletedRecord[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedResult,
    :schema_name => XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDeletedResult"),
    :schema_element => [
      ["status", "NetSuite::Status"],
      ["deletedRecordList", "NetSuite::DeletedRecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InsufficientPermissionFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "insufficientPermissionFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidAccountFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "invalidAccountFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidCredentialsFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "invalidCredentialsFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidSessionFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "invalidSessionFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRequestLimitFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "exceededRequestLimitFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededUsageLimitFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "exceededUsageLimitFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRecordCountFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "exceededRecordCountFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExceededRequestSizeFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "exceededRequestSizeFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InvalidVersionFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "invalidVersionFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "asyncFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnexpectedErrorFault,
    :schema_name => XSD::QName.new(NsFaults_2013_2PlatformWebservicesNetsuiteCom, "unexpectedErrorFault"),
    :schema_element => [
      ["code", "NetSuite::FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ApplicationInfo,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "applicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerInfo,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "partnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DocumentInfo,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "documentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Preferences,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchPreferences,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Passport,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "NetSuite::RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SessionResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "sessionResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "NetSuite::RecordRef", [0, 1]],
      ["wsRoleList", ["NetSuite::WsRoleList", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WriteResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "writeResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "NetSuite::BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReadResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "readResponse"),
    :schema_element => [
      ["status", ["NetSuite::Status", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "NetSuite::Record", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WriteResponseList,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "writeResponseList"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ReadResponseList,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "readResponseList"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LoginResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "loginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoLoginResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ssoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MapSsoResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "mapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangePasswordResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "changePasswordResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangeEmailResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "changeEmailResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LogoutResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "logoutResponse"),
    :schema_element => [
      ["sessionResponse", "NetSuite::SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "addResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "addListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "upsertResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "upsertListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "deleteResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "deleteListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchMoreResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreWithIdResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchNextResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchNextResponse"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getAllResponse"),
    :schema_element => [
      ["getAllResult", ["NetSuite::GetAllResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["NetSuite::GetSavedSearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["NetSuite::GetCustomizationIdResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "initializeResponse"),
    :schema_element => [
      ["readResponse", "NetSuite::ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "initializeListResponse"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["NetSuite::GetSelectValueResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["NetSuite::GetItemAvailabilityResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["NetSuite::GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["NetSuite::GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRateResponse"),
    :schema_element => [
      ["getCurrencyRateResult", ["NetSuite::GetCurrencyRateResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrlsResponse"),
    :schema_element => [
      ["getDataCenterUrlsResult", ["NetSuite::GetDataCenterUrlsResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrlsResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["NetSuite::GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["NetSuite::GetServerTimeResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "attachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DetachResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "detachResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "NetSuite::WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncAddListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpdateListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpsertListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncDeleteListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncGetListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncInitializeListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncSearchResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "checkAsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["NetSuite::AsyncStatusResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAsyncResultResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "NetSuite::AsyncResult"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncResult"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncAddListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncAddListResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpdateListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpdateListResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpsertListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpsertListResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncDeleteListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncDeleteListResult"),
    :schema_element => [
      ["writeResponseList", "NetSuite::WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncGetListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncGetListResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncInitializeListResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncInitializeListResult"),
    :schema_element => [
      ["readResponseList", "NetSuite::ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncSearchResult,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncSearchResult"),
    :schema_element => [
      ["searchResult", ["NetSuite::SearchResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedResponse,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["NetSuite::GetDeletedResult", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LoginRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "login"),
    :schema_element => [
      ["passport", "NetSuite::Passport"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SsoLoginRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "ssoLogin"),
    :schema_element => [
      ["ssoPassport", "NetSuite::SsoPassport"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::MapSsoRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "mapSso"),
    :schema_element => [
      ["ssoCredentials", "NetSuite::SsoCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangePasswordRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "changePassword"),
    :schema_element => [
      ["changePassword", "NetSuite::ChangePassword"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ChangeEmailRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "changeEmail"),
    :schema_element => [
      ["changeEmail", "NetSuite::ChangeEmail"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::LogoutRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "logout"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AddRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "add"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "delete"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "search"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchMore"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchMoreWithIdRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchMoreWithId"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SearchNextRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "searchNext"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "update"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "upsert"),
    :schema_element => [
      ["record", "NetSuite::Record"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AddListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "addList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DeleteListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "deleteList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpsertListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "upsertList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "get"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAllRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getAll"),
    :schema_element => [
      ["record", "NetSuite::GetAllRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSavedSearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSavedSearch"),
    :schema_element => [
      ["record", "NetSuite::GetSavedSearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCustomizationIdRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getCustomizationId"),
    :schema_element => [
      ["customizationType", "NetSuite::CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "initialize"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InitializeListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "initializeList"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetSelectValueRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getSelectValue"),
    :schema_element => [
      ["fieldDescription", "NetSuite::GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetItemAvailabilityRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getItemAvailability"),
    :schema_element => [
      ["itemAvailabilityFilter", "NetSuite::ItemAvailabilityFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetBudgetExchangeRateRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getBudgetExchangeRate"),
    :schema_element => [
      ["budgetExchangeRateFilter", "NetSuite::BudgetExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetConsolidatedExchangeRateRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRate"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "NetSuite::ConsolidatedExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetCurrencyRateRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getCurrencyRate"),
    :schema_element => [
      ["currencyRateFilter", "NetSuite::CurrencyRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDataCenterUrlsRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getDataCenterUrls"),
    :schema_element => [
      ["account", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetPostingTransactionSummaryRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getPostingTransactionSummary"),
    :schema_element => [
      ["fields", "NetSuite::PostingTransactionSummaryField"],
      ["filters", "NetSuite::PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetServerTimeRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getServerTime"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => NetSuite::AttachRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "attach"),
    :schema_element => [
      ["attachReference", "NetSuite::AttachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::DetachRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "detach"),
    :schema_element => [
      ["detachReference", "NetSuite::DetachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateInviteeStatus"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UpdateInviteeStatusListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "updateInviteeStatusList"),
    :schema_element => [
      ["updateInviteeStatusReference", "NetSuite::UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncAddListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncAddList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpdateListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpdateList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncUpsertListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncUpsertList"),
    :schema_element => [
      ["record", "NetSuite::Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncDeleteListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncDeleteList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncGetListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncGetList"),
    :schema_element => [
      ["baseRef", "NetSuite::BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncInitializeListRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncInitializeList"),
    :schema_element => [
      ["initializeRecord", "NetSuite::InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AsyncSearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "asyncSearch"),
    :schema_element => [
      ["searchRecord", "NetSuite::SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CheckAsyncStatusRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "checkAsyncStatus"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetAsyncResultRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getAsyncResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GetDeletedRequest,
    :schema_name => XSD::QName.new(NsMessages_2013_2PlatformWebservicesNetsuiteCom, "getDeleted"),
    :schema_element => [
      ["getDeletedFilter", "NetSuite::GetDeletedFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEvent,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "NetSuite::RecurrenceFrequency", [0, 1]],
      ["recurrenceDowMaskList", "NetSuite::RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "NetSuite::RecurrenceDow", [0, 1]],
      ["recurrenceDowim", "NetSuite::RecurrenceDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::CalendarEventReminderMinutes", [0, 1]],
      ["status", "NetSuite::CalendarEventStatus", [0, 1]],
      ["accessLevel", "NetSuite::CalendarEventAccessLevel", [0, 1]],
      ["organizer", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "NetSuite::ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["attendeeList", "NetSuite::CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "NetSuite::CalendarEventResourceList", [0, 1]],
      ["timeItemList", "NetSuite::CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CalendarEventSearch,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "calendarEventSearch"),
    :schema_element => [
      ["basic", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Task,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "NetSuite::TaskPriority", [0, 1]],
      ["status", "NetSuite::TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::TaskReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["contactList", "NetSuite::TaskContactList", [0, 1]],
      ["timeItemList", "NetSuite::TaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaskSearch,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "taskSearch"),
    :schema_element => [
      ["basic", "NetSuite::TaskSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCall,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["supportCase", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["milestone", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::PhoneCallStatus", [0, 1]],
      ["priority", "NetSuite::PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "NetSuite::PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "NetSuite::PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "NetSuite::PhoneCallContactList", [0, 1]],
      ["timeItemList", "NetSuite::PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PhoneCallSearch,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "phoneCallSearch"),
    :schema_element => [
      ["basic", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["participantJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTask,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "projectTask"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["eventId", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "NetSuite::ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["finishByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isMilestone", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnCriticalPath", "SOAP::SOAPString", [0, 1]],
      ["slackMinutes", "SOAP::SOAPDouble", [0, 1]],
      ["lateEnd", "SOAP::SOAPDateTime", [0, 1]],
      ["lateStart", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "NetSuite::ProjectTaskStatus", [0, 1]],
      ["assigneeList", "NetSuite::ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "NetSuite::ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "NetSuite::ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ProjectTaskSearch,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "projectTaskSearch"),
    :schema_element => [
      ["basic", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocation,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "resourceAllocation"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["requestedby", "NetSuite::RecordRef", [0, 1]],
      ["allocationResource", "NetSuite::RecordRef", [0, 1]],
      ["project", "NetSuite::RecordRef", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allocationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["allocationUnit", "NetSuite::ResourceAllocationAllocationUnit", [0, 1]],
      ["numberHours", "SOAP::SOAPDouble", [0, 1]],
      ["percentOfTime", "SOAP::SOAPDouble", [0, 1]],
      ["allocationType", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ResourceAllocationSearch,
    :schema_name => XSD::QName.new(NsScheduling_2013_2ActivitiesWebservicesNetsuiteCom, "resourceAllocationSearch"),
    :schema_element => [
      ["basic", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["requestedByJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["resourceJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Note,
    :schema_name => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Note"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "NetSuite::RecordRef", [0, 1]],
      ["direction", "NetSuite::NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["folder", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["media", "NetSuite::RecordRef", [0, 1]],
      ["record", "NetSuite::RecordRef", [0, 1]],
      ["recordType", "NetSuite::RecordRef", [0, 1]],
      ["topic", "NetSuite::RecordRef", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteSearch,
    :schema_name => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "noteSearch"),
    :schema_element => [
      ["basic", "NetSuite::NoteSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Message,
    :schema_name => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "Message"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "NetSuite::RecordRef", [0, 1]],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "NetSuite::RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "NetSuite::RecordRef", [0, 1]],
      ["mediaItemList", "NetSuite::MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MessageSearch,
    :schema_name => XSD::QName.new(NsCommunication_2013_2GeneralWebservicesNetsuiteCom, "messageSearch"),
    :schema_element => [
      ["basic", "NetSuite::MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["authorJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["campaignJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FileSearch,
    :schema_name => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "fileSearch"),
    :schema_element => [
      ["basic", "NetSuite::FileSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::FolderSearch,
    :schema_name => XSD::QName.new(NsFilecabinet_2013_2DocumentsWebservicesNetsuiteCom, "folderSearch"),
    :schema_element => [
      ["basic", "NetSuite::FolderSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Contact,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Contact"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["contactSource", "NetSuite::RecordRef", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "NetSuite::RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "NetSuite::ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "contactSearch"),
    :schema_element => [
      ["basic", "NetSuite::ContactSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["parentJobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["parentPartnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["parentVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Customer,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Customer"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "NetSuite::Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["numberFormat", "NetSuite::CustomerNumberFormat", [0, 1]],
      ["negativeNumberFormat", "NetSuite::CustomerNegativeNumberFormat", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["territory", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "NetSuite::CustomerCreditHoldOverride", [0, 1]],
      ["monthlyClosing", "NetSuite::CustomerMonthlyClosing", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["prefCCProcessor", "NetSuite::RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "NetSuite::RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "NetSuite::Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["receivablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["defaultOrderPriority", "SOAP::SOAPDouble", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["downloadList", "NetSuite::CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["addressbookList", "NetSuite::CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["currencyList", "NetSuite::CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "NetSuite::CustomerCreditCardsList", [0, 1]],
      ["partnersList", "NetSuite::CustomerPartnersList", [0, 1]],
      ["groupPricingList", "NetSuite::CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "NetSuite::CustomerItemPricingList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "customerSearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["purchasedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["upsellItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatus,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "NetSuite::CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Partner,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Partner"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "NetSuite::RecordRefList", [0, 1]],
      ["categoryList", "NetSuite::CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["taxFractionUnit", "NetSuite::TaxFractionUnit", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["taxRounding", "NetSuite::TaxRounding", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "NetSuite::RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "NetSuite::ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "NetSuite::PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "NetSuite::PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "partnerSearch"),
    :schema_element => [
      ["basic", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Vendor,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["representingSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["payablesAccount", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["balancePrimary", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrdersPrimary", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "NetSuite::VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "NetSuite::SubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::VendorAddressbookList", [0, 1]],
      ["currencyList", "NetSuite::VendorCurrencyList", [0, 1]],
      ["rolesList", "NetSuite::VendorRolesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "vendorSearch"),
    :schema_element => [
      ["basic", "NetSuite::VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroup,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "NetSuite::EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "NetSuite::RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "NetSuite::EntityGroupType", [0, 1]],
      ["savedSearch", "NetSuite::RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "NetSuite::RecordRef", [0, 1]],
      ["isManufacturingWorkCenter", "SOAP::SOAPBoolean", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "NetSuite::EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "NetSuite::EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "NetSuite::EntityGroupPeriodSize", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityGroupSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "entityGroupSearch"),
    :schema_element => [
      ["basic", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Job,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "Job"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["language", "NetSuite::RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "NetSuite::RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "NetSuite::Duration", [0, 1]],
      ["estimatedTimeOverride", "NetSuite::Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "NetSuite::EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["jobBillingType", "NetSuite::JobBillingType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["jobItem", "NetSuite::RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "NetSuite::Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "NetSuite::Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "NetSuite::RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["projectExpenseType", "NetSuite::RecordRef", [0, 1]],
      ["applyProjectExpenseTypeToAll", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "NetSuite::JobResourcesList", [0, 1]],
      ["addressbookList", "NetSuite::JobAddressbookList", [0, 1]],
      ["milestonesList", "NetSuite::JobMilestonesList", [0, 1]],
      ["creditCardsList", "NetSuite::JobCreditCardsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "jobSearch"),
    :schema_element => [
      ["basic", "NetSuite::JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobType,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatus,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerStatusSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "customerStatusSearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobStatusSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "jobStatusSearch"),
    :schema_element => [
      ["basic", "NetSuite::JobStatusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::JobTypeSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "jobTypeSearch"),
    :schema_element => [
      ["basic", "NetSuite::JobTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::OriginatingLeadSearch,
    :schema_name => XSD::QName.new(NsRelationships_2013_2ListsWebservicesNetsuiteCom, "originatingLeadSearch"),
    :schema_element => [
      ["basic", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCase,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "NetSuite::RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["contact", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["serialNumber", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["origin", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["escalateToList", "NetSuite::SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "NetSuite::SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "NetSuite::SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseSearch,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "supportCaseSearch"),
    :schema_element => [
      ["basic", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["issueJoin", "NetSuite::IssueSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseStatus,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseType,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseOrigin,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCaseIssue,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SupportCasePriority,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Solution,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Solution"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "NetSuite::SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "NetSuite::SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "NetSuite::SolutionsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SolutionSearch,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "solutionSearch"),
    :schema_element => [
      ["basic", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["topicJoin", "NetSuite::TopicSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Topic,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Topic"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "NetSuite::TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TopicSearch,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "topicSearch"),
    :schema_element => [
      ["basic", "NetSuite::TopicSearchBasic", [0, 1]],
      ["solutionJoin", "NetSuite::SolutionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Issue,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "Issue"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "NetSuite::RecordRef", [0, 1]],
      ["product", "NetSuite::RecordRef", [0, 1]],
      ["v_module", ["NetSuite::RecordRef", XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["productTeam", "NetSuite::RecordRef", [0, 1]],
      ["source", "NetSuite::RecordRef", [0, 1]],
      ["reportedBy", "NetSuite::RecordRef", [0, 1]],
      ["reproduce", "NetSuite::RecordRef", [0, 1]],
      ["severity", "NetSuite::RecordRef", [0, 1]],
      ["priority", "NetSuite::RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "NetSuite::RecordRef", [0, 1]],
      ["reviewer", "NetSuite::RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "NetSuite::RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "NetSuite::RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "NetSuite::IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "NetSuite::EmailEmployeesList", [0, 1]],
      ["emailCellsList", "NetSuite::RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["targetVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["fixedInVersionList", "NetSuite::IssueVersionList", [0, 1]],
      ["relatedIssuesList", "NetSuite::IssueRelatedIssuesList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::IssueSearch,
    :schema_name => XSD::QName.new(NsSupport_2013_2ListsWebservicesNetsuiteCom, "issueSearch"),
    :schema_element => [
      ["basic", "NetSuite::IssueSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRole,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevel,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReason,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Term,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Term"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteType,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethod,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "NetSuite::RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LeadSource,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "NetSuite::ItemType", [0, 1]],
      ["originalItemSubtype", "NetSuite::ItemSubType", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DescriptionItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DiscountItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DownloadItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "downloadItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::MarkupItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubtotalItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventoryPurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventorySaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NonInventoryResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargeResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargePurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["overheadType", "NetSuite::ItemOverheadType", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServicePurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["manufacturingChargeItem", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferralAccount", "NetSuite::RecordRef", [0, 1]],
      ["amortizationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ServiceSaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "NetSuite::ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["billingRatesMatrix", "NetSuite::BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherChargeSaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Currency,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Currency"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["overrideCurrencyFormat", "SOAP::SOAPBoolean", [0, 1]],
      ["displaySymbol", "SOAP::SOAPString", [0, 1]],
      ["symbolPlacement", "NetSuite::CurrencySymbolPlacement", [0, 1]],
      ["locale", "NetSuite::CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "NetSuite::CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "NetSuite::CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rateRequired", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultRate", "SOAP::SOAPDouble", [0, 1]],
      ["ratesList", "NetSuite::ExpenseCategoryRatesList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Account,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Account"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "NetSuite::AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["cashFlowRate", "NetSuite::ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "NetSuite::RecordRef", [0, 1]],
      ["deferralAcct", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["category1099misc", "NetSuite::RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::AccountTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "accountSearch"),
    :schema_element => [
      ["basic", "NetSuite::AccountSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Department,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Department"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepartmentSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "departmentSearch"),
    :schema_element => [
      ["basic", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Classification,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Classification"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ClassificationSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "classificationSearch"),
    :schema_element => [
      ["basic", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Location,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Location"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LocationSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "locationSearch"),
    :schema_element => [
      ["basic", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsType,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "NetSuite::UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "itemSearch"),
    :schema_element => [
      ["basic", "NetSuite::ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["binOnHandJoin", "NetSuite::ItemBinNumberSearchBasic", [0, 1]],
      ["correlatedItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["effectiveRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["inventoryNumberBinOnHandJoin", "NetSuite::InventoryNumberBinSearchBasic", [0, 1]],
      ["memberItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["obsoleteRevisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["parentJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRole,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Bin,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "bin"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "binSearch"),
    :schema_element => [
      ["basic", "NetSuite::BinSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesTaxItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["purchaseAccount", "NetSuite::RecordRef", [0, 1]],
      ["saleAccount", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["service", "SOAP::SOAPBoolean", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "NetSuite::SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "NetSuite::RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxGroup,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["taxitem1", "NetSuite::RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "NetSuite::RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "NetSuite::RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "NetSuite::TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxType,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "NetSuite::TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedInventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedInventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "NetSuite::ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["backwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["periodicLotSizeType", "NetSuite::PeriodicLotSizeType", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["periodicLotSizeDays", "SOAP::SOAPLong", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["forwardConsumptionDays", "SOAP::SOAPLong", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["matrixOptionList", "NetSuite::MatrixOptionList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["authCodesList", "NetSuite::GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Subsidiary,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "NetSuite::RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "NetSuite::RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "NetSuite::RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "NetSuite::RecordRef", [0, 1]],
      ["caseCreationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "NetSuite::RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "NetSuite::RecordRef", [0, 1]],
      ["caseEscalationTemplate", "NetSuite::RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "NetSuite::Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["taxFiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "NetSuite::Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "NetSuite::RecordRef", [0, 1]],
      ["nexusList", "NetSuite::SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "NetSuite::RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "NetSuite::ClassTranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SubsidiarySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "subsidiarySearch"),
    :schema_element => [
      ["basic", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificate,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::GiftCertificateSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "giftCertificateSearch"),
    :schema_element => [
      ["basic", "NetSuite::GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::KitItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "kitItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "assemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SerializedAssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "serializedAssemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::LotNumberedAssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "lotNumberedAssemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["useComponentYield", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["costCategory", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "NetSuite::RecordRef", [0, 1]],
      ["incomeAccount", "NetSuite::RecordRef", [0, 1]],
      ["assetAccount", "NetSuite::RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["gainLossAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["purchaseTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["wipVarianceAcct", "NetSuite::RecordRef", [0, 1]],
      ["taxSchedule", "NetSuite::RecordRef", [0, 1]],
      ["scrapAcct", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["wipAcct", "NetSuite::RecordRef", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "NetSuite::ItemWeightUnit", [0, 1]],
      ["costingMethod", "NetSuite::ItemCostingMethod", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "NetSuite::RecordRef", [0, 1]],
      ["stockUnit", "NetSuite::RecordRef", [0, 1]],
      ["purchaseUnit", "NetSuite::RecordRef", [0, 1]],
      ["saleUnit", "NetSuite::RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["deferredRevenueAccount", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "NetSuite::Country", [0, 1]],
      ["effectiveBomControl", "NetSuite::AssemblyItemEffectiveBomControl", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["defaultRevision", "SOAP::SOAPString", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["roundUpAsComponent", "SOAP::SOAPBoolean", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "NetSuite::RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "NetSuite::ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "NetSuite::RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "NetSuite::ItemCostEstimateType", [0, 1]],
      ["isHazmatItem", "SOAP::SOAPBoolean", [0, 1]],
      ["hazmatId", "SOAP::SOAPString", [0, 1]],
      ["hazmatShippingName", "SOAP::SOAPString", [0, 1]],
      ["hazmatHazardClass", "SOAP::SOAPString", [0, 1]],
      ["hazmatPackingGroup", "NetSuite::HazmatPackingGroup", [0, 1]],
      ["hazmatItemUnits", "SOAP::SOAPString", [0, 1]],
      ["hazmatItemUnitsQty", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "NetSuite::ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "NetSuite::RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "NetSuite::VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "NetSuite::VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "NetSuite::VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "NetSuite::RecordRef", [0, 1]],
      ["dropshipExpenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["preferredLocation", "NetSuite::RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextInvtCountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["invtCountInterval", "SOAP::SOAPLong", [0, 1]],
      ["invtClassification", "NetSuite::ItemInvtClassification", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "NetSuite::RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "NetSuite::RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "NetSuite::RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "NetSuite::RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "NetSuite::RecordRef", [0, 1]],
      ["demandSource", "NetSuite::RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "NetSuite::ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "NetSuite::ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "NetSuite::ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "NetSuite::RecordRefList", [0, 1]],
      ["itemVendorList", "NetSuite::ItemVendorList", [0, 1]],
      ["pricingMatrix", "NetSuite::PricingMatrix", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["locationsList", "NetSuite::LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "NetSuite::SiteCategoryList", [0, 1]],
      ["binNumberList", "NetSuite::InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "NetSuite::LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["presentationItemList", "NetSuite::PresentationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::State,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "state"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriod,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "accountingPeriod"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["fiscalCalendar", "NetSuite::RecordRef", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["fiscalCalendarsList", "NetSuite::AccountingPeriodFiscalCalendarsList", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "budgetCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AccountingPeriodSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "accountingPeriodSearch"),
    :schema_element => [
      ["basic", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "contactCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ContactRoleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "contactRoleSearch"),
    :schema_element => [
      ["basic", "NetSuite::ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "customerCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "expenseCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::NoteTypeSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "noteTypeSearch"),
    :schema_element => [
      ["basic", "NetSuite::NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PartnerCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "partnerCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PaymentMethodSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "paymentMethodSearch"),
    :schema_element => [
      ["basic", "NetSuite::PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PriceLevelSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "priceLevelSearch"),
    :schema_element => [
      ["basic", "NetSuite::PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesRoleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "salesRoleSearch"),
    :schema_element => [
      ["basic", "NetSuite::SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TermSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "termSearch"),
    :schema_element => [
      ["basic", "NetSuite::TermSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "vendorCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::WinLossReasonSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "winLossReasonSearch"),
    :schema_element => [
      ["basic", "NetSuite::WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::UnitsTypeSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "unitsTypeSearch"),
    :schema_element => [
      ["basic", "NetSuite::UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroup,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "pricingGroup"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PricingGroupSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "pricingGroupSearch"),
    :schema_element => [
      ["basic", "NetSuite::PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumber,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "inventoryNumber"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "NetSuite::InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryNumberSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "inventoryNumberSearch"),
    :schema_element => [
      ["basic", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecSchedule,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "revRecSchedule"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplate,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "revRecTemplate"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "NetSuite::RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "NetSuite::RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "NetSuite::RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "NetSuite::RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecScheduleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "revRecScheduleSearch"),
    :schema_element => [
      ["basic", "NetSuite::RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::RevRecTemplateSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "revRecTemplateSearch"),
    :schema_element => [
      ["basic", "NetSuite::RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CostCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "costCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["itemCostType", "NetSuite::CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Nexus,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "nexus"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["state", "NetSuite::RecordRef", [0, 1]],
      ["taxAgency", "NetSuite::RecordRef", [0, 1]],
      ["taxAgencyPst", "NetSuite::RecordRef", [0, 1]],
      ["taxCode", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::NexusSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "nexusSearch"),
    :schema_element => [
      ["basic", "NetSuite::NexusSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessage,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "customerMessage"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategory,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "otherNameCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherNameCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "otherNameCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerMessageSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "customerMessageSearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemGroup,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "itemGroup"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["includeStartEndLines", "SOAP::SOAPBoolean", [0, 1]],
      ["isVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultItemShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "NetSuite::RecordRef", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subsidiaryList", "NetSuite::RecordRefList", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["itemCarrier", "NetSuite::ItemCarrier", [0, 1]],
      ["itemShipMethodList", "NetSuite::RecordRefList", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["memberList", "NetSuite::ItemMemberList", [0, 1]],
      ["translationsList", "NetSuite::TranslationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRate,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "currencyRate"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["baseCurrency", "NetSuite::RecordRef", [0, 1]],
      ["transactionCurrency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CurrencyRateSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "currencyRateSearch"),
    :schema_element => [
      ["basic", "NetSuite::CurrencyRateSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevision,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "itemRevision"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["effectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["obsoleteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemRevisionSearch,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "itemRevisionSearch"),
    :schema_element => [
      ["basic", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TaxAcct,
    :schema_name => XSD::QName.new(NsAccounting_2013_2ListsWebservicesNetsuiteCom, "taxAcct"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexus", "NetSuite::RecordRef", [0, 1]],
      ["country", "NetSuite::Country", [0, 1]],
      ["taxAcctType", "NetSuite::TaxAcctType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Opportunity,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "NetSuite::RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::OpportunityPartnersList", [0, 1]],
      ["itemList", "NetSuite::OpportunityItemList", [0, 1]],
      ["competitorsList", "NetSuite::OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OpportunitySearch,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "opportunitySearch"),
    :schema_element => [
      ["basic", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["estimateJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["orderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SalesOrder,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "NetSuite::TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "NetSuite::TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "NetSuite::TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["itemList", "NetSuite::SalesOrderItemList", [0, 1]],
      ["shipGroupList", "NetSuite::SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionSearch,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "transactionSearch"),
    :schema_element => [
      ["basic", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["accountJoin", "NetSuite::AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "NetSuite::AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "NetSuite::BinSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "NetSuite::ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "NetSuite::ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "NetSuite::InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "NetSuite::InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["jobMainJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "NetSuite::OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["partnerJoin", "NetSuite::PartnerSearchBasic", [0, 1]],
      ["payingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["payrollItemJoin", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["revisionJoin", "NetSuite::ItemRevisionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemFulfillment,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "NetSuite::ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeUps", "NetSuite::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "NetSuite::ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "NetSuite::ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "NetSuite::ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "NetSuite::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "NetSuite::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "NetSuite::Country", [0, 1]],
      ["thirdPartyTypeFedEx", "NetSuite::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "NetSuite::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["insideDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insidePickupFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["ancillaryEndorsementFedEx", "NetSuite::ItemFulfillmentAncillaryEndorsementFedEx", [0, 1]],
      ["holdAtLocationFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["halPhoneFedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr1FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr2FedEx", "SOAP::SOAPString", [0, 1]],
      ["halAddr3FedEx", "SOAP::SOAPString", [0, 1]],
      ["halCityFedEx", "SOAP::SOAPString", [0, 1]],
      ["halZipFedEx", "SOAP::SOAPString", [0, 1]],
      ["halStateFedEx", "SOAP::SOAPString", [0, 1]],
      ["halCountryFedEx", "SOAP::SOAPString", [0, 1]],
      ["hazmatTypeFedEx", "NetSuite::ItemFulfillmentHazmatTypeFedEx", [0, 1]],
      ["accessibilityTypeFedEx", "NetSuite::ItemFulfillmentAccessibilityTypeFedEx", [0, 1]],
      ["isCargoAircraftOnlyFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["packageList", "NetSuite::ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "NetSuite::ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "NetSuite::ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "NetSuite::ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "NetSuite::ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "NetSuite::ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Invoice,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::InvoicePartnersList", [0, 1]],
      ["itemList", "NetSuite::InvoiceItemList", [0, 1]],
      ["itemCostList", "NetSuite::InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::InvoiceExpCostList", [0, 1]],
      ["timeList", "NetSuite::InvoiceTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashSale,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "NetSuite::RecordRef", [0, 1]],
      ["expCostTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashSalePartnersList", [0, 1]],
      ["itemList", "NetSuite::CashSaleItemList", [0, 1]],
      ["itemCostList", "NetSuite::CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "NetSuite::GiftCertRedemptionList", [0, 1]],
      ["expCostList", "NetSuite::CashSaleExpCostList", [0, 1]],
      ["timeList", "NetSuite::CashSaleTimeList", [0, 1]],
      ["shipGroupList", "NetSuite::CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Estimate,
    :schema_name => XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "NetSuite::RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "NetSuite::RecordRef", [0, 1]],
      ["opportunity", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsSales_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingSchedule", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::EstimateItemList", [0, 1]],
      ["salesTeamList", "NetSuite::EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "NetSuite::EstimatePartnersList", [0, 1]],
      ["shipGroupList", "NetSuite::EstimateShipGroupList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorBill,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::VendorBillExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorBillItemList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]],
      ["purchaseOrderList", "NetSuite::RecordRefList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PurchaseOrder,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["terms", "NetSuite::RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["shipTo", "NetSuite::RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "NetSuite::PurchaseOrderItemList", [0, 1]],
      ["expenseList", "NetSuite::PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemReceipt,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ItemReceiptItemList", [0, 1]],
      ["expenseList", "NetSuite::ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "NetSuite::PurchLandedCostList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorPayment,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "vendorPayment"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::VendorPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorCredit,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "vendorCredit"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::VendorCreditExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorCreditItemList", [0, 1]],
      ["applyList", "NetSuite::VendorCreditApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::VendorReturnAuthorization,
    :schema_name => XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "vendorReturnAuthorization"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["orderStatus", "NetSuite::VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsPurchases_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["expenseList", "NetSuite::VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "NetSuite::VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CashRefund,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::CashRefundItemList", [0, 1]],
      ["salesTeamList", "NetSuite::CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::CashRefundPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerPayment,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::CustomerPaymentApplyList", [0, 1]],
      ["creditList", "NetSuite::CustomerPaymentCreditList", [0, 1]],
      ["depositList", "NetSuite::CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ReturnAuthorization,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["intercoTransaction", "NetSuite::RecordRef", [0, 1]],
      ["intercoStatus", "NetSuite::IntercoStatus", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["drAccount", "NetSuite::RecordRef", [0, 1]],
      ["fxAccount", "NetSuite::RecordRef", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["revRecSchedule", "NetSuite::RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "NetSuite::RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "NetSuite::ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "NetSuite::ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "NetSuite::ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CreditMemo,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["salesRep", "NetSuite::RecordRef", [0, 1]],
      ["partner", "NetSuite::RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "NetSuite::RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "NetSuite::RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "NetSuite::RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "NetSuite::RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "NetSuite::BillAddress", [0, 1]],
      ["billAddressList", "NetSuite::RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "NetSuite::RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "NetSuite::RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "NetSuite::RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "NetSuite::CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "NetSuite::CreditMemoItemList", [0, 1]],
      ["partnersList", "NetSuite::CreditMemoPartnersList", [0, 1]],
      ["applyList", "NetSuite::CreditMemoApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerRefund,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "NetSuite::RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerRefundApplyList", [0, 1]],
      ["depositList", "NetSuite::CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomerDeposit,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["paymentMethod", "NetSuite::RecordRef", [0, 1]],
      ["ccIsPurchaseCardBin", "SOAP::SOAPBoolean", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["ccProcessAsPurchaseCard", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "NetSuite::RecordRef", [0, 1]],
      ["creditCard", "NetSuite::RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "NetSuite::AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "NetSuite::CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::DepositApplication,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["deposit", "NetSuite::RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["applyList", "NetSuite::DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Charge,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "charge"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["salesOrder", "NetSuite::RecordRef", [0, 1]],
      ["billTo", "NetSuite::RecordRef", [0, 1]],
      ["stage", "NetSuite::ChargeStage", [0, 1]],
      ["chargeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["use", "NetSuite::ChargeUse", [0, 1]],
      ["chargeType", "NetSuite::ChargeRuleType", [0, 1]],
      ["projectTask", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timeRecord", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["billingItem", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["salesOrderLine", "NetSuite::RecordRef", [0, 1]],
      ["invoice", "NetSuite::RecordRef", [0, 1]],
      ["invoiceLine", "NetSuite::RecordRef", [0, 1]],
      ["runId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ChargeSearch,
    :schema_name => XSD::QName.new(NsCustomers_2013_2TransactionsWebservicesNetsuiteCom, "chargeSearch"),
    :schema_element => [
      ["basic", "NetSuite::ChargeSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Budget,
    :schema_name => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "budget"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "NetSuite::RecordRef", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["budgetType", "NetSuite::BudgetBudgetType", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BudgetSearch,
    :schema_name => XSD::QName.new(NsFinancial_2013_2TransactionsWebservicesNetsuiteCom, "budgetSearch"),
    :schema_element => [
      ["basic", "NetSuite::BudgetSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Check,
    :schema_name => XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["voidJournal", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsBank_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "NetSuite::LandedCostMethod", [0, 1]],
      ["landedCostPerLine", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseList", "NetSuite::CheckExpenseList", [0, 1]],
      ["itemList", "NetSuite::CheckItemList", [0, 1]],
      ["landedCostsList", "NetSuite::CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryAdjustment,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "NetSuite::InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyBuild,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "assemblyBuild"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AssemblyUnbuild,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "assemblyUnbuild"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "NetSuite::AssemblyComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransferOrder,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "transferOrder"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::TransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyTransferOrder,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "interCompanyTransferOrder"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "NetSuite::ShipAddress", [0, 1]],
      ["shipAddressList", "NetSuite::RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "NetSuite::TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "NetSuite::RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["handlingTaxCode", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "NetSuite::InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrder,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "workOrder"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["job", "NetSuite::RecordRef", [0, 1]],
      ["assemblyItem", "NetSuite::RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["isWip", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "NetSuite::WorkOrderItemList", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["salesTeamList", "NetSuite::SalesTeamList", [0, 1]],
      ["partnersList", "NetSuite::PartnersList", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "NetSuite::CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryTransfer,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "inventoryTransfer"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["transferLocation", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinTransfer,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "binTransfer"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["inventoryList", "NetSuite::BinTransferInventoryList", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::BinWorksheet,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "binWorksheet"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["itemList", "NetSuite::BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderIssue,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "workOrderIssue"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderIssueComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderCompletion,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "workOrderCompletion"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["isBackflush", "SOAP::SOAPBoolean", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["inventoryDetail", "NetSuite::InventoryDetail", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["startOperation", "NetSuite::RecordRef", [0, 1]],
      ["endOperation", "NetSuite::RecordRef", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["manufacturingRouting", "NetSuite::RecordRef", [0, 1]],
      ["componentList", "NetSuite::WorkOrderCompletionComponentList", [0, 1]],
      ["operationList", "NetSuite::WorkOrderCompletionOperationList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::WorkOrderClose,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "workOrderClose"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["orderQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["scrapQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["revision", "NetSuite::RecordRef", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InventoryCostRevaluation,
    :schema_name => XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "inventoryCostRevaluation"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsInventory_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryValue", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["costComponentList", "NetSuite::InventoryCostRevaluationCostComponentList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::JournalEntry,
    :schema_name => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["lineList", "NetSuite::JournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::InterCompanyJournalEntry,
    :schema_name => XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "NetSuite::RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsGeneral_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["toSubsidiary", "NetSuite::RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "NetSuite::InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecord,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTranslationsList", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordSearch,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "customRecordSearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["ownerJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomList,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "NetSuite::CustomListCustomValueList", [0, 1]],
      ["translationsList", "NetSuite::CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordType,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "NetSuite::CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["enableDle", "SOAP::SOAPBoolean", [0, 1]],
      ["enableNameTranslation", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "NetSuite::CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "NetSuite::CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "NetSuite::CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "NetSuite::CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "NetSuite::CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "NetSuite::CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "NetSuite::CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "NetSuite::CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "NetSuite::CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "NetSuite::CustomRecordTypeTranslationsList", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EntityCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CrmCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToMfgProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::OtherCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["recType", "NetSuite::RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["filterList", "NetSuite::OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "NetSuite::ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "NetSuite::ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionBodyCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TransactionColumnCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemOptionCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomRecordCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["subtab", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "NetSuite::RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourcefilterby", "NetSuite::RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "NetSuite::CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "NetSuite::CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemNumberCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "itemNumberCustomField"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["fieldType", "NetSuite::CustomizationFieldType", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "NetSuite::RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "NetSuite::RecordRef", [0, 1]],
      ["displayType", "NetSuite::CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "NetSuite::RecordRef", [0, 1]],
      ["dynamicDefault", "NetSuite::CustomizationDynamicDefault", [0, 1]],
      ["searchDefault", "NetSuite::RecordRef", [0, 1]],
      ["searchCompareField", "NetSuite::RecordRef", [0, 1]],
      ["sourceList", "NetSuite::RecordRef", [0, 1]],
      ["sourceFrom", "NetSuite::RecordRef", [0, 1]],
      ["sourceFilterBy", "NetSuite::RecordRef", [0, 1]],
      ["accessLevel", "NetSuite::CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "NetSuite::CustomizationSearchLevel", [0, 1]],
      ["filterList", "NetSuite::ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "NetSuite::CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "NetSuite::CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "NetSuite::RecordRefList", [0, 1]],
      ["translationsList", "NetSuite::CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CustomListSearch,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "customListSearch"),
    :schema_element => [
      ["basic", "NetSuite::CustomListSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinition,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "appDefinition"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "NetSuite::AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppDefinitionSearch,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "appDefinitionSearch"),
    :schema_element => [
      ["basic", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackage,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "appPackage"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "NetSuite::RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "NetSuite::RecordRef", [0, 1]],
      ["bundle", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::AppPackageSearch,
    :schema_name => XSD::QName.new(NsCustomization_2013_2SetupWebservicesNetsuiteCom, "appPackageSearch"),
    :schema_element => [
      ["basic", "NetSuite::AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "NetSuite::AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::Employee,
    :schema_name => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "Employee"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["template", "NetSuite::RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["billingClass", "NetSuite::RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "NetSuite::GlobalSubscriptionStatus", [0, 1]],
      ["image", "NetSuite::RecordRef", [0, 1]],
      ["payFrequency", "NetSuite::EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["useTimeData", "NetSuite::EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "NetSuite::RecordRef", [0, 1]],
      ["approver", "NetSuite::RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "NetSuite::RecordRef", [0, 1]],
      ["employeeType", "NetSuite::RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "NetSuite::RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "NetSuite::RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "NetSuite::RecordRef", [0, 1]],
      ["ethnicity", "NetSuite::RecordRef", [0, 1]],
      ["gender", "NetSuite::Gender", [0, 1]],
      ["purchaseOrderApprover", "NetSuite::RecordRef", [0, 1]],
      ["workCalendar", "NetSuite::RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "NetSuite::EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "NetSuite::EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "NetSuite::EmployeeAddressbookList", [0, 1]],
      ["rolesList", "NetSuite::EmployeeRolesList", [0, 1]],
      ["hrEducationList", "NetSuite::EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "NetSuite::EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "NetSuite::EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "NetSuite::EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "NetSuite::EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "NetSuite::EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "NetSuite::EmployeeDeductionList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::EmployeeSearch,
    :schema_name => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "employeeSearch"),
    :schema_element => [
      ["basic", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["subsidiaryJoin", "NetSuite::SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItem,
    :schema_name => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "payrollItem"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["itemType", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["vendor", "NetSuite::RecordRef", [0, 1]],
      ["expenseAccount", "NetSuite::RecordRef", [0, 1]],
      ["liabilityAccount", "NetSuite::RecordRef", [0, 1]],
      ["employeePaid", "SOAP::SOAPBoolean", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PayrollItemSearch,
    :schema_name => XSD::QName.new(NsEmployees_2013_2ListsWebservicesNetsuiteCom, "payrollItemSearch"),
    :schema_element => [
      ["basic", "NetSuite::PayrollItemSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategory,
    :schema_name => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "NetSuite::RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "NetSuite::RecordRef", [0, 1]],
      ["categoryListLayout", "NetSuite::RecordRef", [0, 1]],
      ["itemListLayout", "NetSuite::RecordRef", [0, 1]],
      ["relatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["correlatedItemsListLayout", "NetSuite::RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "NetSuite::RecordRef", [0, 1]],
      ["storeDisplayImage", "NetSuite::RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "NetSuite::SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "NetSuite::SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "NetSuite::SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::SiteCategorySearch,
    :schema_name => XSD::QName.new(NsWebsite_2013_2ListsWebservicesNetsuiteCom, "siteCategorySearch"),
    :schema_element => [
      ["basic", "NetSuite::SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBill,
    :schema_name => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "NetSuite::RecordRef", [0, 1]],
      ["caseTaskEvent", "NetSuite::RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "NetSuite::RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["hours", "NetSuite::Duration", [0, 1]],
      ["price", "NetSuite::RecordRef", [0, 1]],
      ["timeType", "NetSuite::TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::TimeBillSearch,
    :schema_name => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "timeBillSearch"),
    :schema_element => [
      ["basic", "NetSuite::TimeBillSearchBasic", [0, 1]],
      ["callJoin", "NetSuite::PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "NetSuite::SupportCaseSearchBasic", [0, 1]],
      ["classJoin", "NetSuite::ClassificationSearchBasic", [0, 1]],
      ["customerJoin", "NetSuite::CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "NetSuite::DepartmentSearchBasic", [0, 1]],
      ["employeeJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "NetSuite::CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["jobJoin", "NetSuite::JobSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["projectTaskJoin", "NetSuite::ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "NetSuite::ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["resourceAllocationJoin", "NetSuite::ResourceAllocationSearchBasic", [0, 1]],
      ["taskJoin", "NetSuite::TaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "NetSuite::VendorSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ExpenseReport,
    :schema_name => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "expenseReport"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["approvalStatus", "NetSuite::RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["nextApprover", "NetSuite::RecordRef", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["expenseList", "NetSuite::ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PaycheckJournal,
    :schema_name => XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "paycheckJournal"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["currency", "NetSuite::RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["employee", "NetSuite::RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "NetSuite::RecordRef", [0, 1]],
      ["account", "NetSuite::RecordRef", [0, 1]],
      ["department", "NetSuite::RecordRef", [0, 1]],
      ["v_class", ["NetSuite::RecordRef", XSD::QName.new(NsEmployees_2013_2TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["companyContributionList", "NetSuite::PaycheckJournalCompanyContributionList", [0, 1]],
      ["deductionList", "NetSuite::PaycheckJournalDeductionList", [0, 1]],
      ["employeeTaxList", "NetSuite::PaycheckJournalEmployeeTaxList", [0, 1]],
      ["companyTaxList", "NetSuite::PaycheckJournalCompanyTaxList", [0, 1]],
      ["earningList", "NetSuite::PaycheckJournalEarningList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::Campaign,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "NetSuite::RecordRef", [0, 1]],
      ["owner", "NetSuite::RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "NetSuite::RecordRef", [0, 1]],
      ["audience", "NetSuite::RecordRef", [0, 1]],
      ["offer", "NetSuite::RecordRef", [0, 1]],
      ["promotionCode", "NetSuite::RecordRef", [0, 1]],
      ["itemList", "NetSuite::RecordRefList", [0, 1]],
      ["family", "NetSuite::RecordRef", [0, 1]],
      ["searchEngine", "NetSuite::RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "NetSuite::CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "NetSuite::CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "NetSuite::CampaignEventList", [0, 1]],
      ["eventResponseList", "NetSuite::CampaignEventResponseList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearch,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "campaignSearch"),
    :schema_element => [
      ["basic", "NetSuite::CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "NetSuite::EntitySearchBasic", [0, 1]],
      ["fileJoin", "NetSuite::FileSearchBasic", [0, 1]],
      ["messagesJoin", "NetSuite::MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "NetSuite::OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NetSuite::NoteSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignCategory,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignAudience,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignFamily,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSearchEngine,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignChannel,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "NetSuite::CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignOffer,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignResponse,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "NetSuite::RecordRef", [0, 1]],
      ["leadSource", "NetSuite::RecordRef", [0, 1]],
      ["campaignEvent", "NetSuite::RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "NetSuite::CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "NetSuite::CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignVertical,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CampaignSubscription,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCode,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "promotionCode"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "NetSuite::RecordRef", [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["useType", "NetSuite::PromotionCodeUseType", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["codePattern", "SOAP::SOAPString", [0, 1]],
      ["numberToGenerate", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "NetSuite::RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "NetSuite::PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "NetSuite::RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "NetSuite::PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["itemsList", "NetSuite::PromotionCodeItemsList", [0, 1]],
      ["partnersList", "NetSuite::PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::PromotionCodeSearch,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "promotionCodeSearch"),
    :schema_element => [
      ["basic", "NetSuite::PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCode,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "couponCode"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["promotion", "NetSuite::RecordRef"],
      ["code", "SOAP::SOAPString"],
      ["recipient", "NetSuite::RecordRef", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]],
      ["useCount", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::CouponCodeSearch,
    :schema_name => XSD::QName.new(NsMarketing_2013_2ListsWebservicesNetsuiteCom, "couponCodeSearch"),
    :schema_element => [
      ["basic", "NetSuite::CouponCodeSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlan,
    :schema_name => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "itemDemandPlan"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "NetSuite::DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "NetSuite::DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "NetSuite::DemandPlanMatrix", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemDemandPlanSearch,
    :schema_name => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "itemDemandPlanSearch"),
    :schema_element => [
      ["basic", "NetSuite::ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlan,
    :schema_name => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "itemSupplyPlan"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["location", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["units", "NetSuite::RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["orderList", "NetSuite::ItemSupplyPlanOrderList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ItemSupplyPlanSearch,
    :schema_name => XSD::QName.new(NsDemandplanning_2013_2TransactionsWebservicesNetsuiteCom, "itemSupplyPlanSearch"),
    :schema_element => [
      ["basic", "NetSuite::ItemSupplyPlanSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplate,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingCostTemplate"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingCostTemplateSearch,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingCostTemplateSearch"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRouting,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingRouting"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["subsidiary", "NetSuite::RecordRef", [0, 1]],
      ["item", "NetSuite::RecordRef", [0, 1]],
      ["locationList", "NetSuite::RecordRefList", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["routingStepList", "NetSuite::ManufacturingRoutingRoutingStepList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingRoutingSearch,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingRoutingSearch"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingRoutingSearchBasic", [0, 1]],
      ["itemJoin", "NetSuite::ItemSearchBasic", [0, 1]],
      ["locationJoin", "NetSuite::LocationSearchBasic", [0, 1]],
      ["manufacturingCostTemplateJoin", "NetSuite::ManufacturingCostTemplateSearchBasic", [0, 1]],
      ["manufacturingWorkCenterJoin", "NetSuite::EntityGroupSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTask,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingOperationTask"),
    :schema_element => [
      ["nullFieldList", ["NetSuite::NullField", XSD::QName.new(NsCore_2013_2PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingWorkCenter", "NetSuite::RecordRef", [0, 1]],
      ["manufacturingCostTemplate", "NetSuite::RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["operationSequence", "SOAP::SOAPLong", [0, 1]],
      ["workOrder", "NetSuite::RecordRef", [0, 1]],
      ["order", "NetSuite::RecordRef", [0, 1]],
      ["status", "NetSuite::ManufacturingOperationTaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["inputQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["completedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["setupTime", "SOAP::SOAPDouble", [0, 1]],
      ["runRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["machineResources", "SOAP::SOAPLong", [0, 1]],
      ["laborResources", "SOAP::SOAPLong", [0, 1]],
      ["costDetailList", "NetSuite::ManufacturingCostDetailList", [0, 1]],
      ["customFieldList", "NetSuite::CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NetSuite::ManufacturingOperationTaskSearch,
    :schema_name => XSD::QName.new(NsSupplychain_2013_2ListsWebservicesNetsuiteCom, "manufacturingOperationTaskSearch"),
    :schema_element => [
      ["basic", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["predecessorJoin", "NetSuite::ManufacturingOperationTaskSearchBasic", [0, 1]],
      ["userJoin", "NetSuite::EmployeeSearchBasic", [0, 1]],
      ["workOrderJoin", "NetSuite::TransactionSearchBasic", [0, 1]],
      ["customSearchJoin", "NetSuite::CustomSearchJoin[]", [0, nil]]
    ]
  )
end

end
